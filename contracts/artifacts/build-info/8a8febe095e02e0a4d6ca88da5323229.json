{
	"id": "8a8febe095e02e0a4d6ca88da5323229",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Worapakorn_Coin0_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: contracts/Worapakorn_Coin.sol\n\n\npragma solidity ^0.8.21;\n\n\ncontract WorapakornToken is ERC20 {\n    uint public exchangeRateForOneEther = 10;\n    address public admin;\n\n    event Buy(address indexed from, uint tokens);\n    event ExchangeRateChanged(uint newRate);\n\n    constructor() ERC20(\"WorapakornToken\", \"WKT\") {\n        _mint(address(this), 90000000 * 10 ** decimals());\n        admin = msg.sender;\n    }\n\n    function buy() payable public {\n        uint tokenReceived = msg.value * exchangeRateForOneEther;\n        require(tokenReceived <= balanceOf(address(this)), \"Not enough tokens\");\n        _transfer(address(this), msg.sender, tokenReceived);\n        emit Buy(msg.sender, tokenReceived);\n    }\n\n    function setExchangeRate(uint newRate) public {\n        require(msg.sender == admin, \"Only admin can change the rate\");\n        exchangeRateForOneEther = newRate;\n        emit ExchangeRateChanged(newRate);\n    }\n\n    function withdraw() public {\n        require(msg.sender == admin, \"Only admin can withdraw\");\n        payable(admin).transfer(address(this).balance);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Worapakorn_Coin0_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Worapakorn_Coin0_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Worapakorn_Coin0_flattened.sol\":{\"keccak256\":\"0x07ed308e8edb7f31b214ee859bb14637f82c924bac2c6cae34ed744b748b58d3\",\"urls\":[\"bzz-raw://d1029eea7f5abea6e98f95aa1e81f1dda117a15ae3f7a4e429570e0905599f20\",\"dweb:/ipfs/QmR4nRzEvMfbdPANXUSgD8XiwrcxVqjdg1JxWxy6YssrB5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Worapakorn_Coin0_flattened.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Worapakorn_Coin0_flattened.sol\":{\"keccak256\":\"0x07ed308e8edb7f31b214ee859bb14637f82c924bac2c6cae34ed744b748b58d3\",\"urls\":[\"bzz-raw://d1029eea7f5abea6e98f95aa1e81f1dda117a15ae3f7a4e429570e0905599f20\",\"dweb:/ipfs/QmR4nRzEvMfbdPANXUSgD8XiwrcxVqjdg1JxWxy6YssrB5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 271,
								"contract": "contracts/Worapakorn_Coin0_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 277,
								"contract": "contracts/Worapakorn_Coin0_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 279,
								"contract": "contracts/Worapakorn_Coin0_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 281,
								"contract": "contracts/Worapakorn_Coin0_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 283,
								"contract": "contracts/Worapakorn_Coin0_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Worapakorn_Coin0_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Worapakorn_Coin0_flattened.sol\":{\"keccak256\":\"0x07ed308e8edb7f31b214ee859bb14637f82c924bac2c6cae34ed744b748b58d3\",\"urls\":[\"bzz-raw://d1029eea7f5abea6e98f95aa1e81f1dda117a15ae3f7a4e429570e0905599f20\",\"dweb:/ipfs/QmR4nRzEvMfbdPANXUSgD8XiwrcxVqjdg1JxWxy6YssrB5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Worapakorn_Coin0_flattened.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Worapakorn_Coin0_flattened.sol\":{\"keccak256\":\"0x07ed308e8edb7f31b214ee859bb14637f82c924bac2c6cae34ed744b748b58d3\",\"urls\":[\"bzz-raw://d1029eea7f5abea6e98f95aa1e81f1dda117a15ae3f7a4e429570e0905599f20\",\"dweb:/ipfs/QmR4nRzEvMfbdPANXUSgD8XiwrcxVqjdg1JxWxy6YssrB5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Worapakorn_Coin0_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Worapakorn_Coin0_flattened.sol\":{\"keccak256\":\"0x07ed308e8edb7f31b214ee859bb14637f82c924bac2c6cae34ed744b748b58d3\",\"urls\":[\"bzz-raw://d1029eea7f5abea6e98f95aa1e81f1dda117a15ae3f7a4e429570e0905599f20\",\"dweb:/ipfs/QmR4nRzEvMfbdPANXUSgD8XiwrcxVqjdg1JxWxy6YssrB5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Worapakorn_Coin0_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Worapakorn_Coin0_flattened.sol\":{\"keccak256\":\"0x07ed308e8edb7f31b214ee859bb14637f82c924bac2c6cae34ed744b748b58d3\",\"urls\":[\"bzz-raw://d1029eea7f5abea6e98f95aa1e81f1dda117a15ae3f7a4e429570e0905599f20\",\"dweb:/ipfs/QmR4nRzEvMfbdPANXUSgD8XiwrcxVqjdg1JxWxy6YssrB5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Worapakorn_Coin0_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Worapakorn_Coin0_flattened.sol\":{\"keccak256\":\"0x07ed308e8edb7f31b214ee859bb14637f82c924bac2c6cae34ed744b748b58d3\",\"urls\":[\"bzz-raw://d1029eea7f5abea6e98f95aa1e81f1dda117a15ae3f7a4e429570e0905599f20\",\"dweb:/ipfs/QmR4nRzEvMfbdPANXUSgD8XiwrcxVqjdg1JxWxy6YssrB5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"WorapakornToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "Buy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newRate",
									"type": "uint256"
								}
							],
							"name": "ExchangeRateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buy",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exchangeRateForOneEther",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newRate",
									"type": "uint256"
								}
							],
							"name": "setExchangeRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Worapakorn_Coin0_flattened.sol\":21970:22995  contract WorapakornToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":22048:22050  10 */\n  0x0a\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":22010:22050  uint public exchangeRateForOneEther = 10 */\n  0x05\n  sstore\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":22179:22319  constructor() ERC20(\"WorapakornToken\", \"WKT\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":12654:12767  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0f\n  dup2\n  mstore\n  0x20\n  add\n  0x576f726170616b6f726e546f6b656e0000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x574b540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":12728:12733  name_ */\n  dup2\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":12720:12725  _name */\n  0x03\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":12720:12733  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":12753:12760  symbol_ */\n  dup1\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":12743:12750  _symbol */\n  0x04\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":12743:12760  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":12654:12767  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":22235:22284  _mint(address(this), 90000000 * 10 ** decimals()) */\n  tag_9\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":22249:22253  this */\n  address\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":22273:22283  decimals() */\n  tag_10\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":22273:22281  decimals */\n  shl(0x20, tag_11)\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":22273:22283  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":22267:22269  10 */\n  0x0a\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":22267:22283  10 ** decimals() */\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":22256:22264  90000000 */\n  0x055d4a80\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":22256:22283  90000000 * 10 ** decimals() */\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":22235:22240  _mint */\n  shl(0x20, tag_16)\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":22235:22284  _mint(address(this), 90000000 * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":22302:22312  msg.sender */\n  caller\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":22294:22299  admin */\n  0x06\n  0x00\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":22294:22312  admin = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":21970:22995  contract WorapakornToken is ERC20 {... */\n  jump(tag_17)\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":13760:13842  function decimals() public view virtual returns (uint8) {... */\ntag_11:\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":13809:13814  uint8 */\n  0x00\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":13833:13835  18 */\n  0x12\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":13826:13835  return 18 */\n  swap1\n  pop\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":13760:13842  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18479:18687  function _mint(address account, uint256 value) internal {... */\ntag_16:\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18568:18569  0 */\n  0x00\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18549:18570  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18549:18556  account */\n  dup3\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18549:18570  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18545:18636  if (account == address(0)) {... */\n  tag_20\n  jumpi\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18622:18623  0 */\n  0x00\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18593:18625  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18545:18636  if (account == address(0)) {... */\ntag_20:\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18645:18680  _update(address(0), account, value) */\n  tag_23\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18661:18662  0 */\n  0x00\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18665:18672  account */\n  dup4\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18674:18679  value */\n  dup4\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18645:18652  _update */\n  shl(0x20, tag_24)\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18645:18680  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18479:18687  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17029:18136  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_24:\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17134:17135  0 */\n  0x00\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17118:17136  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17118:17122  from */\n  dup4\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17118:17136  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17114:17654  if (from == address(0)) {... */\n  tag_26\n  jumpi\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17270:17275  value */\n  dup1\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17254:17266  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17254:17275  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17114:17654  if (from == address(0)) {... */\n  jump(tag_29)\ntag_26:\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17306:17325  uint256 fromBalance */\n  0x00\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17328:17337  _balances */\n  dup1\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17328:17343  _balances[from] */\n  0x00\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17338:17342  from */\n  dup6\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17328:17343  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17306:17343  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17375:17380  value */\n  dup2\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17361:17372  fromBalance */\n  dup2\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17361:17380  fromBalance < value */\n  lt\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17357:17472  if (fromBalance < value) {... */\n  iszero\n  tag_30\n  jumpi\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17432:17436  from */\n  dup4\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17438:17449  fromBalance */\n  dup2\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17451:17456  value */\n  dup4\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17407:17457  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_31\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17357:17472  if (fromBalance < value) {... */\ntag_30:\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17624:17629  value */\n  dup2\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17610:17621  fromBalance */\n  dup2\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17610:17629  fromBalance - value */\n  sub\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17592:17601  _balances */\n  0x00\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17592:17607  _balances[from] */\n  dup1\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17602:17606  from */\n  dup7\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17592:17607  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17592:17629  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17292:17654  {... */\n  pop\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17114:17654  if (from == address(0)) {... */\ntag_29:\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17682:17683  0 */\n  0x00\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17668:17684  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17668:17670  to */\n  dup3\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17668:17684  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17664:18089  if (to == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17847:17852  value */\n  dup1\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17831:17843  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17831:17852  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17664:18089  if (to == address(0)) {... */\n  jump(tag_34)\ntag_33:\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18059:18064  value */\n  dup1\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18042:18051  _balances */\n  0x00\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18042:18055  _balances[to] */\n  dup1\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18052:18054  to */\n  dup5\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18042:18055  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18042:18064  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17664:18089  if (to == address(0)) {... */\ntag_34:\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18119:18121  to */\n  dup2\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18104:18129  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18113:18117  from */\n  dup4\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18104:18129  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18123:18128  value */\n  dup4\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":18104:18129  Transfer(from, to, value) */\n  mload(0x40)\n  tag_35\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":17029:18136  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_37:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_38:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_39:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_40:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_71\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_71:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_73\n  tag_39\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":714:798   */\ntag_72:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_41:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_42:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_43:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_44:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_78\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_43\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1429:1468   */\n  tag_79\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_45:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_46:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_47:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_83\n    /* \"#utility.yul\":1818:1852   */\n  tag_84\n    /* \"#utility.yul\":1827:1851   */\n  tag_85\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_45\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":1818:1852   */\n  tag_46\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1800:1853   */\n  tag_45\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_48:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_49:\n    /* \"#utility.yul\":2056:2095   */\n  tag_88\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_47\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":2117:2208   */\n  tag_89\n    /* \"#utility.yul\":2166:2207   */\n  tag_90\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_48\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_44\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_50:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_51:\n    /* \"#utility.yul\":2377:2409   */\n  tag_93\n  tag_50\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2418:2483   */\n  tag_94\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_49\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_52:\n    /* \"#utility.yul\":2555:2675   */\ntag_96:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_99\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_51\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_96)\ntag_98:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_53:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_102\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_41\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2906:2935   */\n  tag_103\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_42\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_104:\n    /* \"#utility.yul\":3133:3213   */\n  tag_105\n    /* \"#utility.yul\":3189:3211   */\n  tag_106\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_42\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_52\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_101:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_54:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_55:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_109\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_54\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_56:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_111\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_55\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_113\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_37\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_115\n  tag_38\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":4038:4094   */\ntag_114:\n    /* \"#utility.yul\":4118:4156   */\n  tag_116\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_40\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":4203:4270   */\n  tag_117\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_53\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_119\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_120:\n    /* \"#utility.yul\":5144:5211   */\n  tag_121\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_56\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_118)\n    /* \"#utility.yul\":4365:4983   */\ntag_119:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_122\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_41\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_123:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_123)\ntag_125:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_127\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_55\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_126:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_118:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5414   */\ntag_57:\n    /* \"#utility.yul\":5282:5359   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5279:5280   */\n  0x00\n    /* \"#utility.yul\":5272:5360   */\n  mstore\n    /* \"#utility.yul\":5379:5383   */\n  0x11\n    /* \"#utility.yul\":5376:5377   */\n  0x04\n    /* \"#utility.yul\":5369:5384   */\n  mstore\n    /* \"#utility.yul\":5403:5407   */\n  0x24\n    /* \"#utility.yul\":5400:5401   */\n  0x00\n    /* \"#utility.yul\":5393:5408   */\n  revert\n    /* \"#utility.yul\":5420:5522   */\ntag_58:\n    /* \"#utility.yul\":5462:5470   */\n  0x00\n    /* \"#utility.yul\":5509:5514   */\n  dup2\n    /* \"#utility.yul\":5506:5507   */\n  0x01\n    /* \"#utility.yul\":5502:5515   */\n  shr\n    /* \"#utility.yul\":5481:5515   */\n  swap1\n  pop\n    /* \"#utility.yul\":5420:5522   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5528:6376   */\ntag_59:\n    /* \"#utility.yul\":5589:5594   */\n  0x00\n    /* \"#utility.yul\":5596:5600   */\n  dup1\n    /* \"#utility.yul\":5620:5626   */\n  dup3\n    /* \"#utility.yul\":5611:5626   */\n  swap2\n  pop\n    /* \"#utility.yul\":5644:5649   */\n  dup4\n    /* \"#utility.yul\":5635:5649   */\n  swap1\n  pop\n    /* \"#utility.yul\":5658:6370   */\ntag_131:\n    /* \"#utility.yul\":5679:5680   */\n  0x01\n    /* \"#utility.yul\":5669:5677   */\n  dup6\n    /* \"#utility.yul\":5666:5681   */\n  gt\n    /* \"#utility.yul\":5658:6370   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":5774:5778   */\n  dup1\n    /* \"#utility.yul\":5769:5772   */\n  dup7\n    /* \"#utility.yul\":5765:5779   */\n  div\n    /* \"#utility.yul\":5759:5763   */\n  dup2\n    /* \"#utility.yul\":5756:5780   */\n  gt\n    /* \"#utility.yul\":5753:5803   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":5783:5801   */\n  tag_135\n  tag_57\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5753:5803   */\ntag_134:\n    /* \"#utility.yul\":5833:5834   */\n  0x01\n    /* \"#utility.yul\":5823:5831   */\n  dup6\n    /* \"#utility.yul\":5819:5835   */\n  and\n    /* \"#utility.yul\":5816:6267   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":6248:6252   */\n  dup1\n    /* \"#utility.yul\":6241:6246   */\n  dup3\n    /* \"#utility.yul\":6237:6253   */\n  mul\n    /* \"#utility.yul\":6228:6253   */\n  swap2\n  pop\n    /* \"#utility.yul\":5816:6267   */\ntag_136:\n    /* \"#utility.yul\":6298:6302   */\n  dup1\n    /* \"#utility.yul\":6292:6296   */\n  dup2\n    /* \"#utility.yul\":6288:6303   */\n  mul\n    /* \"#utility.yul\":6280:6303   */\n  swap1\n  pop\n    /* \"#utility.yul\":6328:6360   */\n  tag_137\n    /* \"#utility.yul\":6351:6359   */\n  dup6\n    /* \"#utility.yul\":6328:6360   */\n  tag_58\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":6316:6360   */\n  swap5\n  pop\n    /* \"#utility.yul\":5658:6370   */\n  jump(tag_131)\ntag_133:\n    /* \"#utility.yul\":5528:6376   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6382:7455   */\ntag_60:\n    /* \"#utility.yul\":6436:6441   */\n  0x00\n    /* \"#utility.yul\":6627:6635   */\n  dup3\n    /* \"#utility.yul\":6617:6657   */\n  tag_139\n  jumpi\n    /* \"#utility.yul\":6648:6649   */\n  0x01\n    /* \"#utility.yul\":6639:6649   */\n  swap1\n  pop\n    /* \"#utility.yul\":6650:6655   */\n  jump(tag_138)\n    /* \"#utility.yul\":6617:6657   */\ntag_139:\n    /* \"#utility.yul\":6676:6680   */\n  dup2\n    /* \"#utility.yul\":6666:6702   */\n  tag_140\n  jumpi\n    /* \"#utility.yul\":6693:6694   */\n  0x00\n    /* \"#utility.yul\":6684:6694   */\n  swap1\n  pop\n    /* \"#utility.yul\":6695:6700   */\n  jump(tag_138)\n    /* \"#utility.yul\":6666:6702   */\ntag_140:\n    /* \"#utility.yul\":6762:6766   */\n  dup2\n    /* \"#utility.yul\":6810:6811   */\n  0x01\n    /* \"#utility.yul\":6805:6832   */\n  dup2\n  eq\n  tag_142\n  jumpi\n    /* \"#utility.yul\":6846:6847   */\n  0x02\n    /* \"#utility.yul\":6841:7032   */\n  dup2\n  eq\n  tag_143\n  jumpi\n    /* \"#utility.yul\":6755:7032   */\n  jump(tag_141)\n    /* \"#utility.yul\":6805:6832   */\ntag_142:\n    /* \"#utility.yul\":6823:6824   */\n  0x01\n    /* \"#utility.yul\":6814:6824   */\n  swap2\n  pop\n    /* \"#utility.yul\":6825:6830   */\n  pop\n  jump(tag_138)\n    /* \"#utility.yul\":6841:7032   */\ntag_143:\n    /* \"#utility.yul\":6886:6889   */\n  0xff\n    /* \"#utility.yul\":6876:6884   */\n  dup5\n    /* \"#utility.yul\":6873:6890   */\n  gt\n    /* \"#utility.yul\":6870:6913   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":6893:6911   */\n  tag_145\n  tag_57\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6870:6913   */\ntag_144:\n    /* \"#utility.yul\":6942:6950   */\n  dup4\n    /* \"#utility.yul\":6939:6940   */\n  0x02\n    /* \"#utility.yul\":6935:6951   */\n  exp\n    /* \"#utility.yul\":6926:6951   */\n  swap2\n  pop\n    /* \"#utility.yul\":6977:6980   */\n  dup5\n    /* \"#utility.yul\":6970:6975   */\n  dup3\n    /* \"#utility.yul\":6967:6981   */\n  gt\n    /* \"#utility.yul\":6964:7004   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":6984:7002   */\n  tag_147\n  tag_57\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":6964:7004   */\ntag_146:\n    /* \"#utility.yul\":7017:7022   */\n  pop\n  jump(tag_138)\n    /* \"#utility.yul\":6755:7032   */\ntag_141:\n  pop\n    /* \"#utility.yul\":7141:7143   */\n  0x20\n    /* \"#utility.yul\":7131:7139   */\n  dup4\n    /* \"#utility.yul\":7128:7144   */\n  lt\n    /* \"#utility.yul\":7122:7125   */\n  0x0133\n    /* \"#utility.yul\":7116:7120   */\n  dup4\n    /* \"#utility.yul\":7113:7126   */\n  lt\n    /* \"#utility.yul\":7109:7145   */\n  and\n    /* \"#utility.yul\":7091:7093   */\n  0x4e\n    /* \"#utility.yul\":7081:7089   */\n  dup5\n    /* \"#utility.yul\":7078:7094   */\n  lt\n    /* \"#utility.yul\":7073:7075   */\n  0x0b\n    /* \"#utility.yul\":7067:7071   */\n  dup5\n    /* \"#utility.yul\":7064:7076   */\n  lt\n    /* \"#utility.yul\":7060:7095   */\n  and\n    /* \"#utility.yul\":7044:7155   */\n  or\n    /* \"#utility.yul\":7041:7287   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":7197:7205   */\n  dup3\n    /* \"#utility.yul\":7191:7195   */\n  dup3\n    /* \"#utility.yul\":7187:7206   */\n  exp\n    /* \"#utility.yul\":7178:7206   */\n  swap1\n  pop\n    /* \"#utility.yul\":7232:7235   */\n  dup4\n    /* \"#utility.yul\":7225:7230   */\n  dup2\n    /* \"#utility.yul\":7222:7236   */\n  gt\n    /* \"#utility.yul\":7219:7259   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":7239:7257   */\n  tag_150\n  tag_57\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":7219:7259   */\ntag_149:\n    /* \"#utility.yul\":7272:7277   */\n  jump(tag_138)\n    /* \"#utility.yul\":7041:7287   */\ntag_148:\n    /* \"#utility.yul\":7312:7354   */\n  tag_151\n    /* \"#utility.yul\":7350:7353   */\n  dup5\n    /* \"#utility.yul\":7340:7348   */\n  dup5\n    /* \"#utility.yul\":7334:7338   */\n  dup5\n    /* \"#utility.yul\":7331:7332   */\n  0x01\n    /* \"#utility.yul\":7312:7354   */\n  tag_59\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":7297:7354   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":7386:7390   */\n  dup2\n    /* \"#utility.yul\":7381:7384   */\n  dup5\n    /* \"#utility.yul\":7377:7391   */\n  div\n    /* \"#utility.yul\":7370:7375   */\n  dup2\n    /* \"#utility.yul\":7367:7392   */\n  gt\n    /* \"#utility.yul\":7364:7415   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":7395:7413   */\n  tag_153\n  tag_57\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":7364:7415   */\ntag_152:\n    /* \"#utility.yul\":7444:7448   */\n  dup2\n    /* \"#utility.yul\":7437:7442   */\n  dup2\n    /* \"#utility.yul\":7433:7449   */\n  mul\n    /* \"#utility.yul\":7424:7449   */\n  swap1\n  pop\n    /* \"#utility.yul\":6382:7455   */\ntag_138:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7461:7547   */\ntag_61:\n    /* \"#utility.yul\":7496:7503   */\n  0x00\n    /* \"#utility.yul\":7536:7540   */\n  0xff\n    /* \"#utility.yul\":7529:7534   */\n  dup3\n    /* \"#utility.yul\":7525:7541   */\n  and\n    /* \"#utility.yul\":7514:7541   */\n  swap1\n  pop\n    /* \"#utility.yul\":7461:7547   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7553:7834   */\ntag_13:\n    /* \"#utility.yul\":7611:7616   */\n  0x00\n    /* \"#utility.yul\":7635:7658   */\n  tag_156\n    /* \"#utility.yul\":7653:7657   */\n  dup3\n    /* \"#utility.yul\":7635:7658   */\n  tag_45\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":7627:7658   */\n  swap2\n  pop\n    /* \"#utility.yul\":7679:7704   */\n  tag_157\n    /* \"#utility.yul\":7695:7703   */\n  dup4\n    /* \"#utility.yul\":7679:7704   */\n  tag_61\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":7667:7704   */\n  swap3\n  pop\n    /* \"#utility.yul\":7723:7827   */\n  tag_158\n    /* \"#utility.yul\":7760:7826   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":7750:7758   */\n  dup5\n    /* \"#utility.yul\":7744:7748   */\n  dup5\n    /* \"#utility.yul\":7723:7827   */\n  tag_60\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":7714:7827   */\n  swap1\n  pop\n    /* \"#utility.yul\":7553:7834   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7840:8250   */\ntag_15:\n    /* \"#utility.yul\":7880:7887   */\n  0x00\n    /* \"#utility.yul\":7903:7923   */\n  tag_160\n    /* \"#utility.yul\":7921:7922   */\n  dup3\n    /* \"#utility.yul\":7903:7923   */\n  tag_45\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7898:7923   */\n  swap2\n  pop\n    /* \"#utility.yul\":7937:7957   */\n  tag_161\n    /* \"#utility.yul\":7955:7956   */\n  dup4\n    /* \"#utility.yul\":7937:7957   */\n  tag_45\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7932:7957   */\n  swap3\n  pop\n    /* \"#utility.yul\":7992:7993   */\n  dup3\n    /* \"#utility.yul\":7989:7990   */\n  dup3\n    /* \"#utility.yul\":7985:7994   */\n  mul\n    /* \"#utility.yul\":8014:8044   */\n  tag_162\n    /* \"#utility.yul\":8032:8043   */\n  dup2\n    /* \"#utility.yul\":8014:8044   */\n  tag_45\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":8003:8044   */\n  swap2\n  pop\n    /* \"#utility.yul\":8193:8194   */\n  dup3\n    /* \"#utility.yul\":8184:8191   */\n  dup3\n    /* \"#utility.yul\":8180:8195   */\n  div\n    /* \"#utility.yul\":8177:8178   */\n  dup5\n    /* \"#utility.yul\":8174:8196   */\n  eq\n    /* \"#utility.yul\":8154:8155   */\n  dup4\n    /* \"#utility.yul\":8147:8156   */\n  iszero\n    /* \"#utility.yul\":8127:8210   */\n  or\n    /* \"#utility.yul\":8104:8243   */\n  tag_163\n  jumpi\n    /* \"#utility.yul\":8223:8241   */\n  tag_164\n  tag_57\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":8104:8243   */\ntag_163:\n    /* \"#utility.yul\":7888:8250   */\n  pop\n    /* \"#utility.yul\":7840:8250   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8256:8382   */\ntag_62:\n    /* \"#utility.yul\":8293:8300   */\n  0x00\n    /* \"#utility.yul\":8333:8375   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8326:8331   */\n  dup3\n    /* \"#utility.yul\":8322:8376   */\n  and\n    /* \"#utility.yul\":8311:8376   */\n  swap1\n  pop\n    /* \"#utility.yul\":8256:8382   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8388:8484   */\ntag_63:\n    /* \"#utility.yul\":8425:8432   */\n  0x00\n    /* \"#utility.yul\":8454:8478   */\n  tag_167\n    /* \"#utility.yul\":8472:8477   */\n  dup3\n    /* \"#utility.yul\":8454:8478   */\n  tag_62\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":8443:8478   */\n  swap1\n  pop\n    /* \"#utility.yul\":8388:8484   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8490:8608   */\ntag_64:\n    /* \"#utility.yul\":8577:8601   */\n  tag_169\n    /* \"#utility.yul\":8595:8600   */\n  dup2\n    /* \"#utility.yul\":8577:8601   */\n  tag_63\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":8572:8575   */\n  dup3\n    /* \"#utility.yul\":8565:8602   */\n  mstore\n    /* \"#utility.yul\":8490:8608   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8614:8836   */\ntag_22:\n    /* \"#utility.yul\":8707:8711   */\n  0x00\n    /* \"#utility.yul\":8745:8747   */\n  0x20\n    /* \"#utility.yul\":8734:8743   */\n  dup3\n    /* \"#utility.yul\":8730:8748   */\n  add\n    /* \"#utility.yul\":8722:8748   */\n  swap1\n  pop\n    /* \"#utility.yul\":8758:8829   */\n  tag_171\n    /* \"#utility.yul\":8826:8827   */\n  0x00\n    /* \"#utility.yul\":8815:8824   */\n  dup4\n    /* \"#utility.yul\":8811:8828   */\n  add\n    /* \"#utility.yul\":8802:8808   */\n  dup5\n    /* \"#utility.yul\":8758:8829   */\n  tag_64\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8614:8836   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8842:9033   */\ntag_28:\n    /* \"#utility.yul\":8882:8885   */\n  0x00\n    /* \"#utility.yul\":8901:8921   */\n  tag_173\n    /* \"#utility.yul\":8919:8920   */\n  dup3\n    /* \"#utility.yul\":8901:8921   */\n  tag_45\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8896:8921   */\n  swap2\n  pop\n    /* \"#utility.yul\":8935:8955   */\n  tag_174\n    /* \"#utility.yul\":8953:8954   */\n  dup4\n    /* \"#utility.yul\":8935:8955   */\n  tag_45\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":8930:8955   */\n  swap3\n  pop\n    /* \"#utility.yul\":8978:8979   */\n  dup3\n    /* \"#utility.yul\":8975:8976   */\n  dup3\n    /* \"#utility.yul\":8971:8980   */\n  add\n    /* \"#utility.yul\":8964:8980   */\n  swap1\n  pop\n    /* \"#utility.yul\":8999:9002   */\n  dup1\n    /* \"#utility.yul\":8996:8997   */\n  dup3\n    /* \"#utility.yul\":8993:9003   */\n  gt\n    /* \"#utility.yul\":8990:9026   */\n  iszero\n  tag_175\n  jumpi\n    /* \"#utility.yul\":9006:9024   */\n  tag_176\n  tag_57\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8990:9026   */\ntag_175:\n    /* \"#utility.yul\":8842:9033   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9039:9157   */\ntag_65:\n    /* \"#utility.yul\":9126:9150   */\n  tag_178\n    /* \"#utility.yul\":9144:9149   */\n  dup2\n    /* \"#utility.yul\":9126:9150   */\n  tag_45\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":9121:9124   */\n  dup3\n    /* \"#utility.yul\":9114:9151   */\n  mstore\n    /* \"#utility.yul\":9039:9157   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9163:9605   */\ntag_32:\n    /* \"#utility.yul\":9312:9316   */\n  0x00\n    /* \"#utility.yul\":9350:9352   */\n  0x60\n    /* \"#utility.yul\":9339:9348   */\n  dup3\n    /* \"#utility.yul\":9335:9353   */\n  add\n    /* \"#utility.yul\":9327:9353   */\n  swap1\n  pop\n    /* \"#utility.yul\":9363:9434   */\n  tag_180\n    /* \"#utility.yul\":9431:9432   */\n  0x00\n    /* \"#utility.yul\":9420:9429   */\n  dup4\n    /* \"#utility.yul\":9416:9433   */\n  add\n    /* \"#utility.yul\":9407:9413   */\n  dup7\n    /* \"#utility.yul\":9363:9434   */\n  tag_64\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":9444:9516   */\n  tag_181\n    /* \"#utility.yul\":9512:9514   */\n  0x20\n    /* \"#utility.yul\":9501:9510   */\n  dup4\n    /* \"#utility.yul\":9497:9515   */\n  add\n    /* \"#utility.yul\":9488:9494   */\n  dup6\n    /* \"#utility.yul\":9444:9516   */\n  tag_65\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":9526:9598   */\n  tag_182\n    /* \"#utility.yul\":9594:9596   */\n  0x40\n    /* \"#utility.yul\":9583:9592   */\n  dup4\n    /* \"#utility.yul\":9579:9597   */\n  add\n    /* \"#utility.yul\":9570:9576   */\n  dup5\n    /* \"#utility.yul\":9526:9598   */\n  tag_65\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":9163:9605   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9611:9833   */\ntag_36:\n    /* \"#utility.yul\":9704:9708   */\n  0x00\n    /* \"#utility.yul\":9742:9744   */\n  0x20\n    /* \"#utility.yul\":9731:9740   */\n  dup3\n    /* \"#utility.yul\":9727:9745   */\n  add\n    /* \"#utility.yul\":9719:9745   */\n  swap1\n  pop\n    /* \"#utility.yul\":9755:9826   */\n  tag_184\n    /* \"#utility.yul\":9823:9824   */\n  0x00\n    /* \"#utility.yul\":9812:9821   */\n  dup4\n    /* \"#utility.yul\":9808:9825   */\n  add\n    /* \"#utility.yul\":9799:9805   */\n  dup5\n    /* \"#utility.yul\":9755:9826   */\n  tag_65\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":9611:9833   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Worapakorn_Coin0_flattened.sol\":21970:22995  contract WorapakornToken is ERC20 {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21970:22995  contract WorapakornToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdb068e0e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_17:\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa6f2ae3a\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_16:\n      dup1\n      0x18160ddd\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x02b6c5af\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22010:22050  uint public exchangeRateForOneEther = 10 */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":12832:12921  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15051:15237  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":13902:13999  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15797:16041  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":13760:13842  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22838:22993  function withdraw() public {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14057:14173  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":13034:13127  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22325:22615  function buy() payable public {... */\n    tag_11:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14368:14546  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22621:22832  function setExchangeRate(uint newRate) public {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14604:14744  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22056:22076  address public admin */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22010:22050  uint public exchangeRateForOneEther = 10 */\n    tag_21:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":12832:12921  function name() public view virtual returns (string memory) {... */\n    tag_26:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":12877:12890  string memory */\n      0x60\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":12909:12914  _name */\n      0x03\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":12902:12914  return _name */\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_89\n      jump\t// in\n    tag_90:\n      dup1\n      iszero\n      tag_91\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_92\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_91)\n    tag_92:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_93:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_93\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":12832:12921  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15051:15237  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_33:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15124:15128  bool */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15140:15153  address owner */\n      dup1\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15156:15168  _msgSender() */\n      tag_95\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15156:15166  _msgSender */\n      tag_96\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15156:15168  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15140:15168  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15178:15209  _approve(owner, spender, value) */\n      tag_97\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15187:15192  owner */\n      dup2\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15194:15201  spender */\n      dup6\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15203:15208  value */\n      dup6\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15178:15186  _approve */\n      tag_98\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15178:15209  _approve(owner, spender, value) */\n      jump\t// in\n    tag_97:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15226:15230  true */\n      0x01\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15219:15230  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15051:15237  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":13902:13999  function totalSupply() public view virtual returns (uint256) {... */\n    tag_38:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":13954:13961  uint256 */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":13980:13992  _totalSupply */\n      sload(0x02)\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":13973:13992  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":13902:13999  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15797:16041  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_44:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15884:15888  bool */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15900:15915  address spender */\n      dup1\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15918:15930  _msgSender() */\n      tag_101\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15918:15928  _msgSender */\n      tag_96\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15918:15930  _msgSender() */\n      jump\t// in\n    tag_101:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15900:15930  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15940:15977  _spendAllowance(from, spender, value) */\n      tag_102\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15956:15960  from */\n      dup6\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15962:15969  spender */\n      dup3\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15971:15976  value */\n      dup6\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15940:15955  _spendAllowance */\n      tag_103\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15940:15977  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_102:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15987:16013  _transfer(from, to, value) */\n      tag_104\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15997:16001  from */\n      dup6\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16003:16005  to */\n      dup6\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16007:16012  value */\n      dup6\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15987:15996  _transfer */\n      tag_105\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15987:16013  _transfer(from, to, value) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16030:16034  true */\n      0x01\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16023:16034  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":15797:16041  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":13760:13842  function decimals() public view virtual returns (uint8) {... */\n    tag_48:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":13809:13814  uint8 */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":13833:13835  18 */\n      0x12\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":13826:13835  return 18 */\n      swap1\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":13760:13842  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22838:22993  function withdraw() public {... */\n    tag_53:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22897:22902  admin */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22883:22902  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22883:22893  msg.sender */\n      caller\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22883:22902  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22875:22930  require(msg.sender == admin, \"Only admin can withdraw\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22948:22953  admin */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22940:22963  payable(admin).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22940:22986  payable(admin).transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22964:22985  address(this).balance */\n      selfbalance\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22940:22986  payable(admin).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22838:22993  function withdraw() public {... */\n      jump\t// out\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14057:14173  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_58:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14122:14129  uint256 */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14148:14157  _balances */\n      dup1\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14148:14166  _balances[account] */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14158:14165  account */\n      dup4\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14148:14166  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14141:14166  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14057:14173  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":13034:13127  function symbol() public view virtual returns (string memory) {... */\n    tag_62:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":13081:13094  string memory */\n      0x60\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":13113:13120  _symbol */\n      0x04\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":13106:13120  return _symbol */\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_89\n      jump\t// in\n    tag_115:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_89\n      jump\t// in\n    tag_116:\n      dup1\n      iszero\n      tag_117\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_118\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_117)\n    tag_118:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_119:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_119\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":13034:13127  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22325:22615  function buy() payable public {... */\n    tag_65:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22365:22383  uint tokenReceived */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22398:22421  exchangeRateForOneEther */\n      sload(0x05)\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22386:22395  msg.value */\n      callvalue\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22386:22421  msg.value * exchangeRateForOneEther */\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22365:22421  uint tokenReceived = msg.value * exchangeRateForOneEther */\n      swap1\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22456:22480  balanceOf(address(this)) */\n      tag_123\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22474:22478  this */\n      address\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22456:22465  balanceOf */\n      tag_58\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22456:22480  balanceOf(address(this)) */\n      jump\t// in\n    tag_123:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22439:22452  tokenReceived */\n      dup2\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22439:22480  tokenReceived <= balanceOf(address(this)) */\n      gt\n      iszero\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22431:22502  require(tokenReceived <= balanceOf(address(this)), \"Not enough tokens\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22512:22563  _transfer(address(this), msg.sender, tokenReceived) */\n      tag_127\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22530:22534  this */\n      address\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22537:22547  msg.sender */\n      caller\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22549:22562  tokenReceived */\n      dup4\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22512:22521  _transfer */\n      tag_105\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22512:22563  _transfer(address(this), msg.sender, tokenReceived) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22582:22592  msg.sender */\n      caller\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22578:22608  Buy(msg.sender, tokenReceived) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22594:22607  tokenReceived */\n      dup3\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22578:22608  Buy(msg.sender, tokenReceived) */\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22355:22615  {... */\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22325:22615  function buy() payable public {... */\n      jump\t// out\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14368:14546  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_69:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14437:14441  bool */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14453:14466  address owner */\n      dup1\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14469:14481  _msgSender() */\n      tag_130\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14469:14479  _msgSender */\n      tag_96\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14469:14481  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14453:14481  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14491:14518  _transfer(owner, to, value) */\n      tag_131\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14501:14506  owner */\n      dup2\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14508:14510  to */\n      dup6\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14512:14517  value */\n      dup6\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14491:14500  _transfer */\n      tag_105\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14491:14518  _transfer(owner, to, value) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14535:14539  true */\n      0x01\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14528:14539  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14368:14546  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22621:22832  function setExchangeRate(uint newRate) public {... */\n    tag_75:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22699:22704  admin */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22685:22704  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22685:22695  msg.sender */\n      caller\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22685:22704  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22677:22739  require(msg.sender == admin, \"Only admin can change the rate\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22775:22782  newRate */\n      dup1\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22749:22772  exchangeRateForOneEther */\n      0x05\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22749:22782  exchangeRateForOneEther = newRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22797:22825  ExchangeRateChanged(newRate) */\n      0x8bc87b062b954eccd7f9017a070917f40c9c40af9ff4b41ed4f52a6a37199276\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22817:22824  newRate */\n      dup2\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22797:22825  ExchangeRateChanged(newRate) */\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22621:22832  function setExchangeRate(uint newRate) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14604:14744  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_80:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14684:14691  uint256 */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14710:14721  _allowances */\n      0x01\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14710:14728  _allowances[owner] */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14722:14727  owner */\n      dup5\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14710:14728  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14710:14737  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14729:14736  spender */\n      dup4\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14710:14737  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14703:14737  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":14604:14744  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":22056:22076  address public admin */\n    tag_84:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":7244:7340  function _msgSender() internal view virtual returns (address) {... */\n    tag_96:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":7297:7304  address */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":7323:7333  msg.sender */\n      caller\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":7316:7333  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":7244:7340  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":19747:19875  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_98:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":19831:19868  _approve(owner, spender, value, true) */\n      tag_140\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":19840:19845  owner */\n      dup4\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":19847:19854  spender */\n      dup4\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":19856:19861  value */\n      dup4\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":19863:19867  true */\n      0x01\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":19831:19839  _approve */\n      tag_141\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":19831:19868  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":19747:19875  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21421:21898  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_103:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21520:21544  uint256 currentAllowance */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21547:21572  allowance(owner, spender) */\n      tag_143\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21557:21562  owner */\n      dup5\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21564:21571  spender */\n      dup5\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21547:21556  allowance */\n      tag_80\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21547:21572  allowance(owner, spender) */\n      jump\t// in\n    tag_143:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21520:21572  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21606:21623  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21586:21602  currentAllowance */\n      dup2\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21586:21623  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21582:21892  if (currentAllowance != type(uint256).max) {... */\n      tag_144\n      jumpi\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21662:21667  value */\n      dup2\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21643:21659  currentAllowance */\n      dup2\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21643:21667  currentAllowance < value */\n      lt\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21639:21769  if (currentAllowance < value) {... */\n      iszero\n      tag_145\n      jumpi\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21721:21728  spender */\n      dup3\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21730:21746  currentAllowance */\n      dup2\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21748:21753  value */\n      dup4\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21694:21754  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21639:21769  if (currentAllowance < value) {... */\n    tag_145:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21810:21867  _approve(owner, spender, currentAllowance - value, false) */\n      tag_148\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21819:21824  owner */\n      dup5\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21826:21833  spender */\n      dup5\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21854:21859  value */\n      dup5\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21835:21851  currentAllowance */\n      dup5\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21835:21859  currentAllowance - value */\n      sub\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21861:21866  false */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21810:21818  _approve */\n      tag_141\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21810:21867  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21582:21892  if (currentAllowance != type(uint256).max) {... */\n    tag_144:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21510:21898  {... */\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21421:21898  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16414:16714  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_105:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16513:16514  0 */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16497:16515  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16497:16501  from */\n      dup4\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16497:16515  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16493:16579  if (from == address(0)) {... */\n      tag_150\n      jumpi\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16565:16566  0 */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16538:16568  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16493:16579  if (from == address(0)) {... */\n    tag_150:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16606:16607  0 */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16592:16608  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16592:16594  to */\n      dup3\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16592:16608  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16588:16674  if (to == address(0)) {... */\n      tag_152\n      jumpi\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16660:16661  0 */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16631:16663  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16588:16674  if (to == address(0)) {... */\n    tag_152:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16683:16707  _update(from, to, value) */\n      tag_154\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16691:16695  from */\n      dup4\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16697:16699  to */\n      dup4\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16701:16706  value */\n      dup4\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16683:16690  _update */\n      tag_155\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16683:16707  _update(from, to, value) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":16414:16714  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":20707:21139  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_141:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":20836:20837  0 */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":20819:20838  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":20819:20824  owner */\n      dup5\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":20819:20838  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":20815:20904  if (owner == address(0)) {... */\n      tag_157\n      jumpi\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":20890:20891  0 */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":20861:20893  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":20815:20904  if (owner == address(0)) {... */\n    tag_157:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":20936:20937  0 */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":20917:20938  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":20917:20924  spender */\n      dup4\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":20917:20938  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":20913:21003  if (spender == address(0)) {... */\n      tag_159\n      jumpi\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":20989:20990  0 */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":20961:20992  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":20913:21003  if (spender == address(0)) {... */\n    tag_159:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21042:21047  value */\n      dup2\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21012:21023  _allowances */\n      0x01\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21012:21030  _allowances[owner] */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21024:21029  owner */\n      dup7\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21012:21030  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21012:21039  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21031:21038  spender */\n      dup6\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21012:21039  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21012:21047  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21061:21070  emitEvent */\n      dup1\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21057:21133  if (emitEvent) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21107:21114  spender */\n      dup3\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21091:21122  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21100:21105  owner */\n      dup5\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21091:21122  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21116:21121  value */\n      dup5\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21091:21122  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_162\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":21057:21133  if (emitEvent) {... */\n    tag_161:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":20707:21139  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17029:18136  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_155:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17134:17135  0 */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17118:17136  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17118:17122  from */\n      dup4\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17118:17136  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17114:17654  if (from == address(0)) {... */\n      tag_164\n      jumpi\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17270:17275  value */\n      dup1\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17254:17266  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17254:17275  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_165\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17114:17654  if (from == address(0)) {... */\n      jump(tag_167)\n    tag_164:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17306:17325  uint256 fromBalance */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17328:17337  _balances */\n      dup1\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17328:17343  _balances[from] */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17338:17342  from */\n      dup6\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17328:17343  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17306:17343  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17375:17380  value */\n      dup2\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17361:17372  fromBalance */\n      dup2\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17361:17380  fromBalance < value */\n      lt\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17357:17472  if (fromBalance < value) {... */\n      iszero\n      tag_168\n      jumpi\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17432:17436  from */\n      dup4\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17438:17449  fromBalance */\n      dup2\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17451:17456  value */\n      dup4\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17407:17457  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17357:17472  if (fromBalance < value) {... */\n    tag_168:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17624:17629  value */\n      dup2\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17610:17621  fromBalance */\n      dup2\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17610:17629  fromBalance - value */\n      sub\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17592:17601  _balances */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17592:17607  _balances[from] */\n      dup1\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17602:17606  from */\n      dup7\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17592:17607  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17592:17629  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17292:17654  {... */\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17114:17654  if (from == address(0)) {... */\n    tag_167:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17682:17683  0 */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17668:17684  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17668:17670  to */\n      dup3\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17668:17684  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17664:18089  if (to == address(0)) {... */\n      tag_170\n      jumpi\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17847:17852  value */\n      dup1\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17831:17843  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17831:17852  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17664:18089  if (to == address(0)) {... */\n      jump(tag_171)\n    tag_170:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":18059:18064  value */\n      dup1\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":18042:18051  _balances */\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":18042:18055  _balances[to] */\n      dup1\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":18052:18054  to */\n      dup5\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":18042:18055  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":18042:18064  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17664:18089  if (to == address(0)) {... */\n    tag_171:\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":18119:18121  to */\n      dup2\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":18104:18129  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":18113:18117  from */\n      dup4\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":18104:18129  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":18123:18128  value */\n      dup4\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":18104:18129  Transfer(from, to, value) */\n      mload(0x40)\n      tag_172\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Worapakorn_Coin0_flattened.sol\":17029:18136  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_173:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_174:\n        /* \"#utility.yul\":177:201   */\n      tag_205\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_173\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_23:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_207\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_174\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:541   */\n    tag_175:\n        /* \"#utility.yul\":494:500   */\n      0x00\n        /* \"#utility.yul\":528:533   */\n      dup2\n        /* \"#utility.yul\":522:534   */\n      mload\n        /* \"#utility.yul\":512:534   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":547:716   */\n    tag_176:\n        /* \"#utility.yul\":631:642   */\n      0x00\n        /* \"#utility.yul\":665:671   */\n      dup3\n        /* \"#utility.yul\":660:663   */\n      dup3\n        /* \"#utility.yul\":653:672   */\n      mstore\n        /* \"#utility.yul\":705:709   */\n      0x20\n        /* \"#utility.yul\":700:703   */\n      dup3\n        /* \"#utility.yul\":696:710   */\n      add\n        /* \"#utility.yul\":681:710   */\n      swap1\n      pop\n        /* \"#utility.yul\":547:716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":722:968   */\n    tag_177:\n        /* \"#utility.yul\":803:804   */\n      0x00\n        /* \"#utility.yul\":813:926   */\n    tag_211:\n        /* \"#utility.yul\":827:833   */\n      dup4\n        /* \"#utility.yul\":824:825   */\n      dup2\n        /* \"#utility.yul\":821:834   */\n      lt\n        /* \"#utility.yul\":813:926   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":912:913   */\n      dup1\n        /* \"#utility.yul\":907:910   */\n      dup3\n        /* \"#utility.yul\":903:914   */\n      add\n        /* \"#utility.yul\":897:915   */\n      mload\n        /* \"#utility.yul\":893:894   */\n      dup2\n        /* \"#utility.yul\":888:891   */\n      dup5\n        /* \"#utility.yul\":884:895   */\n      add\n        /* \"#utility.yul\":877:916   */\n      mstore\n        /* \"#utility.yul\":849:851   */\n      0x20\n        /* \"#utility.yul\":846:847   */\n      dup2\n        /* \"#utility.yul\":842:852   */\n      add\n        /* \"#utility.yul\":837:852   */\n      swap1\n      pop\n        /* \"#utility.yul\":813:926   */\n      jump(tag_211)\n    tag_213:\n        /* \"#utility.yul\":960:961   */\n      0x00\n        /* \"#utility.yul\":951:957   */\n      dup5\n        /* \"#utility.yul\":946:949   */\n      dup5\n        /* \"#utility.yul\":942:958   */\n      add\n        /* \"#utility.yul\":935:962   */\n      mstore\n        /* \"#utility.yul\":784:968   */\n      pop\n        /* \"#utility.yul\":722:968   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":974:1076   */\n    tag_178:\n        /* \"#utility.yul\":1015:1021   */\n      0x00\n        /* \"#utility.yul\":1066:1068   */\n      0x1f\n        /* \"#utility.yul\":1062:1069   */\n      not\n        /* \"#utility.yul\":1057:1059   */\n      0x1f\n        /* \"#utility.yul\":1050:1055   */\n      dup4\n        /* \"#utility.yul\":1046:1060   */\n      add\n        /* \"#utility.yul\":1042:1070   */\n      and\n        /* \"#utility.yul\":1032:1070   */\n      swap1\n      pop\n        /* \"#utility.yul\":974:1076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1082:1459   */\n    tag_179:\n        /* \"#utility.yul\":1170:1173   */\n      0x00\n        /* \"#utility.yul\":1198:1237   */\n      tag_216\n        /* \"#utility.yul\":1231:1236   */\n      dup3\n        /* \"#utility.yul\":1198:1237   */\n      tag_175\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":1253:1324   */\n      tag_217\n        /* \"#utility.yul\":1317:1323   */\n      dup2\n        /* \"#utility.yul\":1312:1315   */\n      dup6\n        /* \"#utility.yul\":1253:1324   */\n      tag_176\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":1246:1324   */\n      swap4\n      pop\n        /* \"#utility.yul\":1333:1398   */\n      tag_218\n        /* \"#utility.yul\":1391:1397   */\n      dup2\n        /* \"#utility.yul\":1386:1389   */\n      dup6\n        /* \"#utility.yul\":1379:1383   */\n      0x20\n        /* \"#utility.yul\":1372:1377   */\n      dup7\n        /* \"#utility.yul\":1368:1384   */\n      add\n        /* \"#utility.yul\":1333:1398   */\n      tag_177\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":1423:1452   */\n      tag_219\n        /* \"#utility.yul\":1445:1451   */\n      dup2\n        /* \"#utility.yul\":1423:1452   */\n      tag_178\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":1418:1421   */\n      dup5\n        /* \"#utility.yul\":1414:1453   */\n      add\n        /* \"#utility.yul\":1407:1453   */\n      swap2\n      pop\n        /* \"#utility.yul\":1174:1459   */\n      pop\n        /* \"#utility.yul\":1082:1459   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1465:1778   */\n    tag_28:\n        /* \"#utility.yul\":1578:1582   */\n      0x00\n        /* \"#utility.yul\":1616:1618   */\n      0x20\n        /* \"#utility.yul\":1605:1614   */\n      dup3\n        /* \"#utility.yul\":1601:1619   */\n      add\n        /* \"#utility.yul\":1593:1619   */\n      swap1\n      pop\n        /* \"#utility.yul\":1665:1674   */\n      dup2\n        /* \"#utility.yul\":1659:1663   */\n      dup2\n        /* \"#utility.yul\":1655:1675   */\n      sub\n        /* \"#utility.yul\":1651:1652   */\n      0x00\n        /* \"#utility.yul\":1640:1649   */\n      dup4\n        /* \"#utility.yul\":1636:1653   */\n      add\n        /* \"#utility.yul\":1629:1676   */\n      mstore\n        /* \"#utility.yul\":1693:1771   */\n      tag_221\n        /* \"#utility.yul\":1766:1770   */\n      dup2\n        /* \"#utility.yul\":1757:1763   */\n      dup5\n        /* \"#utility.yul\":1693:1771   */\n      tag_179\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":1685:1771   */\n      swap1\n      pop\n        /* \"#utility.yul\":1465:1778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1865:1982   */\n    tag_181:\n        /* \"#utility.yul\":1974:1975   */\n      0x00\n        /* \"#utility.yul\":1971:1972   */\n      dup1\n        /* \"#utility.yul\":1964:1976   */\n      revert\n        /* \"#utility.yul\":2111:2237   */\n    tag_183:\n        /* \"#utility.yul\":2148:2155   */\n      0x00\n        /* \"#utility.yul\":2188:2230   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2181:2186   */\n      dup3\n        /* \"#utility.yul\":2177:2231   */\n      and\n        /* \"#utility.yul\":2166:2231   */\n      swap1\n      pop\n        /* \"#utility.yul\":2111:2237   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2243:2339   */\n    tag_184:\n        /* \"#utility.yul\":2280:2287   */\n      0x00\n        /* \"#utility.yul\":2309:2333   */\n      tag_227\n        /* \"#utility.yul\":2327:2332   */\n      dup3\n        /* \"#utility.yul\":2309:2333   */\n      tag_183\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":2298:2333   */\n      swap1\n      pop\n        /* \"#utility.yul\":2243:2339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2345:2467   */\n    tag_185:\n        /* \"#utility.yul\":2418:2442   */\n      tag_229\n        /* \"#utility.yul\":2436:2441   */\n      dup2\n        /* \"#utility.yul\":2418:2442   */\n      tag_184\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":2411:2416   */\n      dup2\n        /* \"#utility.yul\":2408:2443   */\n      eq\n        /* \"#utility.yul\":2398:2461   */\n      tag_230\n      jumpi\n        /* \"#utility.yul\":2457:2458   */\n      0x00\n        /* \"#utility.yul\":2454:2455   */\n      dup1\n        /* \"#utility.yul\":2447:2459   */\n      revert\n        /* \"#utility.yul\":2398:2461   */\n    tag_230:\n        /* \"#utility.yul\":2345:2467   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2473:2612   */\n    tag_186:\n        /* \"#utility.yul\":2519:2524   */\n      0x00\n        /* \"#utility.yul\":2557:2563   */\n      dup2\n        /* \"#utility.yul\":2544:2564   */\n      calldataload\n        /* \"#utility.yul\":2535:2564   */\n      swap1\n      pop\n        /* \"#utility.yul\":2573:2606   */\n      tag_232\n        /* \"#utility.yul\":2600:2605   */\n      dup2\n        /* \"#utility.yul\":2573:2606   */\n      tag_185\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":2473:2612   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2618:2740   */\n    tag_187:\n        /* \"#utility.yul\":2691:2715   */\n      tag_234\n        /* \"#utility.yul\":2709:2714   */\n      dup2\n        /* \"#utility.yul\":2691:2715   */\n      tag_173\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":2684:2689   */\n      dup2\n        /* \"#utility.yul\":2681:2716   */\n      eq\n        /* \"#utility.yul\":2671:2734   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":2730:2731   */\n      0x00\n        /* \"#utility.yul\":2727:2728   */\n      dup1\n        /* \"#utility.yul\":2720:2732   */\n      revert\n        /* \"#utility.yul\":2671:2734   */\n    tag_235:\n        /* \"#utility.yul\":2618:2740   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2746:2885   */\n    tag_188:\n        /* \"#utility.yul\":2792:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2836   */\n      dup2\n        /* \"#utility.yul\":2817:2837   */\n      calldataload\n        /* \"#utility.yul\":2808:2837   */\n      swap1\n      pop\n        /* \"#utility.yul\":2846:2879   */\n      tag_237\n        /* \"#utility.yul\":2873:2878   */\n      dup2\n        /* \"#utility.yul\":2846:2879   */\n      tag_187\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":2746:2885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2891:3365   */\n    tag_32:\n        /* \"#utility.yul\":2959:2965   */\n      0x00\n        /* \"#utility.yul\":2967:2973   */\n      dup1\n        /* \"#utility.yul\":3016:3018   */\n      0x40\n        /* \"#utility.yul\":3004:3013   */\n      dup4\n        /* \"#utility.yul\":2995:3002   */\n      dup6\n        /* \"#utility.yul\":2991:3014   */\n      sub\n        /* \"#utility.yul\":2987:3019   */\n      slt\n        /* \"#utility.yul\":2984:3103   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":3022:3101   */\n      tag_240\n      tag_181\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":2984:3103   */\n    tag_239:\n        /* \"#utility.yul\":3142:3143   */\n      0x00\n        /* \"#utility.yul\":3167:3220   */\n      tag_241\n        /* \"#utility.yul\":3212:3219   */\n      dup6\n        /* \"#utility.yul\":3203:3209   */\n      dup3\n        /* \"#utility.yul\":3192:3201   */\n      dup7\n        /* \"#utility.yul\":3188:3210   */\n      add\n        /* \"#utility.yul\":3167:3220   */\n      tag_186\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":3157:3220   */\n      swap3\n      pop\n        /* \"#utility.yul\":3113:3230   */\n      pop\n        /* \"#utility.yul\":3269:3271   */\n      0x20\n        /* \"#utility.yul\":3295:3348   */\n      tag_242\n        /* \"#utility.yul\":3340:3347   */\n      dup6\n        /* \"#utility.yul\":3331:3337   */\n      dup3\n        /* \"#utility.yul\":3320:3329   */\n      dup7\n        /* \"#utility.yul\":3316:3338   */\n      add\n        /* \"#utility.yul\":3295:3348   */\n      tag_188\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":3285:3348   */\n      swap2\n      pop\n        /* \"#utility.yul\":3240:3358   */\n      pop\n        /* \"#utility.yul\":2891:3365   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3371:3461   */\n    tag_189:\n        /* \"#utility.yul\":3405:3412   */\n      0x00\n        /* \"#utility.yul\":3448:3453   */\n      dup2\n        /* \"#utility.yul\":3441:3454   */\n      iszero\n        /* \"#utility.yul\":3434:3455   */\n      iszero\n        /* \"#utility.yul\":3423:3455   */\n      swap1\n      pop\n        /* \"#utility.yul\":3371:3461   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3467:3576   */\n    tag_190:\n        /* \"#utility.yul\":3548:3569   */\n      tag_245\n        /* \"#utility.yul\":3563:3568   */\n      dup2\n        /* \"#utility.yul\":3548:3569   */\n      tag_189\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":3543:3546   */\n      dup3\n        /* \"#utility.yul\":3536:3570   */\n      mstore\n        /* \"#utility.yul\":3467:3576   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3582:3792   */\n    tag_35:\n        /* \"#utility.yul\":3669:3673   */\n      0x00\n        /* \"#utility.yul\":3707:3709   */\n      0x20\n        /* \"#utility.yul\":3696:3705   */\n      dup3\n        /* \"#utility.yul\":3692:3710   */\n      add\n        /* \"#utility.yul\":3684:3710   */\n      swap1\n      pop\n        /* \"#utility.yul\":3720:3785   */\n      tag_247\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3720:3785   */\n      tag_190\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":3582:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_43:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_250\n      tag_181\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":3908:4027   */\n    tag_249:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_251\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_186\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_252\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_186\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_253\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_188\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_191:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_192:\n        /* \"#utility.yul\":4598:4620   */\n      tag_256\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_191\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_50:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_258\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_192\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_57:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_261\n      tag_181\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":4929:5048   */\n    tag_260:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_262\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_186\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5517   */\n    tag_74:\n        /* \"#utility.yul\":5247:5253   */\n      0x00\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"#utility.yul\":5284:5293   */\n      dup3\n        /* \"#utility.yul\":5275:5282   */\n      dup5\n        /* \"#utility.yul\":5271:5294   */\n      sub\n        /* \"#utility.yul\":5267:5299   */\n      slt\n        /* \"#utility.yul\":5264:5383   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":5302:5381   */\n      tag_265\n      tag_181\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":5264:5383   */\n    tag_264:\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5447:5500   */\n      tag_266\n        /* \"#utility.yul\":5492:5499   */\n      dup5\n        /* \"#utility.yul\":5483:5489   */\n      dup3\n        /* \"#utility.yul\":5472:5481   */\n      dup6\n        /* \"#utility.yul\":5468:5490   */\n      add\n        /* \"#utility.yul\":5447:5500   */\n      tag_188\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":5437:5500   */\n      swap2\n      pop\n        /* \"#utility.yul\":5393:5510   */\n      pop\n        /* \"#utility.yul\":5188:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5997   */\n    tag_79:\n        /* \"#utility.yul\":5591:5597   */\n      0x00\n        /* \"#utility.yul\":5599:5605   */\n      dup1\n        /* \"#utility.yul\":5648:5650   */\n      0x40\n        /* \"#utility.yul\":5636:5645   */\n      dup4\n        /* \"#utility.yul\":5627:5634   */\n      dup6\n        /* \"#utility.yul\":5623:5646   */\n      sub\n        /* \"#utility.yul\":5619:5651   */\n      slt\n        /* \"#utility.yul\":5616:5735   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":5654:5733   */\n      tag_269\n      tag_181\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":5616:5735   */\n    tag_268:\n        /* \"#utility.yul\":5774:5775   */\n      0x00\n        /* \"#utility.yul\":5799:5852   */\n      tag_270\n        /* \"#utility.yul\":5844:5851   */\n      dup6\n        /* \"#utility.yul\":5835:5841   */\n      dup3\n        /* \"#utility.yul\":5824:5833   */\n      dup7\n        /* \"#utility.yul\":5820:5842   */\n      add\n        /* \"#utility.yul\":5799:5852   */\n      tag_186\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":5789:5852   */\n      swap3\n      pop\n        /* \"#utility.yul\":5745:5862   */\n      pop\n        /* \"#utility.yul\":5901:5903   */\n      0x20\n        /* \"#utility.yul\":5927:5980   */\n      tag_271\n        /* \"#utility.yul\":5972:5979   */\n      dup6\n        /* \"#utility.yul\":5963:5969   */\n      dup3\n        /* \"#utility.yul\":5952:5961   */\n      dup7\n        /* \"#utility.yul\":5948:5970   */\n      add\n        /* \"#utility.yul\":5927:5980   */\n      tag_186\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":5917:5980   */\n      swap2\n      pop\n        /* \"#utility.yul\":5872:5990   */\n      pop\n        /* \"#utility.yul\":5523:5997   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6003:6121   */\n    tag_193:\n        /* \"#utility.yul\":6090:6114   */\n      tag_273\n        /* \"#utility.yul\":6108:6113   */\n      dup2\n        /* \"#utility.yul\":6090:6114   */\n      tag_184\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":6085:6088   */\n      dup3\n        /* \"#utility.yul\":6078:6115   */\n      mstore\n        /* \"#utility.yul\":6003:6121   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6127:6349   */\n    tag_86:\n        /* \"#utility.yul\":6220:6224   */\n      0x00\n        /* \"#utility.yul\":6258:6260   */\n      0x20\n        /* \"#utility.yul\":6247:6256   */\n      dup3\n        /* \"#utility.yul\":6243:6261   */\n      add\n        /* \"#utility.yul\":6235:6261   */\n      swap1\n      pop\n        /* \"#utility.yul\":6271:6342   */\n      tag_275\n        /* \"#utility.yul\":6339:6340   */\n      0x00\n        /* \"#utility.yul\":6328:6337   */\n      dup4\n        /* \"#utility.yul\":6324:6341   */\n      add\n        /* \"#utility.yul\":6315:6321   */\n      dup5\n        /* \"#utility.yul\":6271:6342   */\n      tag_193\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":6127:6349   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6355:6535   */\n    tag_194:\n        /* \"#utility.yul\":6403:6480   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6400:6401   */\n      0x00\n        /* \"#utility.yul\":6393:6481   */\n      mstore\n        /* \"#utility.yul\":6500:6504   */\n      0x22\n        /* \"#utility.yul\":6497:6498   */\n      0x04\n        /* \"#utility.yul\":6490:6505   */\n      mstore\n        /* \"#utility.yul\":6524:6528   */\n      0x24\n        /* \"#utility.yul\":6521:6522   */\n      0x00\n        /* \"#utility.yul\":6514:6529   */\n      revert\n        /* \"#utility.yul\":6541:6861   */\n    tag_89:\n        /* \"#utility.yul\":6585:6591   */\n      0x00\n        /* \"#utility.yul\":6622:6623   */\n      0x02\n        /* \"#utility.yul\":6616:6620   */\n      dup3\n        /* \"#utility.yul\":6612:6624   */\n      div\n        /* \"#utility.yul\":6602:6624   */\n      swap1\n      pop\n        /* \"#utility.yul\":6669:6670   */\n      0x01\n        /* \"#utility.yul\":6663:6667   */\n      dup3\n        /* \"#utility.yul\":6659:6671   */\n      and\n        /* \"#utility.yul\":6690:6708   */\n      dup1\n        /* \"#utility.yul\":6680:6761   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":6746:6750   */\n      0x7f\n        /* \"#utility.yul\":6738:6744   */\n      dup3\n        /* \"#utility.yul\":6734:6751   */\n      and\n        /* \"#utility.yul\":6724:6751   */\n      swap2\n      pop\n        /* \"#utility.yul\":6680:6761   */\n    tag_278:\n        /* \"#utility.yul\":6808:6810   */\n      0x20\n        /* \"#utility.yul\":6800:6806   */\n      dup3\n        /* \"#utility.yul\":6797:6811   */\n      lt\n        /* \"#utility.yul\":6777:6795   */\n      dup2\n        /* \"#utility.yul\":6774:6812   */\n      sub\n        /* \"#utility.yul\":6771:6855   */\n      tag_279\n      jumpi\n        /* \"#utility.yul\":6827:6845   */\n      tag_280\n      tag_194\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":6771:6855   */\n    tag_279:\n        /* \"#utility.yul\":6592:6861   */\n      pop\n        /* \"#utility.yul\":6541:6861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6867:7040   */\n    tag_195:\n        /* \"#utility.yul\":7007:7032   */\n      0x4f6e6c792061646d696e2063616e207769746864726177000000000000000000\n        /* \"#utility.yul\":7003:7004   */\n      0x00\n        /* \"#utility.yul\":6995:7001   */\n      dup3\n        /* \"#utility.yul\":6991:7005   */\n      add\n        /* \"#utility.yul\":6984:7033   */\n      mstore\n        /* \"#utility.yul\":6867:7040   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7046:7412   */\n    tag_196:\n        /* \"#utility.yul\":7188:7191   */\n      0x00\n        /* \"#utility.yul\":7209:7276   */\n      tag_283\n        /* \"#utility.yul\":7273:7275   */\n      0x17\n        /* \"#utility.yul\":7268:7271   */\n      dup4\n        /* \"#utility.yul\":7209:7276   */\n      tag_176\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":7202:7276   */\n      swap2\n      pop\n        /* \"#utility.yul\":7285:7378   */\n      tag_284\n        /* \"#utility.yul\":7374:7377   */\n      dup3\n        /* \"#utility.yul\":7285:7378   */\n      tag_195\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":7403:7405   */\n      0x20\n        /* \"#utility.yul\":7398:7401   */\n      dup3\n        /* \"#utility.yul\":7394:7406   */\n      add\n        /* \"#utility.yul\":7387:7406   */\n      swap1\n      pop\n        /* \"#utility.yul\":7046:7412   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7418:7837   */\n    tag_110:\n        /* \"#utility.yul\":7584:7588   */\n      0x00\n        /* \"#utility.yul\":7622:7624   */\n      0x20\n        /* \"#utility.yul\":7611:7620   */\n      dup3\n        /* \"#utility.yul\":7607:7625   */\n      add\n        /* \"#utility.yul\":7599:7625   */\n      swap1\n      pop\n        /* \"#utility.yul\":7671:7680   */\n      dup2\n        /* \"#utility.yul\":7665:7669   */\n      dup2\n        /* \"#utility.yul\":7661:7681   */\n      sub\n        /* \"#utility.yul\":7657:7658   */\n      0x00\n        /* \"#utility.yul\":7646:7655   */\n      dup4\n        /* \"#utility.yul\":7642:7659   */\n      add\n        /* \"#utility.yul\":7635:7682   */\n      mstore\n        /* \"#utility.yul\":7699:7830   */\n      tag_286\n        /* \"#utility.yul\":7825:7829   */\n      dup2\n        /* \"#utility.yul\":7699:7830   */\n      tag_196\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":7691:7830   */\n      swap1\n      pop\n        /* \"#utility.yul\":7418:7837   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7843:8023   */\n    tag_197:\n        /* \"#utility.yul\":7891:7968   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7888:7889   */\n      0x00\n        /* \"#utility.yul\":7881:7969   */\n      mstore\n        /* \"#utility.yul\":7988:7992   */\n      0x11\n        /* \"#utility.yul\":7985:7986   */\n      0x04\n        /* \"#utility.yul\":7978:7993   */\n      mstore\n        /* \"#utility.yul\":8012:8016   */\n      0x24\n        /* \"#utility.yul\":8009:8010   */\n      0x00\n        /* \"#utility.yul\":8002:8017   */\n      revert\n        /* \"#utility.yul\":8029:8439   */\n    tag_122:\n        /* \"#utility.yul\":8069:8076   */\n      0x00\n        /* \"#utility.yul\":8092:8112   */\n      tag_289\n        /* \"#utility.yul\":8110:8111   */\n      dup3\n        /* \"#utility.yul\":8092:8112   */\n      tag_173\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":8087:8112   */\n      swap2\n      pop\n        /* \"#utility.yul\":8126:8146   */\n      tag_290\n        /* \"#utility.yul\":8144:8145   */\n      dup4\n        /* \"#utility.yul\":8126:8146   */\n      tag_173\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":8121:8146   */\n      swap3\n      pop\n        /* \"#utility.yul\":8181:8182   */\n      dup3\n        /* \"#utility.yul\":8178:8179   */\n      dup3\n        /* \"#utility.yul\":8174:8183   */\n      mul\n        /* \"#utility.yul\":8203:8233   */\n      tag_291\n        /* \"#utility.yul\":8221:8232   */\n      dup2\n        /* \"#utility.yul\":8203:8233   */\n      tag_173\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":8192:8233   */\n      swap2\n      pop\n        /* \"#utility.yul\":8382:8383   */\n      dup3\n        /* \"#utility.yul\":8373:8380   */\n      dup3\n        /* \"#utility.yul\":8369:8384   */\n      div\n        /* \"#utility.yul\":8366:8367   */\n      dup5\n        /* \"#utility.yul\":8363:8385   */\n      eq\n        /* \"#utility.yul\":8343:8344   */\n      dup4\n        /* \"#utility.yul\":8336:8345   */\n      iszero\n        /* \"#utility.yul\":8316:8399   */\n      or\n        /* \"#utility.yul\":8293:8432   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":8412:8430   */\n      tag_293\n      tag_197\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":8293:8432   */\n    tag_292:\n        /* \"#utility.yul\":8077:8439   */\n      pop\n        /* \"#utility.yul\":8029:8439   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8445:8612   */\n    tag_198:\n        /* \"#utility.yul\":8585:8604   */\n      0x4e6f7420656e6f75676820746f6b656e73000000000000000000000000000000\n        /* \"#utility.yul\":8581:8582   */\n      0x00\n        /* \"#utility.yul\":8573:8579   */\n      dup3\n        /* \"#utility.yul\":8569:8583   */\n      add\n        /* \"#utility.yul\":8562:8605   */\n      mstore\n        /* \"#utility.yul\":8445:8612   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8618:8984   */\n    tag_199:\n        /* \"#utility.yul\":8760:8763   */\n      0x00\n        /* \"#utility.yul\":8781:8848   */\n      tag_296\n        /* \"#utility.yul\":8845:8847   */\n      0x11\n        /* \"#utility.yul\":8840:8843   */\n      dup4\n        /* \"#utility.yul\":8781:8848   */\n      tag_176\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":8774:8848   */\n      swap2\n      pop\n        /* \"#utility.yul\":8857:8950   */\n      tag_297\n        /* \"#utility.yul\":8946:8949   */\n      dup3\n        /* \"#utility.yul\":8857:8950   */\n      tag_198\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":8975:8977   */\n      0x20\n        /* \"#utility.yul\":8970:8973   */\n      dup3\n        /* \"#utility.yul\":8966:8978   */\n      add\n        /* \"#utility.yul\":8959:8978   */\n      swap1\n      pop\n        /* \"#utility.yul\":8618:8984   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8990:9409   */\n    tag_126:\n        /* \"#utility.yul\":9156:9160   */\n      0x00\n        /* \"#utility.yul\":9194:9196   */\n      0x20\n        /* \"#utility.yul\":9183:9192   */\n      dup3\n        /* \"#utility.yul\":9179:9197   */\n      add\n        /* \"#utility.yul\":9171:9197   */\n      swap1\n      pop\n        /* \"#utility.yul\":9243:9252   */\n      dup2\n        /* \"#utility.yul\":9237:9241   */\n      dup2\n        /* \"#utility.yul\":9233:9253   */\n      sub\n        /* \"#utility.yul\":9229:9230   */\n      0x00\n        /* \"#utility.yul\":9218:9227   */\n      dup4\n        /* \"#utility.yul\":9214:9231   */\n      add\n        /* \"#utility.yul\":9207:9254   */\n      mstore\n        /* \"#utility.yul\":9271:9402   */\n      tag_299\n        /* \"#utility.yul\":9397:9401   */\n      dup2\n        /* \"#utility.yul\":9271:9402   */\n      tag_199\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":9263:9402   */\n      swap1\n      pop\n        /* \"#utility.yul\":8990:9409   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9415:9595   */\n    tag_200:\n        /* \"#utility.yul\":9555:9587   */\n      0x4f6e6c792061646d696e2063616e206368616e67652074686520726174650000\n        /* \"#utility.yul\":9551:9552   */\n      0x00\n        /* \"#utility.yul\":9543:9549   */\n      dup3\n        /* \"#utility.yul\":9539:9553   */\n      add\n        /* \"#utility.yul\":9532:9588   */\n      mstore\n        /* \"#utility.yul\":9415:9595   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9601:9967   */\n    tag_201:\n        /* \"#utility.yul\":9743:9746   */\n      0x00\n        /* \"#utility.yul\":9764:9831   */\n      tag_302\n        /* \"#utility.yul\":9828:9830   */\n      0x1e\n        /* \"#utility.yul\":9823:9826   */\n      dup4\n        /* \"#utility.yul\":9764:9831   */\n      tag_176\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":9757:9831   */\n      swap2\n      pop\n        /* \"#utility.yul\":9840:9933   */\n      tag_303\n        /* \"#utility.yul\":9929:9932   */\n      dup3\n        /* \"#utility.yul\":9840:9933   */\n      tag_200\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":9958:9960   */\n      0x20\n        /* \"#utility.yul\":9953:9956   */\n      dup3\n        /* \"#utility.yul\":9949:9961   */\n      add\n        /* \"#utility.yul\":9942:9961   */\n      swap1\n      pop\n        /* \"#utility.yul\":9601:9967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9973:10392   */\n    tag_135:\n        /* \"#utility.yul\":10139:10143   */\n      0x00\n        /* \"#utility.yul\":10177:10179   */\n      0x20\n        /* \"#utility.yul\":10166:10175   */\n      dup3\n        /* \"#utility.yul\":10162:10180   */\n      add\n        /* \"#utility.yul\":10154:10180   */\n      swap1\n      pop\n        /* \"#utility.yul\":10226:10235   */\n      dup2\n        /* \"#utility.yul\":10220:10224   */\n      dup2\n        /* \"#utility.yul\":10216:10236   */\n      sub\n        /* \"#utility.yul\":10212:10213   */\n      0x00\n        /* \"#utility.yul\":10201:10210   */\n      dup4\n        /* \"#utility.yul\":10197:10214   */\n      add\n        /* \"#utility.yul\":10190:10237   */\n      mstore\n        /* \"#utility.yul\":10254:10385   */\n      tag_305\n        /* \"#utility.yul\":10380:10384   */\n      dup2\n        /* \"#utility.yul\":10254:10385   */\n      tag_201\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":10246:10385   */\n      swap1\n      pop\n        /* \"#utility.yul\":9973:10392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10398:10840   */\n    tag_147:\n        /* \"#utility.yul\":10547:10551   */\n      0x00\n        /* \"#utility.yul\":10585:10587   */\n      0x60\n        /* \"#utility.yul\":10574:10583   */\n      dup3\n        /* \"#utility.yul\":10570:10588   */\n      add\n        /* \"#utility.yul\":10562:10588   */\n      swap1\n      pop\n        /* \"#utility.yul\":10598:10669   */\n      tag_307\n        /* \"#utility.yul\":10666:10667   */\n      0x00\n        /* \"#utility.yul\":10655:10664   */\n      dup4\n        /* \"#utility.yul\":10651:10668   */\n      add\n        /* \"#utility.yul\":10642:10648   */\n      dup7\n        /* \"#utility.yul\":10598:10669   */\n      tag_193\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":10679:10751   */\n      tag_308\n        /* \"#utility.yul\":10747:10749   */\n      0x20\n        /* \"#utility.yul\":10736:10745   */\n      dup4\n        /* \"#utility.yul\":10732:10750   */\n      add\n        /* \"#utility.yul\":10723:10729   */\n      dup6\n        /* \"#utility.yul\":10679:10751   */\n      tag_174\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":10761:10833   */\n      tag_309\n        /* \"#utility.yul\":10829:10831   */\n      0x40\n        /* \"#utility.yul\":10818:10827   */\n      dup4\n        /* \"#utility.yul\":10814:10832   */\n      add\n        /* \"#utility.yul\":10805:10811   */\n      dup5\n        /* \"#utility.yul\":10761:10833   */\n      tag_174\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":10398:10840   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10846:11037   */\n    tag_166:\n        /* \"#utility.yul\":10886:10889   */\n      0x00\n        /* \"#utility.yul\":10905:10925   */\n      tag_311\n        /* \"#utility.yul\":10923:10924   */\n      dup3\n        /* \"#utility.yul\":10905:10925   */\n      tag_173\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":10900:10925   */\n      swap2\n      pop\n        /* \"#utility.yul\":10939:10959   */\n      tag_312\n        /* \"#utility.yul\":10957:10958   */\n      dup4\n        /* \"#utility.yul\":10939:10959   */\n      tag_173\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":10934:10959   */\n      swap3\n      pop\n        /* \"#utility.yul\":10982:10983   */\n      dup3\n        /* \"#utility.yul\":10979:10980   */\n      dup3\n        /* \"#utility.yul\":10975:10984   */\n      add\n        /* \"#utility.yul\":10968:10984   */\n      swap1\n      pop\n        /* \"#utility.yul\":11003:11006   */\n      dup1\n        /* \"#utility.yul\":11000:11001   */\n      dup3\n        /* \"#utility.yul\":10997:11007   */\n      gt\n        /* \"#utility.yul\":10994:11030   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":11010:11028   */\n      tag_314\n      tag_197\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":10994:11030   */\n    tag_313:\n        /* \"#utility.yul\":10846:11037   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e04ce2cb12cba82a5a206700ecf03dfec784407c886144edc4803ed0c7fa14e664736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_300": {
									"entryPoint": null,
									"id": 300,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_807": {
									"entryPoint": null,
									"id": 807,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_603": {
									"entryPoint": 310,
									"id": 603,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_570": {
									"entryPoint": 448,
									"id": 570,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_327": {
									"entryPoint": 302,
									"id": 327,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2552,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1893,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1983,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1457,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1836,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1006,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1193,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1344,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1387,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9836:1",
										"nodeType": "YulBlock",
										"src": "0:9836:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "140:152:1",
													"nodeType": "YulBlock",
													"src": "140:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:1",
																		"nodeType": "YulLiteral",
																		"src": "157:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:1",
																		"nodeType": "YulLiteral",
																		"src": "160:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:1"
																},
																"nativeSrc": "150:88:1",
																"nodeType": "YulFunctionCall",
																"src": "150:88:1"
															},
															"nativeSrc": "150:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:1",
																		"nodeType": "YulLiteral",
																		"src": "254:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:1",
																		"nodeType": "YulLiteral",
																		"src": "257:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:1"
																},
																"nativeSrc": "247:15:1",
																"nodeType": "YulFunctionCall",
																"src": "247:15:1"
															},
															"nativeSrc": "247:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:1",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:1",
																		"nodeType": "YulLiteral",
																		"src": "281:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:1"
																},
																"nativeSrc": "271:15:1",
																"nodeType": "YulFunctionCall",
																"src": "271:15:1"
															},
															"nativeSrc": "271:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:1"
											},
											{
												"body": {
													"nativeSrc": "326:152:1",
													"nodeType": "YulBlock",
													"src": "326:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:1",
																		"nodeType": "YulLiteral",
																		"src": "343:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:1",
																		"nodeType": "YulLiteral",
																		"src": "346:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:1"
																},
																"nativeSrc": "336:88:1",
																"nodeType": "YulFunctionCall",
																"src": "336:88:1"
															},
															"nativeSrc": "336:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:1",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:1",
																		"nodeType": "YulLiteral",
																		"src": "443:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nativeSrc": "433:15:1",
																"nodeType": "YulFunctionCall",
																"src": "433:15:1"
															},
															"nativeSrc": "433:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:1",
																		"nodeType": "YulLiteral",
																		"src": "464:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:1",
																		"nodeType": "YulLiteral",
																		"src": "467:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:1"
																},
																"nativeSrc": "457:15:1",
																"nodeType": "YulFunctionCall",
																"src": "457:15:1"
															},
															"nativeSrc": "457:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:1"
											},
											{
												"body": {
													"nativeSrc": "535:269:1",
													"nodeType": "YulBlock",
													"src": "535:269:1",
													"statements": [
														{
															"nativeSrc": "545:22:1",
															"nodeType": "YulAssignment",
															"src": "545:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:1",
																		"nodeType": "YulLiteral",
																		"src": "565:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:1"
																},
																"nativeSrc": "555:12:1",
																"nodeType": "YulFunctionCall",
																"src": "555:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:1"
																}
															]
														},
														{
															"nativeSrc": "576:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:1",
																		"nodeType": "YulLiteral",
																		"src": "612:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:1"
																},
																"nativeSrc": "602:12:1",
																"nodeType": "YulFunctionCall",
																"src": "602:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:1",
																	"nodeType": "YulTypedName",
																	"src": "580:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:1",
																"nodeType": "YulBlock",
																"src": "653:51:1",
																"statements": [
																	{
																		"nativeSrc": "667:27:1",
																		"nodeType": "YulAssignment",
																		"src": "667:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:1",
																					"nodeType": "YulLiteral",
																					"src": "689:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:1"
																			},
																			"nativeSrc": "677:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:1"
																},
																"nativeSrc": "626:26:1",
																"nodeType": "YulFunctionCall",
																"src": "626:26:1"
															},
															"nativeSrc": "623:81:1",
															"nodeType": "YulIf",
															"src": "623:81:1"
														},
														{
															"body": {
																"nativeSrc": "756:42:1",
																"nodeType": "YulBlock",
																"src": "756:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:1"
																			},
																			"nativeSrc": "770:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:1"
																		},
																		"nativeSrc": "770:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:1",
																				"nodeType": "YulLiteral",
																				"src": "751:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:1"
																		},
																		"nativeSrc": "740:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:1"
																},
																"nativeSrc": "717:38:1",
																"nodeType": "YulFunctionCall",
																"src": "717:38:1"
															},
															"nativeSrc": "714:84:1",
															"nodeType": "YulIf",
															"src": "714:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:1",
														"nodeType": "YulTypedName",
														"src": "519:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:1",
														"nodeType": "YulTypedName",
														"src": "528:6:1",
														"type": ""
													}
												],
												"src": "484:320:1"
											},
											{
												"body": {
													"nativeSrc": "864:87:1",
													"nodeType": "YulBlock",
													"src": "864:87:1",
													"statements": [
														{
															"nativeSrc": "874:11:1",
															"nodeType": "YulAssignment",
															"src": "874:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:1",
																"nodeType": "YulIdentifier",
																"src": "882:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:1",
																		"nodeType": "YulLiteral",
																		"src": "902:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:1"
																},
																"nativeSrc": "895:14:1",
																"nodeType": "YulFunctionCall",
																"src": "895:14:1"
															},
															"nativeSrc": "895:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:1"
														},
														{
															"nativeSrc": "918:26:1",
															"nodeType": "YulAssignment",
															"src": "918:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:1",
																		"nodeType": "YulLiteral",
																		"src": "936:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:1",
																		"nodeType": "YulLiteral",
																		"src": "939:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:1"
																},
																"nativeSrc": "926:18:1",
																"nodeType": "YulFunctionCall",
																"src": "926:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:1",
														"nodeType": "YulTypedName",
														"src": "851:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:1",
														"nodeType": "YulTypedName",
														"src": "859:4:1",
														"type": ""
													}
												],
												"src": "810:141:1"
											},
											{
												"body": {
													"nativeSrc": "1001:49:1",
													"nodeType": "YulBlock",
													"src": "1001:49:1",
													"statements": [
														{
															"nativeSrc": "1011:33:1",
															"nodeType": "YulAssignment",
															"src": "1011:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:1"
																		},
																		"nativeSrc": "1025:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:1"
																},
																"nativeSrc": "1021:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:1",
														"nodeType": "YulTypedName",
														"src": "984:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:1",
														"nodeType": "YulTypedName",
														"src": "994:6:1",
														"type": ""
													}
												],
												"src": "957:93:1"
											},
											{
												"body": {
													"nativeSrc": "1109:54:1",
													"nodeType": "YulBlock",
													"src": "1109:54:1",
													"statements": [
														{
															"nativeSrc": "1119:37:1",
															"nodeType": "YulAssignment",
															"src": "1119:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:1"
																},
																"nativeSrc": "1140:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:1",
														"nodeType": "YulTypedName",
														"src": "1084:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:1",
														"nodeType": "YulTypedName",
														"src": "1090:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:1",
														"nodeType": "YulTypedName",
														"src": "1100:8:1",
														"type": ""
													}
												],
												"src": "1056:107:1"
											},
											{
												"body": {
													"nativeSrc": "1245:317:1",
													"nodeType": "YulBlock",
													"src": "1245:317:1",
													"statements": [
														{
															"nativeSrc": "1255:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:1"
																},
																"nativeSrc": "1272:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:1",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:1"
																},
																"nativeSrc": "1311:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:1",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:1",
															"nodeType": "YulAssignment",
															"src": "1417:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:1"
																},
																"nativeSrc": "1429:39:1",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:1"
																}
															]
														},
														{
															"nativeSrc": "1477:30:1",
															"nodeType": "YulAssignment",
															"src": "1477:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:1"
																		},
																		"nativeSrc": "1497:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:1"
																},
																"nativeSrc": "1486:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:1"
																}
															]
														},
														{
															"nativeSrc": "1516:40:1",
															"nodeType": "YulAssignment",
															"src": "1516:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:1"
																		},
																		"nativeSrc": "1536:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:1"
																},
																"nativeSrc": "1526:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:1",
														"nodeType": "YulTypedName",
														"src": "1206:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:1",
														"nodeType": "YulTypedName",
														"src": "1213:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:1",
														"nodeType": "YulTypedName",
														"src": "1225:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:1",
														"nodeType": "YulTypedName",
														"src": "1238:6:1",
														"type": ""
													}
												],
												"src": "1169:393:1"
											},
											{
												"body": {
													"nativeSrc": "1613:32:1",
													"nodeType": "YulBlock",
													"src": "1613:32:1",
													"statements": [
														{
															"nativeSrc": "1623:16:1",
															"nodeType": "YulAssignment",
															"src": "1623:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:1",
																"nodeType": "YulIdentifier",
																"src": "1634:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:1",
														"nodeType": "YulTypedName",
														"src": "1595:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:1",
														"nodeType": "YulTypedName",
														"src": "1605:7:1",
														"type": ""
													}
												],
												"src": "1568:77:1"
											},
											{
												"body": {
													"nativeSrc": "1683:28:1",
													"nodeType": "YulBlock",
													"src": "1683:28:1",
													"statements": [
														{
															"nativeSrc": "1693:12:1",
															"nodeType": "YulAssignment",
															"src": "1693:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:1",
																"nodeType": "YulIdentifier",
																"src": "1700:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:1",
														"nodeType": "YulTypedName",
														"src": "1669:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:1",
														"nodeType": "YulTypedName",
														"src": "1679:3:1",
														"type": ""
													}
												],
												"src": "1651:60:1"
											},
											{
												"body": {
													"nativeSrc": "1777:82:1",
													"nodeType": "YulBlock",
													"src": "1777:82:1",
													"statements": [
														{
															"nativeSrc": "1787:66:1",
															"nodeType": "YulAssignment",
															"src": "1787:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:1"
																				},
																				"nativeSrc": "1827:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:1"
																		},
																		"nativeSrc": "1818:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:1"
																},
																"nativeSrc": "1800:53:1",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:1",
														"nodeType": "YulTypedName",
														"src": "1757:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:1",
														"nodeType": "YulTypedName",
														"src": "1767:9:1",
														"type": ""
													}
												],
												"src": "1717:142:1"
											},
											{
												"body": {
													"nativeSrc": "1912:28:1",
													"nodeType": "YulBlock",
													"src": "1912:28:1",
													"statements": [
														{
															"nativeSrc": "1922:12:1",
															"nodeType": "YulAssignment",
															"src": "1922:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:1",
																"nodeType": "YulIdentifier",
																"src": "1929:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:1",
														"nodeType": "YulTypedName",
														"src": "1898:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:1",
														"nodeType": "YulTypedName",
														"src": "1908:3:1",
														"type": ""
													}
												],
												"src": "1865:75:1"
											},
											{
												"body": {
													"nativeSrc": "2022:193:1",
													"nodeType": "YulBlock",
													"src": "2022:193:1",
													"statements": [
														{
															"nativeSrc": "2032:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:1"
																},
																"nativeSrc": "2056:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:1",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:1"
																				},
																				"nativeSrc": "2145:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:1"
																				},
																				"nativeSrc": "2166:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:1"
																		},
																		"nativeSrc": "2117:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:1"
																},
																"nativeSrc": "2104:105:1",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:1"
															},
															"nativeSrc": "2104:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:1",
														"nodeType": "YulTypedName",
														"src": "1999:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:1",
														"nodeType": "YulTypedName",
														"src": "2005:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:1",
														"nodeType": "YulTypedName",
														"src": "2013:7:1",
														"type": ""
													}
												],
												"src": "1946:269:1"
											},
											{
												"body": {
													"nativeSrc": "2270:24:1",
													"nodeType": "YulBlock",
													"src": "2270:24:1",
													"statements": [
														{
															"nativeSrc": "2280:8:1",
															"nodeType": "YulAssignment",
															"src": "2280:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:1",
																"nodeType": "YulLiteral",
																"src": "2287:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:1",
														"nodeType": "YulTypedName",
														"src": "2266:3:1",
														"type": ""
													}
												],
												"src": "2221:73:1"
											},
											{
												"body": {
													"nativeSrc": "2353:136:1",
													"nodeType": "YulBlock",
													"src": "2353:136:1",
													"statements": [
														{
															"nativeSrc": "2363:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:1"
																},
																"nativeSrc": "2377:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:1"
																},
																"nativeSrc": "2418:65:1",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:1"
															},
															"nativeSrc": "2418:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:1",
														"nodeType": "YulTypedName",
														"src": "2339:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:1",
														"nodeType": "YulTypedName",
														"src": "2345:6:1",
														"type": ""
													}
												],
												"src": "2300:189:1"
											},
											{
												"body": {
													"nativeSrc": "2545:136:1",
													"nodeType": "YulBlock",
													"src": "2545:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:1",
																"nodeType": "YulBlock",
																"src": "2612:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:1"
																			},
																			"nativeSrc": "2626:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:1"
																		},
																		"nativeSrc": "2626:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:1"
																},
																"nativeSrc": "2562:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:1"
															},
															"nativeSrc": "2555:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:1",
																"nodeType": "YulBlock",
																"src": "2577:26:1",
																"statements": [
																	{
																		"nativeSrc": "2579:22:1",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:1"
																			},
																			"nativeSrc": "2588:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:1",
																"nodeType": "YulBlock",
																"src": "2559:2:1",
																"statements": []
															},
															"src": "2555:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:1",
														"nodeType": "YulTypedName",
														"src": "2533:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:1",
														"nodeType": "YulTypedName",
														"src": "2540:3:1",
														"type": ""
													}
												],
												"src": "2495:186:1"
											},
											{
												"body": {
													"nativeSrc": "2766:464:1",
													"nodeType": "YulBlock",
													"src": "2766:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:1",
																"nodeType": "YulBlock",
																"src": "2792:431:1",
																"statements": [
																	{
																		"nativeSrc": "2806:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:1"
																			},
																			"nativeSrc": "2822:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:1",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:1"
																					},
																					"nativeSrc": "2906:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:1"
																			},
																			"nativeSrc": "2892:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:1",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:1",
																			"nodeType": "YulBlock",
																			"src": "3093:27:1",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:1",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:1",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:1"
																			},
																			"nativeSrc": "3074:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:1"
																		},
																		"nativeSrc": "3071:49:1",
																		"nodeType": "YulIf",
																		"src": "3071:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:1"
																							},
																							"nativeSrc": "3189:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:1"
																					},
																					"nativeSrc": "3175:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:1"
																			},
																			"nativeSrc": "3133:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:1"
																		},
																		"nativeSrc": "3133:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:1"
																},
																"nativeSrc": "2780:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:1"
															},
															"nativeSrc": "2777:446:1",
															"nodeType": "YulIf",
															"src": "2777:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:1",
														"nodeType": "YulTypedName",
														"src": "2742:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:1",
														"nodeType": "YulTypedName",
														"src": "2749:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:1",
														"nodeType": "YulTypedName",
														"src": "2754:10:1",
														"type": ""
													}
												],
												"src": "2687:543:1"
											},
											{
												"body": {
													"nativeSrc": "3299:54:1",
													"nodeType": "YulBlock",
													"src": "3299:54:1",
													"statements": [
														{
															"nativeSrc": "3309:37:1",
															"nodeType": "YulAssignment",
															"src": "3309:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:1"
																},
																"nativeSrc": "3330:16:1",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:1",
														"nodeType": "YulTypedName",
														"src": "3274:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:1",
														"nodeType": "YulTypedName",
														"src": "3280:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:1",
														"nodeType": "YulTypedName",
														"src": "3290:8:1",
														"type": ""
													}
												],
												"src": "3236:117:1"
											},
											{
												"body": {
													"nativeSrc": "3410:118:1",
													"nodeType": "YulBlock",
													"src": "3410:118:1",
													"statements": [
														{
															"nativeSrc": "3420:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:1"
																				},
																				"nativeSrc": "3465:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:1"
																				},
																				"nativeSrc": "3480:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:1"
																		},
																		"nativeSrc": "3436:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:1"
																},
																"nativeSrc": "3432:56:1",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:1",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:1",
															"nodeType": "YulAssignment",
															"src": "3497:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:1"
																},
																"nativeSrc": "3507:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:1",
														"nodeType": "YulTypedName",
														"src": "3387:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:1",
														"nodeType": "YulTypedName",
														"src": "3393:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:1",
														"nodeType": "YulTypedName",
														"src": "3403:6:1",
														"type": ""
													}
												],
												"src": "3359:169:1"
											},
											{
												"body": {
													"nativeSrc": "3614:214:1",
													"nodeType": "YulBlock",
													"src": "3614:214:1",
													"statements": [
														{
															"nativeSrc": "3747:37:1",
															"nodeType": "YulAssignment",
															"src": "3747:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:1"
																},
																"nativeSrc": "3755:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:1"
																}
															]
														},
														{
															"nativeSrc": "3793:29:1",
															"nodeType": "YulAssignment",
															"src": "3793:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:1"
																		},
																		"nativeSrc": "3810:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:1"
																},
																"nativeSrc": "3801:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:1",
														"nodeType": "YulTypedName",
														"src": "3595:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:1",
														"nodeType": "YulTypedName",
														"src": "3601:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:1",
														"nodeType": "YulTypedName",
														"src": "3609:4:1",
														"type": ""
													}
												],
												"src": "3533:295:1"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:1",
													"nodeType": "YulBlock",
													"src": "3925:1303:1",
													"statements": [
														{
															"nativeSrc": "3936:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:1"
																},
																"nativeSrc": "3950:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:1",
																"nodeType": "YulBlock",
																"src": "4072:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:1"
																			},
																			"nativeSrc": "4074:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:1"
																		},
																		"nativeSrc": "4074:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:1",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:1"
																},
																"nativeSrc": "4041:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:1"
															},
															"nativeSrc": "4038:56:1",
															"nodeType": "YulIf",
															"src": "4038:56:1"
														},
														{
															"nativeSrc": "4104:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:1"
																		},
																		"nativeSrc": "4144:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:1"
																},
																"nativeSrc": "4118:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:1"
																},
																"nativeSrc": "4203:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:1"
															},
															"nativeSrc": "4203:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:1"
														},
														{
															"nativeSrc": "4280:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:1",
																"nodeType": "YulLiteral",
																"src": "4297:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:1",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:1",
															"nodeType": "YulAssignment",
															"src": "4308:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:1",
																"nodeType": "YulLiteral",
																"src": "4321:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:1",
																		"nodeType": "YulBlock",
																		"src": "4372:611:1",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:1",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:1"
																							},
																							"nativeSrc": "4413:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:1"
																					},
																					"nativeSrc": "4401:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:1",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:1"
																					},
																					"nativeSrc": "4451:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:1",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:1",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:1",
																					"nodeType": "YulBlock",
																					"src": "4569:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:1"
																												},
																												"nativeSrc": "4608:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:1"
																										},
																										"nativeSrc": "4602:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:1"
																								},
																								"nativeSrc": "4587:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:1"
																							},
																							"nativeSrc": "4587:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:1"
																						},
																						{
																							"nativeSrc": "4646:24:1",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:1",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:1"
																								},
																								"nativeSrc": "4656:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:1",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:1",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:1"
																								},
																								"nativeSrc": "4700:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:1"
																					},
																					"nativeSrc": "4532:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:1"
																				},
																				"nativeSrc": "4524:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:1",
																					"nodeType": "YulBlock",
																					"src": "4547:21:1",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:1",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:1",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:1"
																								},
																								"nativeSrc": "4554:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:1",
																					"nodeType": "YulBlock",
																					"src": "4528:3:1",
																					"statements": []
																				},
																				"src": "4524:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:1",
																					"nodeType": "YulBlock",
																					"src": "4768:156:1",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:1"
																										},
																										"nativeSrc": "4809:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:1"
																								},
																								"nativeSrc": "4803:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:1",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:1",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:1"
																												},
																												"nativeSrc": "4891:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:1"
																										},
																										"nativeSrc": "4861:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:1"
																								},
																								"nativeSrc": "4846:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:1"
																							},
																							"nativeSrc": "4846:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:1"
																					},
																					"nativeSrc": "4748:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:1"
																				},
																				"nativeSrc": "4745:179:1",
																				"nodeType": "YulIf",
																				"src": "4745:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:1",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:1"
																									},
																									"nativeSrc": "4954:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:1",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:1"
																							},
																							"nativeSrc": "4950:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:1"
																					},
																					"nativeSrc": "4937:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:1"
																				},
																				"nativeSrc": "4937:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:1"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:1",
																	"nodeType": "YulCase",
																	"src": "4365:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:1",
																		"nodeType": "YulBlock",
																		"src": "5000:222:1",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:1",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:1",
																					"nodeType": "YulBlock",
																					"src": "5051:67:1",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:1",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:1"
																										},
																										"nativeSrc": "5084:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:1"
																								},
																								"nativeSrc": "5078:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:1"
																				},
																				"nativeSrc": "5041:77:1",
																				"nodeType": "YulIf",
																				"src": "5041:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:1"
																							},
																							"nativeSrc": "5144:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:1"
																					},
																					"nativeSrc": "5131:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:1"
																				},
																				"nativeSrc": "5131:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:1"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:1",
																	"nodeType": "YulCase",
																	"src": "4992:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:1"
																},
																"nativeSrc": "4342:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:1"
															},
															"nativeSrc": "4335:887:1",
															"nodeType": "YulSwitch",
															"src": "4335:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:1",
														"nodeType": "YulTypedName",
														"src": "3914:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:1",
														"nodeType": "YulTypedName",
														"src": "3920:3:1",
														"type": ""
													}
												],
												"src": "3833:1395:1"
											},
											{
												"body": {
													"nativeSrc": "5262:152:1",
													"nodeType": "YulBlock",
													"src": "5262:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5279:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5279:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5282:77:1",
																		"nodeType": "YulLiteral",
																		"src": "5282:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5272:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5272:6:1"
																},
																"nativeSrc": "5272:88:1",
																"nodeType": "YulFunctionCall",
																"src": "5272:88:1"
															},
															"nativeSrc": "5272:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "5272:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5376:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5376:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5379:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5379:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5369:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5369:6:1"
																},
																"nativeSrc": "5369:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5369:15:1"
															},
															"nativeSrc": "5369:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5369:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5400:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5400:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5403:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5403:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5393:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5393:6:1"
																},
																"nativeSrc": "5393:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5393:15:1"
															},
															"nativeSrc": "5393:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5393:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5234:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "5234:180:1"
											},
											{
												"body": {
													"nativeSrc": "5471:51:1",
													"nodeType": "YulBlock",
													"src": "5471:51:1",
													"statements": [
														{
															"nativeSrc": "5481:34:1",
															"nodeType": "YulAssignment",
															"src": "5481:34:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5506:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5506:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5509:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5509:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5502:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5502:3:1"
																},
																"nativeSrc": "5502:13:1",
																"nodeType": "YulFunctionCall",
																"src": "5502:13:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5481:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "5481:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "5420:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5452:5:1",
														"nodeType": "YulTypedName",
														"src": "5452:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5462:8:1",
														"nodeType": "YulTypedName",
														"src": "5462:8:1",
														"type": ""
													}
												],
												"src": "5420:102:1"
											},
											{
												"body": {
													"nativeSrc": "5601:775:1",
													"nodeType": "YulBlock",
													"src": "5601:775:1",
													"statements": [
														{
															"nativeSrc": "5611:15:1",
															"nodeType": "YulAssignment",
															"src": "5611:15:1",
															"value": {
																"name": "_power",
																"nativeSrc": "5620:6:1",
																"nodeType": "YulIdentifier",
																"src": "5620:6:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5611:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5611:5:1"
																}
															]
														},
														{
															"nativeSrc": "5635:14:1",
															"nodeType": "YulAssignment",
															"src": "5635:14:1",
															"value": {
																"name": "_base",
																"nativeSrc": "5644:5:1",
																"nodeType": "YulIdentifier",
																"src": "5644:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "5635:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5635:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5693:677:1",
																"nodeType": "YulBlock",
																"src": "5693:677:1",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "5781:22:1",
																			"nodeType": "YulBlock",
																			"src": "5781:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "5783:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "5783:16:1"
																						},
																						"nativeSrc": "5783:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5783:18:1"
																					},
																					"nativeSrc": "5783:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "5783:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5759:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "5759:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "5769:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5769:3:1"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "5774:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5774:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "5765:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5765:3:1"
																					},
																					"nativeSrc": "5765:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5765:14:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "5756:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "5756:2:1"
																			},
																			"nativeSrc": "5756:24:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5756:24:1"
																		},
																		"nativeSrc": "5753:50:1",
																		"nodeType": "YulIf",
																		"src": "5753:50:1"
																	},
																	{
																		"body": {
																			"nativeSrc": "5848:419:1",
																			"nodeType": "YulBlock",
																			"src": "5848:419:1",
																			"statements": [
																				{
																					"nativeSrc": "6228:25:1",
																					"nodeType": "YulAssignment",
																					"src": "6228:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "6241:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "6241:5:1"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "6248:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "6248:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "6237:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6237:3:1"
																						},
																						"nativeSrc": "6237:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6237:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "6228:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "6228:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "5823:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "5823:8:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5833:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5833:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5819:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5819:3:1"
																			},
																			"nativeSrc": "5819:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5819:16:1"
																		},
																		"nativeSrc": "5816:451:1",
																		"nodeType": "YulIf",
																		"src": "5816:451:1"
																	},
																	{
																		"nativeSrc": "6280:23:1",
																		"nodeType": "YulAssignment",
																		"src": "6280:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6292:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "6292:4:1"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "6298:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "6298:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "6288:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6288:3:1"
																			},
																			"nativeSrc": "6288:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6288:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "6280:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "6280:4:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6316:44:1",
																		"nodeType": "YulAssignment",
																		"src": "6316:44:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "6351:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "6351:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "6328:22:1",
																				"nodeType": "YulIdentifier",
																				"src": "6328:22:1"
																			},
																			"nativeSrc": "6328:32:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6328:32:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "6316:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "6316:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "5669:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "5669:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5679:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5679:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5666:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5666:2:1"
																},
																"nativeSrc": "5666:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5666:15:1"
															},
															"nativeSrc": "5658:712:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5682:2:1",
																"nodeType": "YulBlock",
																"src": "5682:2:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "5662:3:1",
																"nodeType": "YulBlock",
																"src": "5662:3:1",
																"statements": []
															},
															"src": "5658:712:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "5528:848:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "5556:6:1",
														"nodeType": "YulTypedName",
														"src": "5556:6:1",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "5564:5:1",
														"nodeType": "YulTypedName",
														"src": "5564:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5571:8:1",
														"nodeType": "YulTypedName",
														"src": "5571:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "5581:3:1",
														"nodeType": "YulTypedName",
														"src": "5581:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5589:5:1",
														"nodeType": "YulTypedName",
														"src": "5589:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "5596:4:1",
														"nodeType": "YulTypedName",
														"src": "5596:4:1",
														"type": ""
													}
												],
												"src": "5528:848:1"
											},
											{
												"body": {
													"nativeSrc": "6442:1013:1",
													"nodeType": "YulBlock",
													"src": "6442:1013:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6637:20:1",
																"nodeType": "YulBlock",
																"src": "6637:20:1",
																"statements": [
																	{
																		"nativeSrc": "6639:10:1",
																		"nodeType": "YulAssignment",
																		"src": "6639:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6648:1:1",
																			"nodeType": "YulLiteral",
																			"src": "6648:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6639:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6639:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6650:5:1",
																		"nodeType": "YulLeave",
																		"src": "6650:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6627:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "6627:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6620:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6620:6:1"
																},
																"nativeSrc": "6620:16:1",
																"nodeType": "YulFunctionCall",
																"src": "6620:16:1"
															},
															"nativeSrc": "6617:40:1",
															"nodeType": "YulIf",
															"src": "6617:40:1"
														},
														{
															"body": {
																"nativeSrc": "6682:20:1",
																"nodeType": "YulBlock",
																"src": "6682:20:1",
																"statements": [
																	{
																		"nativeSrc": "6684:10:1",
																		"nodeType": "YulAssignment",
																		"src": "6684:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6693:1:1",
																			"nodeType": "YulLiteral",
																			"src": "6693:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6684:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6684:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6695:5:1",
																		"nodeType": "YulLeave",
																		"src": "6695:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6676:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6676:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6669:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6669:6:1"
																},
																"nativeSrc": "6669:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6669:12:1"
															},
															"nativeSrc": "6666:36:1",
															"nodeType": "YulIf",
															"src": "6666:36:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6812:20:1",
																		"nodeType": "YulBlock",
																		"src": "6812:20:1",
																		"statements": [
																			{
																				"nativeSrc": "6814:10:1",
																				"nodeType": "YulAssignment",
																				"src": "6814:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6823:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6823:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6814:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "6814:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "6825:5:1",
																				"nodeType": "YulLeave",
																				"src": "6825:5:1"
																			}
																		]
																	},
																	"nativeSrc": "6805:27:1",
																	"nodeType": "YulCase",
																	"src": "6805:27:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6810:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6810:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6856:176:1",
																		"nodeType": "YulBlock",
																		"src": "6856:176:1",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "6891:22:1",
																					"nodeType": "YulBlock",
																					"src": "6891:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6893:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "6893:16:1"
																								},
																								"nativeSrc": "6893:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6893:18:1"
																							},
																							"nativeSrc": "6893:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "6893:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "6876:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "6876:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6886:3:1",
																							"nodeType": "YulLiteral",
																							"src": "6886:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6873:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "6873:2:1"
																					},
																					"nativeSrc": "6873:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6873:17:1"
																				},
																				"nativeSrc": "6870:43:1",
																				"nodeType": "YulIf",
																				"src": "6870:43:1"
																			},
																			{
																				"nativeSrc": "6926:25:1",
																				"nodeType": "YulAssignment",
																				"src": "6926:25:1",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6939:1:1",
																							"nodeType": "YulLiteral",
																							"src": "6939:1:1",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "6942:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "6942:8:1"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "6935:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "6935:3:1"
																					},
																					"nativeSrc": "6935:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6935:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6926:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "6926:5:1"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6982:22:1",
																					"nodeType": "YulBlock",
																					"src": "6982:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6984:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "6984:16:1"
																								},
																								"nativeSrc": "6984:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6984:18:1"
																							},
																							"nativeSrc": "6984:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "6984:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "6970:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "6970:5:1"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "6977:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6977:3:1"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6967:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "6967:2:1"
																					},
																					"nativeSrc": "6967:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6967:14:1"
																				},
																				"nativeSrc": "6964:40:1",
																				"nodeType": "YulIf",
																				"src": "6964:40:1"
																			},
																			{
																				"nativeSrc": "7017:5:1",
																				"nodeType": "YulLeave",
																				"src": "7017:5:1"
																			}
																		]
																	},
																	"nativeSrc": "6841:191:1",
																	"nodeType": "YulCase",
																	"src": "6841:191:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6846:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6846:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "6762:4:1",
																"nodeType": "YulIdentifier",
																"src": "6762:4:1"
															},
															"nativeSrc": "6755:277:1",
															"nodeType": "YulSwitch",
															"src": "6755:277:1"
														},
														{
															"body": {
																"nativeSrc": "7164:123:1",
																"nodeType": "YulBlock",
																"src": "7164:123:1",
																"statements": [
																	{
																		"nativeSrc": "7178:28:1",
																		"nodeType": "YulAssignment",
																		"src": "7178:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7191:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "7191:4:1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "7197:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "7197:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "7187:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7187:3:1"
																			},
																			"nativeSrc": "7187:19:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7187:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7178:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7178:5:1"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7237:22:1",
																			"nodeType": "YulBlock",
																			"src": "7237:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7239:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "7239:16:1"
																						},
																						"nativeSrc": "7239:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7239:18:1"
																					},
																					"nativeSrc": "7239:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "7239:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "7225:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "7225:5:1"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "7232:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7232:3:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7222:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "7222:2:1"
																			},
																			"nativeSrc": "7222:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7222:14:1"
																		},
																		"nativeSrc": "7219:40:1",
																		"nodeType": "YulIf",
																		"src": "7219:40:1"
																	},
																	{
																		"nativeSrc": "7272:5:1",
																		"nodeType": "YulLeave",
																		"src": "7272:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7067:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "7067:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7073:2:1",
																						"nodeType": "YulLiteral",
																						"src": "7073:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7064:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "7064:2:1"
																				},
																				"nativeSrc": "7064:12:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7064:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7081:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "7081:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7091:2:1",
																						"nodeType": "YulLiteral",
																						"src": "7091:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7078:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "7078:2:1"
																				},
																				"nativeSrc": "7078:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7078:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7060:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7060:3:1"
																		},
																		"nativeSrc": "7060:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7060:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7116:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "7116:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7122:3:1",
																						"nodeType": "YulLiteral",
																						"src": "7122:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7113:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "7113:2:1"
																				},
																				"nativeSrc": "7113:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7113:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7131:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "7131:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7141:2:1",
																						"nodeType": "YulLiteral",
																						"src": "7141:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7128:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "7128:2:1"
																				},
																				"nativeSrc": "7128:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7128:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7109:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7109:3:1"
																		},
																		"nativeSrc": "7109:36:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7109:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7044:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7044:2:1"
																},
																"nativeSrc": "7044:111:1",
																"nodeType": "YulFunctionCall",
																"src": "7044:111:1"
															},
															"nativeSrc": "7041:246:1",
															"nodeType": "YulIf",
															"src": "7041:246:1"
														},
														{
															"nativeSrc": "7297:57:1",
															"nodeType": "YulAssignment",
															"src": "7297:57:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7331:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7331:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7334:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7334:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7340:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "7340:8:1"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "7350:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7350:3:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "7312:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "7312:18:1"
																},
																"nativeSrc": "7312:42:1",
																"nodeType": "YulFunctionCall",
																"src": "7312:42:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7297:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7297:5:1"
																},
																{
																	"name": "base",
																	"nativeSrc": "7304:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7304:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7393:22:1",
																"nodeType": "YulBlock",
																"src": "7393:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7395:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7395:16:1"
																			},
																			"nativeSrc": "7395:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7395:18:1"
																		},
																		"nativeSrc": "7395:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7395:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7370:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7370:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "7381:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7381:3:1"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "7386:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7377:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7377:3:1"
																		},
																		"nativeSrc": "7377:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7377:14:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7367:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7367:2:1"
																},
																"nativeSrc": "7367:25:1",
																"nodeType": "YulFunctionCall",
																"src": "7367:25:1"
															},
															"nativeSrc": "7364:51:1",
															"nodeType": "YulIf",
															"src": "7364:51:1"
														},
														{
															"nativeSrc": "7424:25:1",
															"nodeType": "YulAssignment",
															"src": "7424:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7437:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7437:5:1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7444:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7444:4:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7433:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7433:3:1"
																},
																"nativeSrc": "7433:16:1",
																"nodeType": "YulFunctionCall",
																"src": "7433:16:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7424:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7424:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "6382:1073:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6412:4:1",
														"nodeType": "YulTypedName",
														"src": "6412:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6418:8:1",
														"nodeType": "YulTypedName",
														"src": "6418:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6428:3:1",
														"nodeType": "YulTypedName",
														"src": "6428:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6436:5:1",
														"nodeType": "YulTypedName",
														"src": "6436:5:1",
														"type": ""
													}
												],
												"src": "6382:1073:1"
											},
											{
												"body": {
													"nativeSrc": "7504:43:1",
													"nodeType": "YulBlock",
													"src": "7504:43:1",
													"statements": [
														{
															"nativeSrc": "7514:27:1",
															"nodeType": "YulAssignment",
															"src": "7514:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7529:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7529:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7536:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7536:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7525:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7525:3:1"
																},
																"nativeSrc": "7525:16:1",
																"nodeType": "YulFunctionCall",
																"src": "7525:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7514:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "7514:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "7461:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7486:5:1",
														"nodeType": "YulTypedName",
														"src": "7486:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7496:7:1",
														"nodeType": "YulTypedName",
														"src": "7496:7:1",
														"type": ""
													}
												],
												"src": "7461:86:1"
											},
											{
												"body": {
													"nativeSrc": "7617:217:1",
													"nodeType": "YulBlock",
													"src": "7617:217:1",
													"statements": [
														{
															"nativeSrc": "7627:31:1",
															"nodeType": "YulAssignment",
															"src": "7627:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7653:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7653:4:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7635:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7635:17:1"
																},
																"nativeSrc": "7635:23:1",
																"nodeType": "YulFunctionCall",
																"src": "7635:23:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7627:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7627:4:1"
																}
															]
														},
														{
															"nativeSrc": "7667:37:1",
															"nodeType": "YulAssignment",
															"src": "7667:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7695:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "7695:8:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "7679:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "7679:15:1"
																},
																"nativeSrc": "7679:25:1",
																"nodeType": "YulFunctionCall",
																"src": "7679:25:1"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "7667:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "7667:8:1"
																}
															]
														},
														{
															"nativeSrc": "7714:113:1",
															"nodeType": "YulAssignment",
															"src": "7714:113:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7744:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7744:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7750:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "7750:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7760:66:1",
																		"nodeType": "YulLiteral",
																		"src": "7760:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "7723:20:1",
																	"nodeType": "YulIdentifier",
																	"src": "7723:20:1"
																},
																"nativeSrc": "7723:104:1",
																"nodeType": "YulFunctionCall",
																"src": "7723:104:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7714:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7714:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "7553:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7592:4:1",
														"nodeType": "YulTypedName",
														"src": "7592:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7598:8:1",
														"nodeType": "YulTypedName",
														"src": "7598:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7611:5:1",
														"nodeType": "YulTypedName",
														"src": "7611:5:1",
														"type": ""
													}
												],
												"src": "7553:281:1"
											},
											{
												"body": {
													"nativeSrc": "7888:362:1",
													"nodeType": "YulBlock",
													"src": "7888:362:1",
													"statements": [
														{
															"nativeSrc": "7898:25:1",
															"nodeType": "YulAssignment",
															"src": "7898:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7921:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7921:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7903:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7903:17:1"
																},
																"nativeSrc": "7903:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7903:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7898:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "7898:1:1"
																}
															]
														},
														{
															"nativeSrc": "7932:25:1",
															"nodeType": "YulAssignment",
															"src": "7932:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7955:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7955:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7937:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7937:17:1"
																},
																"nativeSrc": "7937:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7937:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7932:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "7932:1:1"
																}
															]
														},
														{
															"nativeSrc": "7966:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7966:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7989:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7989:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7992:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7992:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7985:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7985:3:1"
																},
																"nativeSrc": "7985:9:1",
																"nodeType": "YulFunctionCall",
																"src": "7985:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7970:11:1",
																	"nodeType": "YulTypedName",
																	"src": "7970:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8003:41:1",
															"nodeType": "YulAssignment",
															"src": "8003:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8032:11:1",
																		"nodeType": "YulIdentifier",
																		"src": "8032:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8014:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8014:17:1"
																},
																"nativeSrc": "8014:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8014:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8003:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "8003:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8221:22:1",
																"nodeType": "YulBlock",
																"src": "8221:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8223:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8223:16:1"
																			},
																			"nativeSrc": "8223:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8223:18:1"
																		},
																		"nativeSrc": "8223:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8223:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8154:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "8154:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8147:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "8147:6:1"
																				},
																				"nativeSrc": "8147:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8147:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8177:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "8177:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8184:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "8184:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8193:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "8193:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8180:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "8180:3:1"
																						},
																						"nativeSrc": "8180:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "8180:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8174:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8174:2:1"
																				},
																				"nativeSrc": "8174:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8174:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8127:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "8127:2:1"
																		},
																		"nativeSrc": "8127:83:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8127:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8107:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8107:6:1"
																},
																"nativeSrc": "8107:113:1",
																"nodeType": "YulFunctionCall",
																"src": "8107:113:1"
															},
															"nativeSrc": "8104:139:1",
															"nodeType": "YulIf",
															"src": "8104:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7840:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7871:1:1",
														"nodeType": "YulTypedName",
														"src": "7871:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7874:1:1",
														"nodeType": "YulTypedName",
														"src": "7874:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7880:7:1",
														"nodeType": "YulTypedName",
														"src": "7880:7:1",
														"type": ""
													}
												],
												"src": "7840:410:1"
											},
											{
												"body": {
													"nativeSrc": "8301:81:1",
													"nodeType": "YulBlock",
													"src": "8301:81:1",
													"statements": [
														{
															"nativeSrc": "8311:65:1",
															"nodeType": "YulAssignment",
															"src": "8311:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8326:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8326:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8333:42:1",
																		"nodeType": "YulLiteral",
																		"src": "8333:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8322:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8322:3:1"
																},
																"nativeSrc": "8322:54:1",
																"nodeType": "YulFunctionCall",
																"src": "8322:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8311:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "8311:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "8256:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8283:5:1",
														"nodeType": "YulTypedName",
														"src": "8283:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8293:7:1",
														"nodeType": "YulTypedName",
														"src": "8293:7:1",
														"type": ""
													}
												],
												"src": "8256:126:1"
											},
											{
												"body": {
													"nativeSrc": "8433:51:1",
													"nodeType": "YulBlock",
													"src": "8433:51:1",
													"statements": [
														{
															"nativeSrc": "8443:35:1",
															"nodeType": "YulAssignment",
															"src": "8443:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8472:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8472:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "8454:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8454:17:1"
																},
																"nativeSrc": "8454:24:1",
																"nodeType": "YulFunctionCall",
																"src": "8454:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8443:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "8443:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "8388:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8415:5:1",
														"nodeType": "YulTypedName",
														"src": "8415:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8425:7:1",
														"nodeType": "YulTypedName",
														"src": "8425:7:1",
														"type": ""
													}
												],
												"src": "8388:96:1"
											},
											{
												"body": {
													"nativeSrc": "8555:53:1",
													"nodeType": "YulBlock",
													"src": "8555:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8572:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8572:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8595:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8595:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8577:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "8577:17:1"
																		},
																		"nativeSrc": "8577:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8577:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8565:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8565:6:1"
																},
																"nativeSrc": "8565:37:1",
																"nodeType": "YulFunctionCall",
																"src": "8565:37:1"
															},
															"nativeSrc": "8565:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "8565:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8490:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8543:5:1",
														"nodeType": "YulTypedName",
														"src": "8543:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8550:3:1",
														"nodeType": "YulTypedName",
														"src": "8550:3:1",
														"type": ""
													}
												],
												"src": "8490:118:1"
											},
											{
												"body": {
													"nativeSrc": "8712:124:1",
													"nodeType": "YulBlock",
													"src": "8712:124:1",
													"statements": [
														{
															"nativeSrc": "8722:26:1",
															"nodeType": "YulAssignment",
															"src": "8722:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8734:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8734:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8745:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8745:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8730:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8730:3:1"
																},
																"nativeSrc": "8730:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8730:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8722:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8722:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8802:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8802:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8815:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8815:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8826:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8826:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8811:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8811:3:1"
																		},
																		"nativeSrc": "8811:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8811:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8758:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8758:43:1"
																},
																"nativeSrc": "8758:71:1",
																"nodeType": "YulFunctionCall",
																"src": "8758:71:1"
															},
															"nativeSrc": "8758:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "8758:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8614:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8684:9:1",
														"nodeType": "YulTypedName",
														"src": "8684:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8696:6:1",
														"nodeType": "YulTypedName",
														"src": "8696:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8707:4:1",
														"nodeType": "YulTypedName",
														"src": "8707:4:1",
														"type": ""
													}
												],
												"src": "8614:222:1"
											},
											{
												"body": {
													"nativeSrc": "8886:147:1",
													"nodeType": "YulBlock",
													"src": "8886:147:1",
													"statements": [
														{
															"nativeSrc": "8896:25:1",
															"nodeType": "YulAssignment",
															"src": "8896:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8919:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8919:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8901:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8901:17:1"
																},
																"nativeSrc": "8901:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8901:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8896:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8896:1:1"
																}
															]
														},
														{
															"nativeSrc": "8930:25:1",
															"nodeType": "YulAssignment",
															"src": "8930:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8953:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8953:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8935:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8935:17:1"
																},
																"nativeSrc": "8935:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8935:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8930:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8930:1:1"
																}
															]
														},
														{
															"nativeSrc": "8964:16:1",
															"nodeType": "YulAssignment",
															"src": "8964:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8975:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8975:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8978:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8978:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8971:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8971:3:1"
																},
																"nativeSrc": "8971:9:1",
																"nodeType": "YulFunctionCall",
																"src": "8971:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8964:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8964:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9004:22:1",
																"nodeType": "YulBlock",
																"src": "9004:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9006:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9006:16:1"
																			},
																			"nativeSrc": "9006:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9006:18:1"
																		},
																		"nativeSrc": "9006:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9006:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8996:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8996:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8999:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8999:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8993:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8993:2:1"
																},
																"nativeSrc": "8993:10:1",
																"nodeType": "YulFunctionCall",
																"src": "8993:10:1"
															},
															"nativeSrc": "8990:36:1",
															"nodeType": "YulIf",
															"src": "8990:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8842:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8873:1:1",
														"nodeType": "YulTypedName",
														"src": "8873:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8876:1:1",
														"nodeType": "YulTypedName",
														"src": "8876:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8882:3:1",
														"nodeType": "YulTypedName",
														"src": "8882:3:1",
														"type": ""
													}
												],
												"src": "8842:191:1"
											},
											{
												"body": {
													"nativeSrc": "9104:53:1",
													"nodeType": "YulBlock",
													"src": "9104:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9121:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9121:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9144:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "9144:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9126:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "9126:17:1"
																		},
																		"nativeSrc": "9126:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9126:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9114:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9114:6:1"
																},
																"nativeSrc": "9114:37:1",
																"nodeType": "YulFunctionCall",
																"src": "9114:37:1"
															},
															"nativeSrc": "9114:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "9114:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9039:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9092:5:1",
														"nodeType": "YulTypedName",
														"src": "9092:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9099:3:1",
														"nodeType": "YulTypedName",
														"src": "9099:3:1",
														"type": ""
													}
												],
												"src": "9039:118:1"
											},
											{
												"body": {
													"nativeSrc": "9317:288:1",
													"nodeType": "YulBlock",
													"src": "9317:288:1",
													"statements": [
														{
															"nativeSrc": "9327:26:1",
															"nodeType": "YulAssignment",
															"src": "9327:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9339:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9339:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9350:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9350:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9335:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9335:3:1"
																},
																"nativeSrc": "9335:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9335:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9327:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9327:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9407:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9407:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9420:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9420:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9431:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9431:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9416:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9416:3:1"
																		},
																		"nativeSrc": "9416:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9416:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9363:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9363:43:1"
																},
																"nativeSrc": "9363:71:1",
																"nodeType": "YulFunctionCall",
																"src": "9363:71:1"
															},
															"nativeSrc": "9363:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "9363:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9488:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9488:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9501:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9501:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9512:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9512:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9497:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9497:3:1"
																		},
																		"nativeSrc": "9497:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9497:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9444:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9444:43:1"
																},
																"nativeSrc": "9444:72:1",
																"nodeType": "YulFunctionCall",
																"src": "9444:72:1"
															},
															"nativeSrc": "9444:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "9444:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9570:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9570:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9583:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9583:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9594:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9594:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9579:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9579:3:1"
																		},
																		"nativeSrc": "9579:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9579:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9526:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9526:43:1"
																},
																"nativeSrc": "9526:72:1",
																"nodeType": "YulFunctionCall",
																"src": "9526:72:1"
															},
															"nativeSrc": "9526:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "9526:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9163:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9273:9:1",
														"nodeType": "YulTypedName",
														"src": "9273:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9285:6:1",
														"nodeType": "YulTypedName",
														"src": "9285:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9293:6:1",
														"nodeType": "YulTypedName",
														"src": "9293:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9301:6:1",
														"nodeType": "YulTypedName",
														"src": "9301:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9312:4:1",
														"nodeType": "YulTypedName",
														"src": "9312:4:1",
														"type": ""
													}
												],
												"src": "9163:442:1"
											},
											{
												"body": {
													"nativeSrc": "9709:124:1",
													"nodeType": "YulBlock",
													"src": "9709:124:1",
													"statements": [
														{
															"nativeSrc": "9719:26:1",
															"nodeType": "YulAssignment",
															"src": "9719:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9731:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9731:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9742:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9742:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9727:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9727:3:1"
																},
																"nativeSrc": "9727:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9727:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9719:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9719:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9799:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9799:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9812:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9812:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9823:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9823:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9808:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9808:3:1"
																		},
																		"nativeSrc": "9808:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9808:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9755:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9755:43:1"
																},
																"nativeSrc": "9755:71:1",
																"nodeType": "YulFunctionCall",
																"src": "9755:71:1"
															},
															"nativeSrc": "9755:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "9755:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9611:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9681:9:1",
														"nodeType": "YulTypedName",
														"src": "9681:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9693:6:1",
														"nodeType": "YulTypedName",
														"src": "9693:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9704:4:1",
														"nodeType": "YulTypedName",
														"src": "9704:4:1",
														"type": ""
													}
												],
												"src": "9611:222:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600a60055534801562000015575f80fd5b506040518060400160405280600f81526020017f576f726170616b6f726e546f6b656e00000000000000000000000000000000008152506040518060400160405280600381526020017f574b540000000000000000000000000000000000000000000000000000000000815250816003908162000093919062000648565b508060049081620000a5919062000648565b505050620000e830620000bd6200012e60201b60201c565b600a620000cb9190620008b5565b63055d4a80620000dc919062000905565b6200013660201b60201c565b3360065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000a4e565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620001a9575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620001a0919062000992565b60405180910390fd5b620001bc5f8383620001c060201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000214578060025f828254620002079190620009ad565b92505081905550620002e5565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015620002a0578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016200029793929190620009f8565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200032e578060025f828254039250508190555062000378565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003d7919062000a33565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200046057607f821691505b6020821081036200047657620004756200041b565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620004da7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200049d565b620004e686836200049d565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620005306200052a6200052484620004fe565b62000507565b620004fe565b9050919050565b5f819050919050565b6200054b8362000510565b620005636200055a8262000537565b848454620004a9565b825550505050565b5f90565b620005796200056b565b6200058681848462000540565b505050565b5b81811015620005ad57620005a15f826200056f565b6001810190506200058c565b5050565b601f821115620005fc57620005c6816200047c565b620005d1846200048e565b81016020851015620005e1578190505b620005f9620005f0856200048e565b8301826200058b565b50505b505050565b5f82821c905092915050565b5f6200061e5f198460080262000601565b1980831691505092915050565b5f6200063883836200060d565b9150826002028217905092915050565b6200065382620003e4565b67ffffffffffffffff8111156200066f576200066e620003ee565b5b6200067b825462000448565b62000688828285620005b1565b5f60209050601f831160018114620006be575f8415620006a9578287015190505b620006b585826200062b565b86555062000724565b601f198416620006ce866200047c565b5f5b82811015620006f757848901518255600182019150602085019450602081019050620006d0565b8683101562000717578489015162000713601f8916826200060d565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115620007b6578086048111156200078e576200078d6200072c565b5b60018516156200079e5780820291505b8081029050620007ae8562000759565b94506200076e565b94509492505050565b5f82620007d05760019050620008a2565b81620007df575f9050620008a2565b8160018114620007f85760028114620008035762000839565b6001915050620008a2565b60ff8411156200081857620008176200072c565b5b8360020a9150848211156200083257620008316200072c565b5b50620008a2565b5060208310610133831016604e8410600b8410161715620008735782820a9050838111156200086d576200086c6200072c565b5b620008a2565b62000882848484600162000765565b925090508184048111156200089c576200089b6200072c565b5b81810290505b9392505050565b5f60ff82169050919050565b5f620008c182620004fe565b9150620008ce83620008a9565b9250620008fd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620007bf565b905092915050565b5f6200091182620004fe565b91506200091e83620004fe565b92508282026200092e81620004fe565b915082820484148315176200094857620009476200072c565b5b5092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200097a826200094f565b9050919050565b6200098c816200096e565b82525050565b5f602082019050620009a75f83018462000981565b92915050565b5f620009b982620004fe565b9150620009c683620004fe565b9250828201905080821115620009e157620009e06200072c565b5b92915050565b620009f281620004fe565b82525050565b5f60608201905062000a0d5f83018662000981565b62000a1c6020830185620009e7565b62000a2b6040830184620009e7565b949350505050565b5f60208201905062000a485f830184620009e7565b92915050565b61139b8062000a5c5f395ff3fe6080604052600436106100dc575f3560e01c806370a082311161007e578063a9059cbb11610058578063a9059cbb14610286578063db068e0e146102c2578063dd62ed3e146102ea578063f851a44014610326576100dc565b806370a082311461021657806395d89b4114610252578063a6f2ae3a1461027c576100dc565b806318160ddd116100ba57806318160ddd1461017057806323b872dd1461019a578063313ce567146101d65780633ccfd60b14610200576100dc565b806302b6c5af146100e057806306fdde031461010a578063095ea7b314610134575b5f80fd5b3480156100eb575f80fd5b506100f4610350565b6040516101019190610dfe565b60405180910390f35b348015610115575f80fd5b5061011e610356565b60405161012b9190610ea1565b60405180910390f35b34801561013f575f80fd5b5061015a60048036038101906101559190610f49565b6103e6565b6040516101679190610fa1565b60405180910390f35b34801561017b575f80fd5b50610184610408565b6040516101919190610dfe565b60405180910390f35b3480156101a5575f80fd5b506101c060048036038101906101bb9190610fba565b610411565b6040516101cd9190610fa1565b60405180910390f35b3480156101e1575f80fd5b506101ea61043f565b6040516101f79190611025565b60405180910390f35b34801561020b575f80fd5b50610214610447565b005b348015610221575f80fd5b5061023c6004803603810190610237919061103e565b61053d565b6040516102499190610dfe565b60405180910390f35b34801561025d575f80fd5b50610266610582565b6040516102739190610ea1565b60405180910390f35b610284610612565b005b348015610291575f80fd5b506102ac60048036038101906102a79190610f49565b6106ca565b6040516102b99190610fa1565b60405180910390f35b3480156102cd575f80fd5b506102e860048036038101906102e39190611069565b6106ec565b005b3480156102f5575f80fd5b50610310600480360381019061030b9190611094565b6107bc565b60405161031d9190610dfe565b60405180910390f35b348015610331575f80fd5b5061033a61083e565b60405161034791906110e1565b60405180910390f35b60055481565b60606003805461036590611127565b80601f016020809104026020016040519081016040528092919081815260200182805461039190611127565b80156103dc5780601f106103b3576101008083540402835291602001916103dc565b820191905f5260205f20905b8154815290600101906020018083116103bf57829003601f168201915b5050505050905090565b5f806103f0610863565b90506103fd81858561086a565b600191505092915050565b5f600254905090565b5f8061041b610863565b905061042885828561087c565b61043385858561090e565b60019150509392505050565b5f6012905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cd906111a1565b60405180910390fd5b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f1935050505015801561053a573d5f803e3d5ffd5b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461059190611127565b80601f01602080910402602001604051908101604052809291908181526020018280546105bd90611127565b80156106085780601f106105df57610100808354040283529160200191610608565b820191905f5260205f20905b8154815290600101906020018083116105eb57829003601f168201915b5050505050905090565b5f6005543461062191906111ec565b905061062c3061053d565b81111561066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590611277565b60405180910390fd5b61067930338361090e565b3373ffffffffffffffffffffffffffffffffffffffff167fe3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e826040516106bf9190610dfe565b60405180910390a250565b5f806106d4610863565b90506106e181858561090e565b600191505092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461077b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610772906112df565b60405180910390fd5b806005819055507f8bc87b062b954eccd7f9017a070917f40c9c40af9ff4b41ed4f52a6a37199276816040516107b19190610dfe565b60405180910390a150565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f33905090565b61087783838360016109fe565b505050565b5f61088784846107bc565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461090857818110156108f9578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016108f0939291906112fd565b60405180910390fd5b61090784848484035f6109fe565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361097e575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161097591906110e1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109ee575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109e591906110e1565b60405180910390fd5b6109f9838383610bcd565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a6e575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610a6591906110e1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ade575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ad591906110e1565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610bc7578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610bbe9190610dfe565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c1d578060025f828254610c119190611332565b92505081905550610ceb565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610ca6578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c9d939291906112fd565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d32578060025f8282540392505081905550610d7c565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dd99190610dfe565b60405180910390a3505050565b5f819050919050565b610df881610de6565b82525050565b5f602082019050610e115f830184610def565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610e4e578082015181840152602081019050610e33565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610e7382610e17565b610e7d8185610e21565b9350610e8d818560208601610e31565b610e9681610e59565b840191505092915050565b5f6020820190508181035f830152610eb98184610e69565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610eee82610ec5565b9050919050565b610efe81610ee4565b8114610f08575f80fd5b50565b5f81359050610f1981610ef5565b92915050565b610f2881610de6565b8114610f32575f80fd5b50565b5f81359050610f4381610f1f565b92915050565b5f8060408385031215610f5f57610f5e610ec1565b5b5f610f6c85828601610f0b565b9250506020610f7d85828601610f35565b9150509250929050565b5f8115159050919050565b610f9b81610f87565b82525050565b5f602082019050610fb45f830184610f92565b92915050565b5f805f60608486031215610fd157610fd0610ec1565b5b5f610fde86828701610f0b565b9350506020610fef86828701610f0b565b925050604061100086828701610f35565b9150509250925092565b5f60ff82169050919050565b61101f8161100a565b82525050565b5f6020820190506110385f830184611016565b92915050565b5f6020828403121561105357611052610ec1565b5b5f61106084828501610f0b565b91505092915050565b5f6020828403121561107e5761107d610ec1565b5b5f61108b84828501610f35565b91505092915050565b5f80604083850312156110aa576110a9610ec1565b5b5f6110b785828601610f0b565b92505060206110c885828601610f0b565b9150509250929050565b6110db81610ee4565b82525050565b5f6020820190506110f45f8301846110d2565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061113e57607f821691505b602082108103611151576111506110fa565b5b50919050565b7f4f6e6c792061646d696e2063616e2077697468647261770000000000000000005f82015250565b5f61118b601783610e21565b915061119682611157565b602082019050919050565b5f6020820190508181035f8301526111b88161117f565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111f682610de6565b915061120183610de6565b925082820261120f81610de6565b91508282048414831517611226576112256111bf565b5b5092915050565b7f4e6f7420656e6f75676820746f6b656e730000000000000000000000000000005f82015250565b5f611261601183610e21565b915061126c8261122d565b602082019050919050565b5f6020820190508181035f83015261128e81611255565b9050919050565b7f4f6e6c792061646d696e2063616e206368616e676520746865207261746500005f82015250565b5f6112c9601e83610e21565b91506112d482611295565b602082019050919050565b5f6020820190508181035f8301526112f6816112bd565b9050919050565b5f6060820190506113105f8301866110d2565b61131d6020830185610def565b61132a6040830184610def565b949350505050565b5f61133c82610de6565b915061134783610de6565b925082820190508082111561135f5761135e6111bf565b5b9291505056fea2646970667358221220e04ce2cb12cba82a5a206700ecf03dfec784407c886144edc4803ed0c7fa14e664736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x576F726170616B6F726E546F6B656E0000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x574B540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x93 SWAP2 SWAP1 PUSH3 0x648 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xA5 SWAP2 SWAP1 PUSH3 0x648 JUMP JUMPDEST POP POP POP PUSH3 0xE8 ADDRESS PUSH3 0xBD PUSH3 0x12E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0xCB SWAP2 SWAP1 PUSH3 0x8B5 JUMP JUMPDEST PUSH4 0x55D4A80 PUSH3 0xDC SWAP2 SWAP1 PUSH3 0x905 JUMP JUMPDEST PUSH3 0x136 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST CALLER PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0xA4E JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1A9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1A0 SWAP2 SWAP1 PUSH3 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1BC PUSH0 DUP4 DUP4 PUSH3 0x1C0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x214 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x207 SWAP2 SWAP1 PUSH3 0x9AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x2E5 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x2A0 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x297 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x9F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x32E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x378 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x3D7 SWAP2 SWAP1 PUSH3 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x460 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x476 JUMPI PUSH3 0x475 PUSH3 0x41B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x4DA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x49D JUMP JUMPDEST PUSH3 0x4E6 DUP7 DUP4 PUSH3 0x49D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x530 PUSH3 0x52A PUSH3 0x524 DUP5 PUSH3 0x4FE JUMP JUMPDEST PUSH3 0x507 JUMP JUMPDEST PUSH3 0x4FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x54B DUP4 PUSH3 0x510 JUMP JUMPDEST PUSH3 0x563 PUSH3 0x55A DUP3 PUSH3 0x537 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x4A9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x579 PUSH3 0x56B JUMP JUMPDEST PUSH3 0x586 DUP2 DUP5 DUP5 PUSH3 0x540 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5AD JUMPI PUSH3 0x5A1 PUSH0 DUP3 PUSH3 0x56F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x58C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x5FC JUMPI PUSH3 0x5C6 DUP2 PUSH3 0x47C JUMP JUMPDEST PUSH3 0x5D1 DUP5 PUSH3 0x48E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x5E1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x5F9 PUSH3 0x5F0 DUP6 PUSH3 0x48E JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x58B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x61E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x601 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x638 DUP4 DUP4 PUSH3 0x60D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x653 DUP3 PUSH3 0x3E4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x66F JUMPI PUSH3 0x66E PUSH3 0x3EE JUMP JUMPDEST JUMPDEST PUSH3 0x67B DUP3 SLOAD PUSH3 0x448 JUMP JUMPDEST PUSH3 0x688 DUP3 DUP3 DUP6 PUSH3 0x5B1 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6BE JUMPI PUSH0 DUP5 ISZERO PUSH3 0x6A9 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x6B5 DUP6 DUP3 PUSH3 0x62B JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x724 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x6CE DUP7 PUSH3 0x47C JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x6F7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x6D0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x717 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x713 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x60D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x7B6 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x78E JUMPI PUSH3 0x78D PUSH3 0x72C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x79E JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x7AE DUP6 PUSH3 0x759 JUMP JUMPDEST SWAP5 POP PUSH3 0x76E JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x7D0 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0x8A2 JUMP JUMPDEST DUP2 PUSH3 0x7DF JUMPI PUSH0 SWAP1 POP PUSH3 0x8A2 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x7F8 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x803 JUMPI PUSH3 0x839 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x8A2 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x818 JUMPI PUSH3 0x817 PUSH3 0x72C JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x832 JUMPI PUSH3 0x831 PUSH3 0x72C JUMP JUMPDEST JUMPDEST POP PUSH3 0x8A2 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x873 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x86D JUMPI PUSH3 0x86C PUSH3 0x72C JUMP JUMPDEST JUMPDEST PUSH3 0x8A2 JUMP JUMPDEST PUSH3 0x882 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x765 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0x89C JUMPI PUSH3 0x89B PUSH3 0x72C JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x8C1 DUP3 PUSH3 0x4FE JUMP JUMPDEST SWAP2 POP PUSH3 0x8CE DUP4 PUSH3 0x8A9 JUMP JUMPDEST SWAP3 POP PUSH3 0x8FD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x7BF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x911 DUP3 PUSH3 0x4FE JUMP JUMPDEST SWAP2 POP PUSH3 0x91E DUP4 PUSH3 0x4FE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x92E DUP2 PUSH3 0x4FE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x948 JUMPI PUSH3 0x947 PUSH3 0x72C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x97A DUP3 PUSH3 0x94F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x98C DUP2 PUSH3 0x96E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x9A7 PUSH0 DUP4 ADD DUP5 PUSH3 0x981 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x9B9 DUP3 PUSH3 0x4FE JUMP JUMPDEST SWAP2 POP PUSH3 0x9C6 DUP4 PUSH3 0x4FE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x9E1 JUMPI PUSH3 0x9E0 PUSH3 0x72C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x9F2 DUP2 PUSH3 0x4FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xA0D PUSH0 DUP4 ADD DUP7 PUSH3 0x981 JUMP JUMPDEST PUSH3 0xA1C PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x9E7 JUMP JUMPDEST PUSH3 0xA2B PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x9E7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xA48 PUSH0 DUP4 ADD DUP5 PUSH3 0x9E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x139B DUP1 PUSH3 0xA5C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x7E JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xDB068E0E EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x326 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x27C JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xBA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x200 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x2B6C5AF EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x134 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x350 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x356 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xF49 JUMP JUMPDEST PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA PUSH2 0x43F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x1025 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x447 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x266 PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH2 0x612 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0xF49 JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH2 0x6EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1094 JUMP JUMPDEST PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33A PUSH2 0x83E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x365 SWAP1 PUSH2 0x1127 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x391 SWAP1 PUSH2 0x1127 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3DC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3F0 PUSH2 0x863 JUMP JUMPDEST SWAP1 POP PUSH2 0x3FD DUP2 DUP6 DUP6 PUSH2 0x86A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x41B PUSH2 0x863 JUMP JUMPDEST SWAP1 POP PUSH2 0x428 DUP6 DUP3 DUP6 PUSH2 0x87C JUMP JUMPDEST PUSH2 0x433 DUP6 DUP6 DUP6 PUSH2 0x90E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CD SWAP1 PUSH2 0x11A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x53A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x591 SWAP1 PUSH2 0x1127 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5BD SWAP1 PUSH2 0x1127 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x608 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5DF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x608 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD CALLVALUE PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x11EC JUMP JUMPDEST SWAP1 POP PUSH2 0x62C ADDRESS PUSH2 0x53D JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x66E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x665 SWAP1 PUSH2 0x1277 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x679 ADDRESS CALLER DUP4 PUSH2 0x90E JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE3D4187F6CA4248660CC0AC8B8056515BAC4A8132BE2ECA31D6D0CC170722A7E DUP3 PUSH1 0x40 MLOAD PUSH2 0x6BF SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6D4 PUSH2 0x863 JUMP JUMPDEST SWAP1 POP PUSH2 0x6E1 DUP2 DUP6 DUP6 PUSH2 0x90E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x77B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x772 SWAP1 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH32 0x8BC87B062B954ECCD7F9017A070917F40C9C40AF9FF4B41ED4F52A6A37199276 DUP2 PUSH1 0x40 MLOAD PUSH2 0x7B1 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x877 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x9FE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x887 DUP5 DUP5 PUSH2 0x7BC JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x908 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8F9 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x907 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x9FE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x97E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x975 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9EE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E5 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F9 DUP4 DUP4 DUP4 PUSH2 0xBCD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA65 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xADE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xBC7 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBBE SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC1D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC11 SWAP2 SWAP1 PUSH2 0x1332 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCEB JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCA6 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD32 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD7C JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDD9 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF8 DUP2 PUSH2 0xDE6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE11 PUSH0 DUP4 ADD DUP5 PUSH2 0xDEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE4E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE33 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE73 DUP3 PUSH2 0xE17 JUMP JUMPDEST PUSH2 0xE7D DUP2 DUP6 PUSH2 0xE21 JUMP JUMPDEST SWAP4 POP PUSH2 0xE8D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE31 JUMP JUMPDEST PUSH2 0xE96 DUP2 PUSH2 0xE59 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEB9 DUP2 DUP5 PUSH2 0xE69 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEEE DUP3 PUSH2 0xEC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEFE DUP2 PUSH2 0xEE4 JUMP JUMPDEST DUP2 EQ PUSH2 0xF08 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF19 DUP2 PUSH2 0xEF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF28 DUP2 PUSH2 0xDE6 JUMP JUMPDEST DUP2 EQ PUSH2 0xF32 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF43 DUP2 PUSH2 0xF1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF5F JUMPI PUSH2 0xF5E PUSH2 0xEC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF6C DUP6 DUP3 DUP7 ADD PUSH2 0xF0B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF7D DUP6 DUP3 DUP7 ADD PUSH2 0xF35 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9B DUP2 PUSH2 0xF87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFB4 PUSH0 DUP4 ADD DUP5 PUSH2 0xF92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFD1 JUMPI PUSH2 0xFD0 PUSH2 0xEC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFDE DUP7 DUP3 DUP8 ADD PUSH2 0xF0B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFEF DUP7 DUP3 DUP8 ADD PUSH2 0xF0B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1000 DUP7 DUP3 DUP8 ADD PUSH2 0xF35 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x101F DUP2 PUSH2 0x100A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1038 PUSH0 DUP4 ADD DUP5 PUSH2 0x1016 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1053 JUMPI PUSH2 0x1052 PUSH2 0xEC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1060 DUP5 DUP3 DUP6 ADD PUSH2 0xF0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x107E JUMPI PUSH2 0x107D PUSH2 0xEC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x108B DUP5 DUP3 DUP6 ADD PUSH2 0xF35 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10AA JUMPI PUSH2 0x10A9 PUSH2 0xEC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10B7 DUP6 DUP3 DUP7 ADD PUSH2 0xF0B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10C8 DUP6 DUP3 DUP7 ADD PUSH2 0xF0B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x10DB DUP2 PUSH2 0xEE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x10D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x113E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1151 JUMPI PUSH2 0x1150 PUSH2 0x10FA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E207769746864726177000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x118B PUSH1 0x17 DUP4 PUSH2 0xE21 JUMP JUMPDEST SWAP2 POP PUSH2 0x1196 DUP3 PUSH2 0x1157 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11B8 DUP2 PUSH2 0x117F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11F6 DUP3 PUSH2 0xDE6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1201 DUP4 PUSH2 0xDE6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x120F DUP2 PUSH2 0xDE6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1226 JUMPI PUSH2 0x1225 PUSH2 0x11BF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E73000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1261 PUSH1 0x11 DUP4 PUSH2 0xE21 JUMP JUMPDEST SWAP2 POP PUSH2 0x126C DUP3 PUSH2 0x122D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x128E DUP2 PUSH2 0x1255 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E206368616E67652074686520726174650000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12C9 PUSH1 0x1E DUP4 PUSH2 0xE21 JUMP JUMPDEST SWAP2 POP PUSH2 0x12D4 DUP3 PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12F6 DUP2 PUSH2 0x12BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1310 PUSH0 DUP4 ADD DUP7 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x131D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0x132A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDEF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x133C DUP3 PUSH2 0xDE6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1347 DUP4 PUSH2 0xDE6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x135F JUMPI PUSH2 0x135E PUSH2 0x11BF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0x4C 0xE2 0xCB SLT 0xCB 0xA8 0x2A GAS KECCAK256 PUSH8 0xECF03DFEC78440 PUSH29 0x886144EDC4803ED0C7FA14E664736F6C63430008150033000000000000 ",
							"sourceMap": "21970:1025:0:-:0;;;22048:2;22010:40;;22179:140;;;;;;;;;;12654:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12728:5;12720;:13;;;;;;:::i;:::-;;12753:7;12743;:17;;;;;;:::i;:::-;;12654:113;;22235:49:::1;22249:4;22273:10;:8;;;:10;;:::i;:::-;22267:2;:16;;;;:::i;:::-;22256:8;:27;;;;:::i;:::-;22235:5;;;:49;;:::i;:::-;22302:10;22294:5;;:18;;;;;;;;;;;;;;;;;;21970:1025:::0;;13760:82;13809:5;13833:2;13826:9;;13760:82;:::o;18479:208::-;18568:1;18549:21;;:7;:21;;;18545:91;;18622:1;18593:32;;;;;;;;;;;:::i;:::-;;;;;;;;18545:91;18645:35;18661:1;18665:7;18674:5;18645:7;;;:35;;:::i;:::-;18479:208;;:::o;17029:1107::-;17134:1;17118:18;;:4;:18;;;17114:540;;17270:5;17254:12;;:21;;;;;;;:::i;:::-;;;;;;;;17114:540;;;17306:19;17328:9;:15;17338:4;17328:15;;;;;;;;;;;;;;;;17306:37;;17375:5;17361:11;:19;17357:115;;;17432:4;17438:11;17451:5;17407:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17357:115;17624:5;17610:11;:19;17592:9;:15;17602:4;17592:15;;;;;;;;;;;;;;;:37;;;;17292:362;17114:540;17682:1;17668:16;;:2;:16;;;17664:425;;17847:5;17831:12;;:21;;;;;;;;;;;17664:425;;;18059:5;18042:9;:13;18052:2;18042:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17664:425;18119:2;18104:25;;18113:4;18104:25;;;18123:5;18104:25;;;;;;:::i;:::-;;;;;;;;17029:1107;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:180::-;5282:77;5279:1;5272:88;5379:4;5376:1;5369:15;5403:4;5400:1;5393:15;5420:102;5462:8;5509:5;5506:1;5502:13;5481:34;;5420:102;;;:::o;5528:848::-;5589:5;5596:4;5620:6;5611:15;;5644:5;5635:14;;5658:712;5679:1;5669:8;5666:15;5658:712;;;5774:4;5769:3;5765:14;5759:4;5756:24;5753:50;;;5783:18;;:::i;:::-;5753:50;5833:1;5823:8;5819:16;5816:451;;;6248:4;6241:5;6237:16;6228:25;;5816:451;6298:4;6292;6288:15;6280:23;;6328:32;6351:8;6328:32;:::i;:::-;6316:44;;5658:712;;;5528:848;;;;;;;:::o;6382:1073::-;6436:5;6627:8;6617:40;;6648:1;6639:10;;6650:5;;6617:40;6676:4;6666:36;;6693:1;6684:10;;6695:5;;6666:36;6762:4;6810:1;6805:27;;;;6846:1;6841:191;;;;6755:277;;6805:27;6823:1;6814:10;;6825:5;;;6841:191;6886:3;6876:8;6873:17;6870:43;;;6893:18;;:::i;:::-;6870:43;6942:8;6939:1;6935:16;6926:25;;6977:3;6970:5;6967:14;6964:40;;;6984:18;;:::i;:::-;6964:40;7017:5;;;6755:277;;7141:2;7131:8;7128:16;7122:3;7116:4;7113:13;7109:36;7091:2;7081:8;7078:16;7073:2;7067:4;7064:12;7060:35;7044:111;7041:246;;;7197:8;7191:4;7187:19;7178:28;;7232:3;7225:5;7222:14;7219:40;;;7239:18;;:::i;:::-;7219:40;7272:5;;7041:246;7312:42;7350:3;7340:8;7334:4;7331:1;7312:42;:::i;:::-;7297:57;;;;7386:4;7381:3;7377:14;7370:5;7367:25;7364:51;;;7395:18;;:::i;:::-;7364:51;7444:4;7437:5;7433:16;7424:25;;6382:1073;;;;;;:::o;7461:86::-;7496:7;7536:4;7529:5;7525:16;7514:27;;7461:86;;;:::o;7553:281::-;7611:5;7635:23;7653:4;7635:23;:::i;:::-;7627:31;;7679:25;7695:8;7679:25;:::i;:::-;7667:37;;7723:104;7760:66;7750:8;7744:4;7723:104;:::i;:::-;7714:113;;7553:281;;;;:::o;7840:410::-;7880:7;7903:20;7921:1;7903:20;:::i;:::-;7898:25;;7937:20;7955:1;7937:20;:::i;:::-;7932:25;;7992:1;7989;7985:9;8014:30;8032:11;8014:30;:::i;:::-;8003:41;;8193:1;8184:7;8180:15;8177:1;8174:22;8154:1;8147:9;8127:83;8104:139;;8223:18;;:::i;:::-;8104:139;7888:362;7840:410;;;;:::o;8256:126::-;8293:7;8333:42;8326:5;8322:54;8311:65;;8256:126;;;:::o;8388:96::-;8425:7;8454:24;8472:5;8454:24;:::i;:::-;8443:35;;8388:96;;;:::o;8490:118::-;8577:24;8595:5;8577:24;:::i;:::-;8572:3;8565:37;8490:118;;:::o;8614:222::-;8707:4;8745:2;8734:9;8730:18;8722:26;;8758:71;8826:1;8815:9;8811:17;8802:6;8758:71;:::i;:::-;8614:222;;;;:::o;8842:191::-;8882:3;8901:20;8919:1;8901:20;:::i;:::-;8896:25;;8935:20;8953:1;8935:20;:::i;:::-;8930:25;;8978:1;8975;8971:9;8964:16;;8999:3;8996:1;8993:10;8990:36;;;9006:18;;:::i;:::-;8990:36;8842:191;;;;:::o;9039:118::-;9126:24;9144:5;9126:24;:::i;:::-;9121:3;9114:37;9039:118;;:::o;9163:442::-;9312:4;9350:2;9339:9;9335:18;9327:26;;9363:71;9431:1;9420:9;9416:17;9407:6;9363:71;:::i;:::-;9444:72;9512:2;9501:9;9497:18;9488:6;9444:72;:::i;:::-;9526;9594:2;9583:9;9579:18;9570:6;9526:72;:::i;:::-;9163:442;;;;;;:::o;9611:222::-;9704:4;9742:2;9731:9;9727:18;9719:26;;9755:71;9823:1;9812:9;9808:17;9799:6;9755:71;:::i;:::-;9611:222;;;;:::o;21970:1025:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_654": {
									"entryPoint": 2154,
									"id": 654,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_714": {
									"entryPoint": 2558,
									"id": 714,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_147": {
									"entryPoint": 2147,
									"id": 147,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_762": {
									"entryPoint": 2172,
									"id": 762,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_493": {
									"entryPoint": 2318,
									"id": 493,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_570": {
									"entryPoint": 3021,
									"id": 570,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@admin_771": {
									"entryPoint": 2110,
									"id": 771,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_390": {
									"entryPoint": 1980,
									"id": 390,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_414": {
									"entryPoint": 998,
									"id": 414,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_349": {
									"entryPoint": 1341,
									"id": 349,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buy_846": {
									"entryPoint": 1554,
									"id": 846,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_327": {
									"entryPoint": 1087,
									"id": 327,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@exchangeRateForOneEther_769": {
									"entryPoint": 848,
									"id": 769,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_309": {
									"entryPoint": 854,
									"id": 309,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setExchangeRate_868": {
									"entryPoint": 1772,
									"id": 868,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_318": {
									"entryPoint": 1410,
									"id": 318,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_336": {
									"entryPoint": 1032,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_446": {
									"entryPoint": 1041,
									"id": 446,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_373": {
									"entryPoint": 1738,
									"id": 373,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdraw_892": {
									"entryPoint": 1095,
									"id": 892,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0f10257f08d816bc8f48d4eaea80001c132074cc09321d652527afabb4d0b030_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_972fbfa1ab705252aafd96b27fcf7b5a6c24910c764d6d12e44b19430bc96b03_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4861,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0f10257f08d816bc8f48d4eaea80001c132074cc09321d652527afabb4d0b030__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_972fbfa1ab705252aafd96b27fcf7b5a6c24910c764d6d12e44b19430bc96b03__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3633,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4543,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4346,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3777,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0f10257f08d816bc8f48d4eaea80001c132074cc09321d652527afabb4d0b030": {
									"entryPoint": 4439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_972fbfa1ab705252aafd96b27fcf7b5a6c24910c764d6d12e44b19430bc96b03": {
									"entryPoint": 4757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d": {
									"entryPoint": 4653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11040:1",
										"nodeType": "YulBlock",
										"src": "0:11040:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "312:124:1",
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nativeSrc": "322:26:1",
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nativeSrc": "330:18:1",
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:1",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nativeSrc": "411:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nativeSrc": "358:71:1",
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nativeSrc": "358:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:1",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:1",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nativeSrc": "501:40:1",
													"nodeType": "YulBlock",
													"src": "501:40:1",
													"statements": [
														{
															"nativeSrc": "512:22:1",
															"nodeType": "YulAssignment",
															"src": "512:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "528:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "528:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "522:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:1"
																},
																"nativeSrc": "522:12:1",
																"nodeType": "YulFunctionCall",
																"src": "522:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "512:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "512:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "442:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "484:5:1",
														"nodeType": "YulTypedName",
														"src": "484:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "494:6:1",
														"nodeType": "YulTypedName",
														"src": "494:6:1",
														"type": ""
													}
												],
												"src": "442:99:1"
											},
											{
												"body": {
													"nativeSrc": "643:73:1",
													"nodeType": "YulBlock",
													"src": "643:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "660:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "660:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "665:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "665:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "653:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:1"
																},
																"nativeSrc": "653:19:1",
																"nodeType": "YulFunctionCall",
																"src": "653:19:1"
															},
															"nativeSrc": "653:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "653:19:1"
														},
														{
															"nativeSrc": "681:29:1",
															"nodeType": "YulAssignment",
															"src": "681:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "700:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "700:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "705:4:1",
																		"nodeType": "YulLiteral",
																		"src": "705:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "696:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "696:3:1"
																},
																"nativeSrc": "696:14:1",
																"nodeType": "YulFunctionCall",
																"src": "696:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "681:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "681:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "547:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "615:3:1",
														"nodeType": "YulTypedName",
														"src": "615:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "620:6:1",
														"nodeType": "YulTypedName",
														"src": "620:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "631:11:1",
														"nodeType": "YulTypedName",
														"src": "631:11:1",
														"type": ""
													}
												],
												"src": "547:169:1"
											},
											{
												"body": {
													"nativeSrc": "784:184:1",
													"nodeType": "YulBlock",
													"src": "784:184:1",
													"statements": [
														{
															"nativeSrc": "794:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "794:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "803:1:1",
																"nodeType": "YulLiteral",
																"src": "803:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "798:1:1",
																	"nodeType": "YulTypedName",
																	"src": "798:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "863:63:1",
																"nodeType": "YulBlock",
																"src": "863:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "888:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "888:3:1"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "893:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "893:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "884:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "884:3:1"
																					},
																					"nativeSrc": "884:11:1",
																					"nodeType": "YulFunctionCall",
																					"src": "884:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "907:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "907:3:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "912:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "912:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "903:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "903:3:1"
																							},
																							"nativeSrc": "903:11:1",
																							"nodeType": "YulFunctionCall",
																							"src": "903:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "897:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "897:5:1"
																					},
																					"nativeSrc": "897:18:1",
																					"nodeType": "YulFunctionCall",
																					"src": "897:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "877:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "877:6:1"
																			},
																			"nativeSrc": "877:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "877:39:1"
																		},
																		"nativeSrc": "877:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "877:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "824:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "824:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "827:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "827:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "821:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "821:2:1"
																},
																"nativeSrc": "821:13:1",
																"nodeType": "YulFunctionCall",
																"src": "821:13:1"
															},
															"nativeSrc": "813:113:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "835:19:1",
																"nodeType": "YulBlock",
																"src": "835:19:1",
																"statements": [
																	{
																		"nativeSrc": "837:15:1",
																		"nodeType": "YulAssignment",
																		"src": "837:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "846:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "846:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "849:2:1",
																					"nodeType": "YulLiteral",
																					"src": "849:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "842:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "842:3:1"
																			},
																			"nativeSrc": "842:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "842:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "837:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "837:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "817:3:1",
																"nodeType": "YulBlock",
																"src": "817:3:1",
																"statements": []
															},
															"src": "813:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "946:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "946:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "951:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "951:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "942:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "942:3:1"
																		},
																		"nativeSrc": "942:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "942:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "960:1:1",
																		"nodeType": "YulLiteral",
																		"src": "960:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "935:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "935:6:1"
																},
																"nativeSrc": "935:27:1",
																"nodeType": "YulFunctionCall",
																"src": "935:27:1"
															},
															"nativeSrc": "935:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "935:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "722:246:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "766:3:1",
														"nodeType": "YulTypedName",
														"src": "766:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "771:3:1",
														"nodeType": "YulTypedName",
														"src": "771:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "776:6:1",
														"nodeType": "YulTypedName",
														"src": "776:6:1",
														"type": ""
													}
												],
												"src": "722:246:1"
											},
											{
												"body": {
													"nativeSrc": "1022:54:1",
													"nodeType": "YulBlock",
													"src": "1022:54:1",
													"statements": [
														{
															"nativeSrc": "1032:38:1",
															"nodeType": "YulAssignment",
															"src": "1032:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1050:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1050:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1057:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1057:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1046:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1046:3:1"
																		},
																		"nativeSrc": "1046:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1046:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1066:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1066:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1062:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1062:3:1"
																		},
																		"nativeSrc": "1062:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1062:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1042:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1042:3:1"
																},
																"nativeSrc": "1042:28:1",
																"nodeType": "YulFunctionCall",
																"src": "1042:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1032:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1032:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "974:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1005:5:1",
														"nodeType": "YulTypedName",
														"src": "1005:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1015:6:1",
														"nodeType": "YulTypedName",
														"src": "1015:6:1",
														"type": ""
													}
												],
												"src": "974:102:1"
											},
											{
												"body": {
													"nativeSrc": "1174:285:1",
													"nodeType": "YulBlock",
													"src": "1174:285:1",
													"statements": [
														{
															"nativeSrc": "1184:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1184:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1231:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1231:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1198:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "1198:32:1"
																},
																"nativeSrc": "1198:39:1",
																"nodeType": "YulFunctionCall",
																"src": "1198:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1188:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1188:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1246:78:1",
															"nodeType": "YulAssignment",
															"src": "1246:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1312:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1312:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1317:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1317:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1253:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "1253:58:1"
																},
																"nativeSrc": "1253:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1253:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1246:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1246:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1372:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1372:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1379:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1379:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1368:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1368:3:1"
																		},
																		"nativeSrc": "1368:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1368:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1386:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1386:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1391:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1391:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1333:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "1333:34:1"
																},
																"nativeSrc": "1333:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1333:65:1"
															},
															"nativeSrc": "1333:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1333:65:1"
														},
														{
															"nativeSrc": "1407:46:1",
															"nodeType": "YulAssignment",
															"src": "1407:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1418:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1418:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1445:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1445:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1423:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "1423:21:1"
																		},
																		"nativeSrc": "1423:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1423:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1414:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1414:3:1"
																},
																"nativeSrc": "1414:39:1",
																"nodeType": "YulFunctionCall",
																"src": "1414:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1407:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1407:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1082:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1155:5:1",
														"nodeType": "YulTypedName",
														"src": "1155:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1162:3:1",
														"nodeType": "YulTypedName",
														"src": "1162:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1170:3:1",
														"nodeType": "YulTypedName",
														"src": "1170:3:1",
														"type": ""
													}
												],
												"src": "1082:377:1"
											},
											{
												"body": {
													"nativeSrc": "1583:195:1",
													"nodeType": "YulBlock",
													"src": "1583:195:1",
													"statements": [
														{
															"nativeSrc": "1593:26:1",
															"nodeType": "YulAssignment",
															"src": "1593:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1605:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1605:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1616:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1616:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1601:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:3:1"
																},
																"nativeSrc": "1601:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1601:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1593:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1593:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1640:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1651:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1651:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1636:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:1"
																		},
																		"nativeSrc": "1636:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1636:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1659:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1659:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1665:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1665:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1655:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1655:3:1"
																		},
																		"nativeSrc": "1655:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1655:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1629:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1629:6:1"
																},
																"nativeSrc": "1629:47:1",
																"nodeType": "YulFunctionCall",
																"src": "1629:47:1"
															},
															"nativeSrc": "1629:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "1629:47:1"
														},
														{
															"nativeSrc": "1685:86:1",
															"nodeType": "YulAssignment",
															"src": "1685:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1757:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1757:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1766:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1766:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1693:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "1693:63:1"
																},
																"nativeSrc": "1693:78:1",
																"nodeType": "YulFunctionCall",
																"src": "1693:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1685:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1685:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1465:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1555:9:1",
														"nodeType": "YulTypedName",
														"src": "1555:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1567:6:1",
														"nodeType": "YulTypedName",
														"src": "1567:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1578:4:1",
														"nodeType": "YulTypedName",
														"src": "1578:4:1",
														"type": ""
													}
												],
												"src": "1465:313:1"
											},
											{
												"body": {
													"nativeSrc": "1824:35:1",
													"nodeType": "YulBlock",
													"src": "1824:35:1",
													"statements": [
														{
															"nativeSrc": "1834:19:1",
															"nodeType": "YulAssignment",
															"src": "1834:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1850:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1850:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1844:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1844:5:1"
																},
																"nativeSrc": "1844:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1844:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1834:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1834:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1784:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1817:6:1",
														"nodeType": "YulTypedName",
														"src": "1817:6:1",
														"type": ""
													}
												],
												"src": "1784:75:1"
											},
											{
												"body": {
													"nativeSrc": "1954:28:1",
													"nodeType": "YulBlock",
													"src": "1954:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1971:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1971:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1974:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1964:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1964:6:1"
																},
																"nativeSrc": "1964:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1964:12:1"
															},
															"nativeSrc": "1964:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1964:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1865:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1865:117:1"
											},
											{
												"body": {
													"nativeSrc": "2077:28:1",
													"nodeType": "YulBlock",
													"src": "2077:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2094:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2094:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2087:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2087:6:1"
																},
																"nativeSrc": "2087:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2087:12:1"
															},
															"nativeSrc": "2087:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "2087:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1988:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1988:117:1"
											},
											{
												"body": {
													"nativeSrc": "2156:81:1",
													"nodeType": "YulBlock",
													"src": "2156:81:1",
													"statements": [
														{
															"nativeSrc": "2166:65:1",
															"nodeType": "YulAssignment",
															"src": "2166:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2181:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2181:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2188:42:1",
																		"nodeType": "YulLiteral",
																		"src": "2188:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2177:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2177:3:1"
																},
																"nativeSrc": "2177:54:1",
																"nodeType": "YulFunctionCall",
																"src": "2177:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2166:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2166:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2111:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2138:5:1",
														"nodeType": "YulTypedName",
														"src": "2138:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2148:7:1",
														"nodeType": "YulTypedName",
														"src": "2148:7:1",
														"type": ""
													}
												],
												"src": "2111:126:1"
											},
											{
												"body": {
													"nativeSrc": "2288:51:1",
													"nodeType": "YulBlock",
													"src": "2288:51:1",
													"statements": [
														{
															"nativeSrc": "2298:35:1",
															"nodeType": "YulAssignment",
															"src": "2298:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2327:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2327:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2309:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2309:17:1"
																},
																"nativeSrc": "2309:24:1",
																"nodeType": "YulFunctionCall",
																"src": "2309:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2298:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2298:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2243:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2270:5:1",
														"nodeType": "YulTypedName",
														"src": "2270:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2280:7:1",
														"nodeType": "YulTypedName",
														"src": "2280:7:1",
														"type": ""
													}
												],
												"src": "2243:96:1"
											},
											{
												"body": {
													"nativeSrc": "2388:79:1",
													"nodeType": "YulBlock",
													"src": "2388:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2445:16:1",
																"nodeType": "YulBlock",
																"src": "2445:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2454:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2454:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2457:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2457:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2447:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2447:6:1"
																			},
																			"nativeSrc": "2447:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2447:12:1"
																		},
																		"nativeSrc": "2447:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2447:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2411:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2411:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2436:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2436:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2418:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2418:17:1"
																				},
																				"nativeSrc": "2418:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2418:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2408:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2408:2:1"
																		},
																		"nativeSrc": "2408:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2408:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2401:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2401:6:1"
																},
																"nativeSrc": "2401:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2401:43:1"
															},
															"nativeSrc": "2398:63:1",
															"nodeType": "YulIf",
															"src": "2398:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2345:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2381:5:1",
														"nodeType": "YulTypedName",
														"src": "2381:5:1",
														"type": ""
													}
												],
												"src": "2345:122:1"
											},
											{
												"body": {
													"nativeSrc": "2525:87:1",
													"nodeType": "YulBlock",
													"src": "2525:87:1",
													"statements": [
														{
															"nativeSrc": "2535:29:1",
															"nodeType": "YulAssignment",
															"src": "2535:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2557:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2557:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2544:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2544:12:1"
																},
																"nativeSrc": "2544:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2544:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2535:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2535:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2600:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2600:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2573:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2573:26:1"
																},
																"nativeSrc": "2573:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2573:33:1"
															},
															"nativeSrc": "2573:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2573:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2473:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2503:6:1",
														"nodeType": "YulTypedName",
														"src": "2503:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2511:3:1",
														"nodeType": "YulTypedName",
														"src": "2511:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2519:5:1",
														"nodeType": "YulTypedName",
														"src": "2519:5:1",
														"type": ""
													}
												],
												"src": "2473:139:1"
											},
											{
												"body": {
													"nativeSrc": "2661:79:1",
													"nodeType": "YulBlock",
													"src": "2661:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2718:16:1",
																"nodeType": "YulBlock",
																"src": "2718:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2727:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2727:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2730:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2730:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2720:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2720:6:1"
																			},
																			"nativeSrc": "2720:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2720:12:1"
																		},
																		"nativeSrc": "2720:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2720:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2684:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2684:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2709:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2709:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2691:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2691:17:1"
																				},
																				"nativeSrc": "2691:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2691:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2681:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2681:2:1"
																		},
																		"nativeSrc": "2681:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2681:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2674:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2674:6:1"
																},
																"nativeSrc": "2674:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2674:43:1"
															},
															"nativeSrc": "2671:63:1",
															"nodeType": "YulIf",
															"src": "2671:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2618:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2654:5:1",
														"nodeType": "YulTypedName",
														"src": "2654:5:1",
														"type": ""
													}
												],
												"src": "2618:122:1"
											},
											{
												"body": {
													"nativeSrc": "2798:87:1",
													"nodeType": "YulBlock",
													"src": "2798:87:1",
													"statements": [
														{
															"nativeSrc": "2808:29:1",
															"nodeType": "YulAssignment",
															"src": "2808:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2830:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2830:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2817:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2817:12:1"
																},
																"nativeSrc": "2817:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2817:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2808:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2808:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2873:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2873:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2846:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2846:26:1"
																},
																"nativeSrc": "2846:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2846:33:1"
															},
															"nativeSrc": "2846:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2846:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2746:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2776:6:1",
														"nodeType": "YulTypedName",
														"src": "2776:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2784:3:1",
														"nodeType": "YulTypedName",
														"src": "2784:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2792:5:1",
														"nodeType": "YulTypedName",
														"src": "2792:5:1",
														"type": ""
													}
												],
												"src": "2746:139:1"
											},
											{
												"body": {
													"nativeSrc": "2974:391:1",
													"nodeType": "YulBlock",
													"src": "2974:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3020:83:1",
																"nodeType": "YulBlock",
																"src": "3020:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3022:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3022:77:1"
																			},
																			"nativeSrc": "3022:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3022:79:1"
																		},
																		"nativeSrc": "3022:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3022:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2995:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2995:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3004:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3004:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2991:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2991:3:1"
																		},
																		"nativeSrc": "2991:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2991:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3016:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3016:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2987:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2987:3:1"
																},
																"nativeSrc": "2987:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2987:32:1"
															},
															"nativeSrc": "2984:119:1",
															"nodeType": "YulIf",
															"src": "2984:119:1"
														},
														{
															"nativeSrc": "3113:117:1",
															"nodeType": "YulBlock",
															"src": "3113:117:1",
															"statements": [
																{
																	"nativeSrc": "3128:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3128:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3142:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3142:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3132:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3132:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3157:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3157:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3192:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3192:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3203:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3203:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3188:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3188:3:1"
																				},
																				"nativeSrc": "3188:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3188:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3212:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3212:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3167:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3167:20:1"
																		},
																		"nativeSrc": "3167:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3167:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3157:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3157:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3240:118:1",
															"nodeType": "YulBlock",
															"src": "3240:118:1",
															"statements": [
																{
																	"nativeSrc": "3255:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3255:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3269:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3269:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3259:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3259:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3285:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3285:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3320:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3320:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3331:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3331:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3316:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3316:3:1"
																				},
																				"nativeSrc": "3316:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3316:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3340:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3340:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3295:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3295:20:1"
																		},
																		"nativeSrc": "3295:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3295:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3285:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3285:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2891:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2936:9:1",
														"nodeType": "YulTypedName",
														"src": "2936:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2947:7:1",
														"nodeType": "YulTypedName",
														"src": "2947:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2959:6:1",
														"nodeType": "YulTypedName",
														"src": "2959:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2967:6:1",
														"nodeType": "YulTypedName",
														"src": "2967:6:1",
														"type": ""
													}
												],
												"src": "2891:474:1"
											},
											{
												"body": {
													"nativeSrc": "3413:48:1",
													"nodeType": "YulBlock",
													"src": "3413:48:1",
													"statements": [
														{
															"nativeSrc": "3423:32:1",
															"nodeType": "YulAssignment",
															"src": "3423:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3448:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3448:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3441:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3441:6:1"
																		},
																		"nativeSrc": "3441:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3434:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3434:6:1"
																},
																"nativeSrc": "3434:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3434:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3423:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3423:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3371:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3395:5:1",
														"nodeType": "YulTypedName",
														"src": "3395:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3405:7:1",
														"nodeType": "YulTypedName",
														"src": "3405:7:1",
														"type": ""
													}
												],
												"src": "3371:90:1"
											},
											{
												"body": {
													"nativeSrc": "3526:50:1",
													"nodeType": "YulBlock",
													"src": "3526:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3543:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3543:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3563:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3563:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3548:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "3548:14:1"
																		},
																		"nativeSrc": "3548:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3548:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3536:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3536:6:1"
																},
																"nativeSrc": "3536:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3536:34:1"
															},
															"nativeSrc": "3536:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3536:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3467:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3514:5:1",
														"nodeType": "YulTypedName",
														"src": "3514:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3521:3:1",
														"nodeType": "YulTypedName",
														"src": "3521:3:1",
														"type": ""
													}
												],
												"src": "3467:109:1"
											},
											{
												"body": {
													"nativeSrc": "3674:118:1",
													"nodeType": "YulBlock",
													"src": "3674:118:1",
													"statements": [
														{
															"nativeSrc": "3684:26:1",
															"nodeType": "YulAssignment",
															"src": "3684:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3696:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3696:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3707:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3707:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3692:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3692:3:1"
																},
																"nativeSrc": "3692:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3692:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3684:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3684:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:1"
																		},
																		"nativeSrc": "3767:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3720:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "3720:37:1"
																},
																"nativeSrc": "3720:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3720:65:1"
															},
															"nativeSrc": "3720:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3720:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3582:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3646:9:1",
														"nodeType": "YulTypedName",
														"src": "3646:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3658:6:1",
														"nodeType": "YulTypedName",
														"src": "3658:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3669:4:1",
														"nodeType": "YulTypedName",
														"src": "3669:4:1",
														"type": ""
													}
												],
												"src": "3582:210:1"
											},
											{
												"body": {
													"nativeSrc": "3898:519:1",
													"nodeType": "YulBlock",
													"src": "3898:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:1",
																"nodeType": "YulBlock",
																"src": "3944:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:1"
																			},
																			"nativeSrc": "3946:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:1"
																		},
																		"nativeSrc": "3946:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:1"
																		},
																		"nativeSrc": "3915:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:1"
																},
																"nativeSrc": "3911:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:1"
															},
															"nativeSrc": "3908:119:1",
															"nodeType": "YulIf",
															"src": "3908:119:1"
														},
														{
															"nativeSrc": "4037:117:1",
															"nodeType": "YulBlock",
															"src": "4037:117:1",
															"statements": [
																{
																	"nativeSrc": "4052:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:1"
																				},
																				"nativeSrc": "4112:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:1"
																		},
																		"nativeSrc": "4091:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:1",
															"nodeType": "YulBlock",
															"src": "4164:118:1",
															"statements": [
																{
																	"nativeSrc": "4179:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:1"
																				},
																				"nativeSrc": "4240:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:1"
																		},
																		"nativeSrc": "4219:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:1",
															"nodeType": "YulBlock",
															"src": "4292:118:1",
															"statements": [
																{
																	"nativeSrc": "4307:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:1"
																				},
																				"nativeSrc": "4368:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:1"
																		},
																		"nativeSrc": "4347:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:1",
														"nodeType": "YulTypedName",
														"src": "3852:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:1",
														"nodeType": "YulTypedName",
														"src": "3863:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:1",
														"nodeType": "YulTypedName",
														"src": "3875:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:1",
														"nodeType": "YulTypedName",
														"src": "3883:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:1",
														"nodeType": "YulTypedName",
														"src": "3891:6:1",
														"type": ""
													}
												],
												"src": "3798:619:1"
											},
											{
												"body": {
													"nativeSrc": "4466:43:1",
													"nodeType": "YulBlock",
													"src": "4466:43:1",
													"statements": [
														{
															"nativeSrc": "4476:27:1",
															"nodeType": "YulAssignment",
															"src": "4476:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:1"
																},
																"nativeSrc": "4487:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:1",
														"nodeType": "YulTypedName",
														"src": "4448:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:1",
														"nodeType": "YulTypedName",
														"src": "4458:7:1",
														"type": ""
													}
												],
												"src": "4423:86:1"
											},
											{
												"body": {
													"nativeSrc": "4576:51:1",
													"nodeType": "YulBlock",
													"src": "4576:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:1",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:1"
																		},
																		"nativeSrc": "4598:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:1"
																},
																"nativeSrc": "4586:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:1"
															},
															"nativeSrc": "4586:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:1",
														"nodeType": "YulTypedName",
														"src": "4564:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:1",
														"nodeType": "YulTypedName",
														"src": "4571:3:1",
														"type": ""
													}
												],
												"src": "4515:112:1"
											},
											{
												"body": {
													"nativeSrc": "4727:120:1",
													"nodeType": "YulBlock",
													"src": "4727:120:1",
													"statements": [
														{
															"nativeSrc": "4737:26:1",
															"nodeType": "YulAssignment",
															"src": "4737:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:1"
																},
																"nativeSrc": "4745:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:1"
																		},
																		"nativeSrc": "4822:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:1"
																},
																"nativeSrc": "4773:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:1"
															},
															"nativeSrc": "4773:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:1",
														"nodeType": "YulTypedName",
														"src": "4699:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:1",
														"nodeType": "YulTypedName",
														"src": "4711:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:1",
														"nodeType": "YulTypedName",
														"src": "4722:4:1",
														"type": ""
													}
												],
												"src": "4633:214:1"
											},
											{
												"body": {
													"nativeSrc": "4919:263:1",
													"nodeType": "YulBlock",
													"src": "4919:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4965:83:1",
																"nodeType": "YulBlock",
																"src": "4965:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4967:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:1"
																			},
																			"nativeSrc": "4967:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:1"
																		},
																		"nativeSrc": "4967:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4940:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4949:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4936:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:1"
																		},
																		"nativeSrc": "4936:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4961:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4932:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:1"
																},
																"nativeSrc": "4932:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4932:32:1"
															},
															"nativeSrc": "4929:119:1",
															"nodeType": "YulIf",
															"src": "4929:119:1"
														},
														{
															"nativeSrc": "5058:117:1",
															"nodeType": "YulBlock",
															"src": "5058:117:1",
															"statements": [
																{
																	"nativeSrc": "5073:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5087:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5077:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5102:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5102:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5137:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5148:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5133:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:1"
																				},
																				"nativeSrc": "5133:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5157:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5112:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:1"
																		},
																		"nativeSrc": "5112:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5102:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4853:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4889:9:1",
														"nodeType": "YulTypedName",
														"src": "4889:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4900:7:1",
														"nodeType": "YulTypedName",
														"src": "4900:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4912:6:1",
														"nodeType": "YulTypedName",
														"src": "4912:6:1",
														"type": ""
													}
												],
												"src": "4853:329:1"
											},
											{
												"body": {
													"nativeSrc": "5254:263:1",
													"nodeType": "YulBlock",
													"src": "5254:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5300:83:1",
																"nodeType": "YulBlock",
																"src": "5300:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5302:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5302:77:1"
																			},
																			"nativeSrc": "5302:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5302:79:1"
																		},
																		"nativeSrc": "5302:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5302:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5275:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5275:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5284:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5271:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:1"
																		},
																		"nativeSrc": "5271:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5296:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5267:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:1"
																},
																"nativeSrc": "5267:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5267:32:1"
															},
															"nativeSrc": "5264:119:1",
															"nodeType": "YulIf",
															"src": "5264:119:1"
														},
														{
															"nativeSrc": "5393:117:1",
															"nodeType": "YulBlock",
															"src": "5393:117:1",
															"statements": [
																{
																	"nativeSrc": "5408:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5408:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5422:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5422:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5412:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5412:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5437:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5437:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5472:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5472:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5483:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5483:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5468:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5468:3:1"
																				},
																				"nativeSrc": "5468:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5468:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5492:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5492:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5447:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5447:20:1"
																		},
																		"nativeSrc": "5447:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5447:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5437:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5437:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5188:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5224:9:1",
														"nodeType": "YulTypedName",
														"src": "5224:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5235:7:1",
														"nodeType": "YulTypedName",
														"src": "5235:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5247:6:1",
														"nodeType": "YulTypedName",
														"src": "5247:6:1",
														"type": ""
													}
												],
												"src": "5188:329:1"
											},
											{
												"body": {
													"nativeSrc": "5606:391:1",
													"nodeType": "YulBlock",
													"src": "5606:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5652:83:1",
																"nodeType": "YulBlock",
																"src": "5652:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5654:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5654:77:1"
																			},
																			"nativeSrc": "5654:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5654:79:1"
																		},
																		"nativeSrc": "5654:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5654:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5627:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5627:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5636:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5636:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5623:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:1"
																		},
																		"nativeSrc": "5623:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5623:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5648:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5648:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5619:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5619:3:1"
																},
																"nativeSrc": "5619:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5619:32:1"
															},
															"nativeSrc": "5616:119:1",
															"nodeType": "YulIf",
															"src": "5616:119:1"
														},
														{
															"nativeSrc": "5745:117:1",
															"nodeType": "YulBlock",
															"src": "5745:117:1",
															"statements": [
																{
																	"nativeSrc": "5760:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5760:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5774:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5774:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5764:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5764:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5789:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5789:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5824:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5824:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5835:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5835:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5820:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5820:3:1"
																				},
																				"nativeSrc": "5820:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5820:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5844:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5844:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5799:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5799:20:1"
																		},
																		"nativeSrc": "5799:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5799:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5789:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5789:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5872:118:1",
															"nodeType": "YulBlock",
															"src": "5872:118:1",
															"statements": [
																{
																	"nativeSrc": "5887:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5887:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5901:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5901:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5891:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5891:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5917:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5917:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5952:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5952:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5963:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5963:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5948:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5948:3:1"
																				},
																				"nativeSrc": "5948:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5948:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5972:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5972:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5927:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5927:20:1"
																		},
																		"nativeSrc": "5927:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5927:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5917:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5917:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5523:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5568:9:1",
														"nodeType": "YulTypedName",
														"src": "5568:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5579:7:1",
														"nodeType": "YulTypedName",
														"src": "5579:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5591:6:1",
														"nodeType": "YulTypedName",
														"src": "5591:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5599:6:1",
														"nodeType": "YulTypedName",
														"src": "5599:6:1",
														"type": ""
													}
												],
												"src": "5523:474:1"
											},
											{
												"body": {
													"nativeSrc": "6068:53:1",
													"nodeType": "YulBlock",
													"src": "6068:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6085:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6085:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6108:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6108:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6090:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6090:17:1"
																		},
																		"nativeSrc": "6090:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6090:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6078:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6078:6:1"
																},
																"nativeSrc": "6078:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6078:37:1"
															},
															"nativeSrc": "6078:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6078:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6003:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6056:5:1",
														"nodeType": "YulTypedName",
														"src": "6056:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6063:3:1",
														"nodeType": "YulTypedName",
														"src": "6063:3:1",
														"type": ""
													}
												],
												"src": "6003:118:1"
											},
											{
												"body": {
													"nativeSrc": "6225:124:1",
													"nodeType": "YulBlock",
													"src": "6225:124:1",
													"statements": [
														{
															"nativeSrc": "6235:26:1",
															"nodeType": "YulAssignment",
															"src": "6235:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6247:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6247:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6258:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6258:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6243:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6243:3:1"
																},
																"nativeSrc": "6243:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6243:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6235:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6235:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6315:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6315:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6328:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6328:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6339:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6339:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6324:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6324:3:1"
																		},
																		"nativeSrc": "6324:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6324:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6271:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6271:43:1"
																},
																"nativeSrc": "6271:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6271:71:1"
															},
															"nativeSrc": "6271:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6271:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6127:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6197:9:1",
														"nodeType": "YulTypedName",
														"src": "6197:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6209:6:1",
														"nodeType": "YulTypedName",
														"src": "6209:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6220:4:1",
														"nodeType": "YulTypedName",
														"src": "6220:4:1",
														"type": ""
													}
												],
												"src": "6127:222:1"
											},
											{
												"body": {
													"nativeSrc": "6383:152:1",
													"nodeType": "YulBlock",
													"src": "6383:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6400:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6400:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6403:77:1",
																		"nodeType": "YulLiteral",
																		"src": "6403:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6393:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6393:6:1"
																},
																"nativeSrc": "6393:88:1",
																"nodeType": "YulFunctionCall",
																"src": "6393:88:1"
															},
															"nativeSrc": "6393:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "6393:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6497:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6497:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6500:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6500:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6490:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6490:6:1"
																},
																"nativeSrc": "6490:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6490:15:1"
															},
															"nativeSrc": "6490:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6490:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6521:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6521:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6524:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6524:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6514:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6514:6:1"
																},
																"nativeSrc": "6514:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6514:15:1"
															},
															"nativeSrc": "6514:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6514:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6355:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6355:180:1"
											},
											{
												"body": {
													"nativeSrc": "6592:269:1",
													"nodeType": "YulBlock",
													"src": "6592:269:1",
													"statements": [
														{
															"nativeSrc": "6602:22:1",
															"nodeType": "YulAssignment",
															"src": "6602:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6616:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6616:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6622:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6622:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6612:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6612:3:1"
																},
																"nativeSrc": "6612:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6612:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6602:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6602:6:1"
																}
															]
														},
														{
															"nativeSrc": "6633:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6633:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6663:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6663:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6669:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6669:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6659:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6659:3:1"
																},
																"nativeSrc": "6659:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6659:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6637:18:1",
																	"nodeType": "YulTypedName",
																	"src": "6637:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6710:51:1",
																"nodeType": "YulBlock",
																"src": "6710:51:1",
																"statements": [
																	{
																		"nativeSrc": "6724:27:1",
																		"nodeType": "YulAssignment",
																		"src": "6724:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6738:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "6738:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6746:4:1",
																					"nodeType": "YulLiteral",
																					"src": "6746:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6734:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6734:3:1"
																			},
																			"nativeSrc": "6734:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6734:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6724:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6724:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6690:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "6690:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6683:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6683:6:1"
																},
																"nativeSrc": "6683:26:1",
																"nodeType": "YulFunctionCall",
																"src": "6683:26:1"
															},
															"nativeSrc": "6680:81:1",
															"nodeType": "YulIf",
															"src": "6680:81:1"
														},
														{
															"body": {
																"nativeSrc": "6813:42:1",
																"nodeType": "YulBlock",
																"src": "6813:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6827:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "6827:16:1"
																			},
																			"nativeSrc": "6827:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6827:18:1"
																		},
																		"nativeSrc": "6827:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6827:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6777:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "6777:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6800:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6800:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6808:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6808:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6797:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "6797:2:1"
																		},
																		"nativeSrc": "6797:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6797:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6774:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6774:2:1"
																},
																"nativeSrc": "6774:38:1",
																"nodeType": "YulFunctionCall",
																"src": "6774:38:1"
															},
															"nativeSrc": "6771:84:1",
															"nodeType": "YulIf",
															"src": "6771:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6541:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6576:4:1",
														"nodeType": "YulTypedName",
														"src": "6576:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6585:6:1",
														"nodeType": "YulTypedName",
														"src": "6585:6:1",
														"type": ""
													}
												],
												"src": "6541:320:1"
											},
											{
												"body": {
													"nativeSrc": "6973:67:1",
													"nodeType": "YulBlock",
													"src": "6973:67:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6995:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6995:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7003:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7003:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6991:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6991:3:1"
																		},
																		"nativeSrc": "6991:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6991:14:1"
																	},
																	{
																		"hexValue": "4f6e6c792061646d696e2063616e207769746864726177",
																		"kind": "string",
																		"nativeSrc": "7007:25:1",
																		"nodeType": "YulLiteral",
																		"src": "7007:25:1",
																		"type": "",
																		"value": "Only admin can withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6984:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6984:6:1"
																},
																"nativeSrc": "6984:49:1",
																"nodeType": "YulFunctionCall",
																"src": "6984:49:1"
															},
															"nativeSrc": "6984:49:1",
															"nodeType": "YulExpressionStatement",
															"src": "6984:49:1"
														}
													]
												},
												"name": "store_literal_in_memory_0f10257f08d816bc8f48d4eaea80001c132074cc09321d652527afabb4d0b030",
												"nativeSrc": "6867:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6965:6:1",
														"nodeType": "YulTypedName",
														"src": "6965:6:1",
														"type": ""
													}
												],
												"src": "6867:173:1"
											},
											{
												"body": {
													"nativeSrc": "7192:220:1",
													"nodeType": "YulBlock",
													"src": "7192:220:1",
													"statements": [
														{
															"nativeSrc": "7202:74:1",
															"nodeType": "YulAssignment",
															"src": "7202:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7268:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7268:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7273:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7273:2:1",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7209:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "7209:58:1"
																},
																"nativeSrc": "7209:67:1",
																"nodeType": "YulFunctionCall",
																"src": "7209:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7202:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7202:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7374:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7374:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0f10257f08d816bc8f48d4eaea80001c132074cc09321d652527afabb4d0b030",
																	"nativeSrc": "7285:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "7285:88:1"
																},
																"nativeSrc": "7285:93:1",
																"nodeType": "YulFunctionCall",
																"src": "7285:93:1"
															},
															"nativeSrc": "7285:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "7285:93:1"
														},
														{
															"nativeSrc": "7387:19:1",
															"nodeType": "YulAssignment",
															"src": "7387:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7398:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7398:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7403:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7403:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7394:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7394:3:1"
																},
																"nativeSrc": "7394:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7394:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7387:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7387:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0f10257f08d816bc8f48d4eaea80001c132074cc09321d652527afabb4d0b030_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7046:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7180:3:1",
														"nodeType": "YulTypedName",
														"src": "7180:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7188:3:1",
														"nodeType": "YulTypedName",
														"src": "7188:3:1",
														"type": ""
													}
												],
												"src": "7046:366:1"
											},
											{
												"body": {
													"nativeSrc": "7589:248:1",
													"nodeType": "YulBlock",
													"src": "7589:248:1",
													"statements": [
														{
															"nativeSrc": "7599:26:1",
															"nodeType": "YulAssignment",
															"src": "7599:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7611:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7611:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7622:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7622:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7607:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7607:3:1"
																},
																"nativeSrc": "7607:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7607:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7599:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7599:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7646:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7646:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7657:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7657:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7642:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7642:3:1"
																		},
																		"nativeSrc": "7642:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7642:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7665:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7665:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7671:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7671:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7661:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7661:3:1"
																		},
																		"nativeSrc": "7661:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7661:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7635:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7635:6:1"
																},
																"nativeSrc": "7635:47:1",
																"nodeType": "YulFunctionCall",
																"src": "7635:47:1"
															},
															"nativeSrc": "7635:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "7635:47:1"
														},
														{
															"nativeSrc": "7691:139:1",
															"nodeType": "YulAssignment",
															"src": "7691:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7825:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7825:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0f10257f08d816bc8f48d4eaea80001c132074cc09321d652527afabb4d0b030_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7699:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "7699:124:1"
																},
																"nativeSrc": "7699:131:1",
																"nodeType": "YulFunctionCall",
																"src": "7699:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7691:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7691:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0f10257f08d816bc8f48d4eaea80001c132074cc09321d652527afabb4d0b030__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7418:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7569:9:1",
														"nodeType": "YulTypedName",
														"src": "7569:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7584:4:1",
														"nodeType": "YulTypedName",
														"src": "7584:4:1",
														"type": ""
													}
												],
												"src": "7418:419:1"
											},
											{
												"body": {
													"nativeSrc": "7871:152:1",
													"nodeType": "YulBlock",
													"src": "7871:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7888:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7888:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7891:77:1",
																		"nodeType": "YulLiteral",
																		"src": "7891:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7881:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7881:6:1"
																},
																"nativeSrc": "7881:88:1",
																"nodeType": "YulFunctionCall",
																"src": "7881:88:1"
															},
															"nativeSrc": "7881:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "7881:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7985:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7985:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7988:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7988:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7978:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7978:6:1"
																},
																"nativeSrc": "7978:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7978:15:1"
															},
															"nativeSrc": "7978:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7978:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8009:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8009:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8012:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8012:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8002:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8002:6:1"
																},
																"nativeSrc": "8002:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8002:15:1"
															},
															"nativeSrc": "8002:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "8002:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7843:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7843:180:1"
											},
											{
												"body": {
													"nativeSrc": "8077:362:1",
													"nodeType": "YulBlock",
													"src": "8077:362:1",
													"statements": [
														{
															"nativeSrc": "8087:25:1",
															"nodeType": "YulAssignment",
															"src": "8087:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8110:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8110:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8092:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8092:17:1"
																},
																"nativeSrc": "8092:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8092:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8087:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8087:1:1"
																}
															]
														},
														{
															"nativeSrc": "8121:25:1",
															"nodeType": "YulAssignment",
															"src": "8121:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8144:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8144:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8126:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8126:17:1"
																},
																"nativeSrc": "8126:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8126:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8121:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8121:1:1"
																}
															]
														},
														{
															"nativeSrc": "8155:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8155:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8178:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8178:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8181:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8181:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8174:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8174:3:1"
																},
																"nativeSrc": "8174:9:1",
																"nodeType": "YulFunctionCall",
																"src": "8174:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8159:11:1",
																	"nodeType": "YulTypedName",
																	"src": "8159:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8192:41:1",
															"nodeType": "YulAssignment",
															"src": "8192:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8221:11:1",
																		"nodeType": "YulIdentifier",
																		"src": "8221:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8203:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8203:17:1"
																},
																"nativeSrc": "8203:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8203:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8192:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "8192:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8410:22:1",
																"nodeType": "YulBlock",
																"src": "8410:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8412:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8412:16:1"
																			},
																			"nativeSrc": "8412:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8412:18:1"
																		},
																		"nativeSrc": "8412:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8412:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8343:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "8343:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8336:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "8336:6:1"
																				},
																				"nativeSrc": "8336:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8336:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8366:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "8366:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8373:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "8373:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8382:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "8382:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8369:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "8369:3:1"
																						},
																						"nativeSrc": "8369:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "8369:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8363:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8363:2:1"
																				},
																				"nativeSrc": "8363:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8363:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8316:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "8316:2:1"
																		},
																		"nativeSrc": "8316:83:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8316:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8296:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8296:6:1"
																},
																"nativeSrc": "8296:113:1",
																"nodeType": "YulFunctionCall",
																"src": "8296:113:1"
															},
															"nativeSrc": "8293:139:1",
															"nodeType": "YulIf",
															"src": "8293:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8029:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8060:1:1",
														"nodeType": "YulTypedName",
														"src": "8060:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8063:1:1",
														"nodeType": "YulTypedName",
														"src": "8063:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8069:7:1",
														"nodeType": "YulTypedName",
														"src": "8069:7:1",
														"type": ""
													}
												],
												"src": "8029:410:1"
											},
											{
												"body": {
													"nativeSrc": "8551:61:1",
													"nodeType": "YulBlock",
													"src": "8551:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8573:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8573:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8581:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8581:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8569:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8569:3:1"
																		},
																		"nativeSrc": "8569:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8569:14:1"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "8585:19:1",
																		"nodeType": "YulLiteral",
																		"src": "8585:19:1",
																		"type": "",
																		"value": "Not enough tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8562:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8562:6:1"
																},
																"nativeSrc": "8562:43:1",
																"nodeType": "YulFunctionCall",
																"src": "8562:43:1"
															},
															"nativeSrc": "8562:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "8562:43:1"
														}
													]
												},
												"name": "store_literal_in_memory_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
												"nativeSrc": "8445:167:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8543:6:1",
														"nodeType": "YulTypedName",
														"src": "8543:6:1",
														"type": ""
													}
												],
												"src": "8445:167:1"
											},
											{
												"body": {
													"nativeSrc": "8764:220:1",
													"nodeType": "YulBlock",
													"src": "8764:220:1",
													"statements": [
														{
															"nativeSrc": "8774:74:1",
															"nodeType": "YulAssignment",
															"src": "8774:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8840:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8840:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8845:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8845:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8781:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "8781:58:1"
																},
																"nativeSrc": "8781:67:1",
																"nodeType": "YulFunctionCall",
																"src": "8781:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8774:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8774:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8946:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8946:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
																	"nativeSrc": "8857:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "8857:88:1"
																},
																"nativeSrc": "8857:93:1",
																"nodeType": "YulFunctionCall",
																"src": "8857:93:1"
															},
															"nativeSrc": "8857:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "8857:93:1"
														},
														{
															"nativeSrc": "8959:19:1",
															"nodeType": "YulAssignment",
															"src": "8959:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8970:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8970:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8975:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8975:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8966:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8966:3:1"
																},
																"nativeSrc": "8966:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8966:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8959:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8959:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8618:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8752:3:1",
														"nodeType": "YulTypedName",
														"src": "8752:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8760:3:1",
														"nodeType": "YulTypedName",
														"src": "8760:3:1",
														"type": ""
													}
												],
												"src": "8618:366:1"
											},
											{
												"body": {
													"nativeSrc": "9161:248:1",
													"nodeType": "YulBlock",
													"src": "9161:248:1",
													"statements": [
														{
															"nativeSrc": "9171:26:1",
															"nodeType": "YulAssignment",
															"src": "9171:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9183:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9183:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9194:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9194:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9179:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9179:3:1"
																},
																"nativeSrc": "9179:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9179:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9171:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9171:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9218:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9218:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9229:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9229:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9214:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9214:3:1"
																		},
																		"nativeSrc": "9214:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9214:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9237:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "9237:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9243:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9243:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9233:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9233:3:1"
																		},
																		"nativeSrc": "9233:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9233:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9207:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9207:6:1"
																},
																"nativeSrc": "9207:47:1",
																"nodeType": "YulFunctionCall",
																"src": "9207:47:1"
															},
															"nativeSrc": "9207:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "9207:47:1"
														},
														{
															"nativeSrc": "9263:139:1",
															"nodeType": "YulAssignment",
															"src": "9263:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9397:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9397:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9271:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "9271:124:1"
																},
																"nativeSrc": "9271:131:1",
																"nodeType": "YulFunctionCall",
																"src": "9271:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9263:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9263:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8990:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9141:9:1",
														"nodeType": "YulTypedName",
														"src": "9141:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9156:4:1",
														"nodeType": "YulTypedName",
														"src": "9156:4:1",
														"type": ""
													}
												],
												"src": "8990:419:1"
											},
											{
												"body": {
													"nativeSrc": "9521:74:1",
													"nodeType": "YulBlock",
													"src": "9521:74:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9543:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9543:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9551:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9551:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9539:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9539:3:1"
																		},
																		"nativeSrc": "9539:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9539:14:1"
																	},
																	{
																		"hexValue": "4f6e6c792061646d696e2063616e206368616e6765207468652072617465",
																		"kind": "string",
																		"nativeSrc": "9555:32:1",
																		"nodeType": "YulLiteral",
																		"src": "9555:32:1",
																		"type": "",
																		"value": "Only admin can change the rate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9532:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9532:6:1"
																},
																"nativeSrc": "9532:56:1",
																"nodeType": "YulFunctionCall",
																"src": "9532:56:1"
															},
															"nativeSrc": "9532:56:1",
															"nodeType": "YulExpressionStatement",
															"src": "9532:56:1"
														}
													]
												},
												"name": "store_literal_in_memory_972fbfa1ab705252aafd96b27fcf7b5a6c24910c764d6d12e44b19430bc96b03",
												"nativeSrc": "9415:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9513:6:1",
														"nodeType": "YulTypedName",
														"src": "9513:6:1",
														"type": ""
													}
												],
												"src": "9415:180:1"
											},
											{
												"body": {
													"nativeSrc": "9747:220:1",
													"nodeType": "YulBlock",
													"src": "9747:220:1",
													"statements": [
														{
															"nativeSrc": "9757:74:1",
															"nodeType": "YulAssignment",
															"src": "9757:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9823:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9823:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9828:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9828:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9764:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "9764:58:1"
																},
																"nativeSrc": "9764:67:1",
																"nodeType": "YulFunctionCall",
																"src": "9764:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9757:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9757:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9929:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9929:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_972fbfa1ab705252aafd96b27fcf7b5a6c24910c764d6d12e44b19430bc96b03",
																	"nativeSrc": "9840:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "9840:88:1"
																},
																"nativeSrc": "9840:93:1",
																"nodeType": "YulFunctionCall",
																"src": "9840:93:1"
															},
															"nativeSrc": "9840:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "9840:93:1"
														},
														{
															"nativeSrc": "9942:19:1",
															"nodeType": "YulAssignment",
															"src": "9942:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9953:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9953:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9958:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9958:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9949:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9949:3:1"
																},
																"nativeSrc": "9949:12:1",
																"nodeType": "YulFunctionCall",
																"src": "9949:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9942:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9942:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_972fbfa1ab705252aafd96b27fcf7b5a6c24910c764d6d12e44b19430bc96b03_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9601:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9735:3:1",
														"nodeType": "YulTypedName",
														"src": "9735:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9743:3:1",
														"nodeType": "YulTypedName",
														"src": "9743:3:1",
														"type": ""
													}
												],
												"src": "9601:366:1"
											},
											{
												"body": {
													"nativeSrc": "10144:248:1",
													"nodeType": "YulBlock",
													"src": "10144:248:1",
													"statements": [
														{
															"nativeSrc": "10154:26:1",
															"nodeType": "YulAssignment",
															"src": "10154:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10166:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10166:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10177:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10177:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10162:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10162:3:1"
																},
																"nativeSrc": "10162:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10162:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10154:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10154:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10201:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10201:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10212:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10212:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10197:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10197:3:1"
																		},
																		"nativeSrc": "10197:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10197:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10220:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "10220:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10226:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10226:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10216:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10216:3:1"
																		},
																		"nativeSrc": "10216:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10216:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10190:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10190:6:1"
																},
																"nativeSrc": "10190:47:1",
																"nodeType": "YulFunctionCall",
																"src": "10190:47:1"
															},
															"nativeSrc": "10190:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "10190:47:1"
														},
														{
															"nativeSrc": "10246:139:1",
															"nodeType": "YulAssignment",
															"src": "10246:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10380:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10380:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_972fbfa1ab705252aafd96b27fcf7b5a6c24910c764d6d12e44b19430bc96b03_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10254:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "10254:124:1"
																},
																"nativeSrc": "10254:131:1",
																"nodeType": "YulFunctionCall",
																"src": "10254:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10246:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10246:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_972fbfa1ab705252aafd96b27fcf7b5a6c24910c764d6d12e44b19430bc96b03__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9973:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10124:9:1",
														"nodeType": "YulTypedName",
														"src": "10124:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10139:4:1",
														"nodeType": "YulTypedName",
														"src": "10139:4:1",
														"type": ""
													}
												],
												"src": "9973:419:1"
											},
											{
												"body": {
													"nativeSrc": "10552:288:1",
													"nodeType": "YulBlock",
													"src": "10552:288:1",
													"statements": [
														{
															"nativeSrc": "10562:26:1",
															"nodeType": "YulAssignment",
															"src": "10562:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10574:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10574:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10585:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10585:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10570:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10570:3:1"
																},
																"nativeSrc": "10570:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10570:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10562:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10562:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10642:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10642:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10655:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10655:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10666:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10666:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10651:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10651:3:1"
																		},
																		"nativeSrc": "10651:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10651:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10598:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10598:43:1"
																},
																"nativeSrc": "10598:71:1",
																"nodeType": "YulFunctionCall",
																"src": "10598:71:1"
															},
															"nativeSrc": "10598:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "10598:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10723:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10723:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10736:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10736:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10747:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10747:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10732:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10732:3:1"
																		},
																		"nativeSrc": "10732:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10732:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10679:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10679:43:1"
																},
																"nativeSrc": "10679:72:1",
																"nodeType": "YulFunctionCall",
																"src": "10679:72:1"
															},
															"nativeSrc": "10679:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "10679:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10805:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10805:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10818:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10818:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10829:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10829:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10814:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10814:3:1"
																		},
																		"nativeSrc": "10814:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10814:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10761:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10761:43:1"
																},
																"nativeSrc": "10761:72:1",
																"nodeType": "YulFunctionCall",
																"src": "10761:72:1"
															},
															"nativeSrc": "10761:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "10761:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10398:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10508:9:1",
														"nodeType": "YulTypedName",
														"src": "10508:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10520:6:1",
														"nodeType": "YulTypedName",
														"src": "10520:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10528:6:1",
														"nodeType": "YulTypedName",
														"src": "10528:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10536:6:1",
														"nodeType": "YulTypedName",
														"src": "10536:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10547:4:1",
														"nodeType": "YulTypedName",
														"src": "10547:4:1",
														"type": ""
													}
												],
												"src": "10398:442:1"
											},
											{
												"body": {
													"nativeSrc": "10890:147:1",
													"nodeType": "YulBlock",
													"src": "10890:147:1",
													"statements": [
														{
															"nativeSrc": "10900:25:1",
															"nodeType": "YulAssignment",
															"src": "10900:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10923:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10923:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10905:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "10905:17:1"
																},
																"nativeSrc": "10905:20:1",
																"nodeType": "YulFunctionCall",
																"src": "10905:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10900:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "10900:1:1"
																}
															]
														},
														{
															"nativeSrc": "10934:25:1",
															"nodeType": "YulAssignment",
															"src": "10934:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10957:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10957:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10939:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "10939:17:1"
																},
																"nativeSrc": "10939:20:1",
																"nodeType": "YulFunctionCall",
																"src": "10939:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10934:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "10934:1:1"
																}
															]
														},
														{
															"nativeSrc": "10968:16:1",
															"nodeType": "YulAssignment",
															"src": "10968:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10979:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10979:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10982:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10982:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10975:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10975:3:1"
																},
																"nativeSrc": "10975:9:1",
																"nodeType": "YulFunctionCall",
																"src": "10975:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10968:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10968:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11008:22:1",
																"nodeType": "YulBlock",
																"src": "11008:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11010:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "11010:16:1"
																			},
																			"nativeSrc": "11010:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11010:18:1"
																		},
																		"nativeSrc": "11010:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11010:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11000:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11000:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11003:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11003:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10997:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "10997:2:1"
																},
																"nativeSrc": "10997:10:1",
																"nodeType": "YulFunctionCall",
																"src": "10997:10:1"
															},
															"nativeSrc": "10994:36:1",
															"nodeType": "YulIf",
															"src": "10994:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10846:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10877:1:1",
														"nodeType": "YulTypedName",
														"src": "10877:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10880:1:1",
														"nodeType": "YulTypedName",
														"src": "10880:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10886:3:1",
														"nodeType": "YulTypedName",
														"src": "10886:3:1",
														"type": ""
													}
												],
												"src": "10846:191:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_0f10257f08d816bc8f48d4eaea80001c132074cc09321d652527afabb4d0b030(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admin can withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_0f10257f08d816bc8f48d4eaea80001c132074cc09321d652527afabb4d0b030_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_0f10257f08d816bc8f48d4eaea80001c132074cc09321d652527afabb4d0b030(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0f10257f08d816bc8f48d4eaea80001c132074cc09321d652527afabb4d0b030__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0f10257f08d816bc8f48d4eaea80001c132074cc09321d652527afabb4d0b030_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_972fbfa1ab705252aafd96b27fcf7b5a6c24910c764d6d12e44b19430bc96b03(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admin can change the rate\")\n\n    }\n\n    function abi_encode_t_stringliteral_972fbfa1ab705252aafd96b27fcf7b5a6c24910c764d6d12e44b19430bc96b03_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_972fbfa1ab705252aafd96b27fcf7b5a6c24910c764d6d12e44b19430bc96b03(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_972fbfa1ab705252aafd96b27fcf7b5a6c24910c764d6d12e44b19430bc96b03__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_972fbfa1ab705252aafd96b27fcf7b5a6c24910c764d6d12e44b19430bc96b03_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x7E JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xDB068E0E EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x326 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x27C JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xBA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x200 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x2B6C5AF EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x134 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x350 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x356 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xF49 JUMP JUMPDEST PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA PUSH2 0x43F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x1025 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x447 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x266 PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH2 0x612 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0xF49 JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH2 0x6EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1094 JUMP JUMPDEST PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33A PUSH2 0x83E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x365 SWAP1 PUSH2 0x1127 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x391 SWAP1 PUSH2 0x1127 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3DC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3F0 PUSH2 0x863 JUMP JUMPDEST SWAP1 POP PUSH2 0x3FD DUP2 DUP6 DUP6 PUSH2 0x86A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x41B PUSH2 0x863 JUMP JUMPDEST SWAP1 POP PUSH2 0x428 DUP6 DUP3 DUP6 PUSH2 0x87C JUMP JUMPDEST PUSH2 0x433 DUP6 DUP6 DUP6 PUSH2 0x90E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CD SWAP1 PUSH2 0x11A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x53A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x591 SWAP1 PUSH2 0x1127 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5BD SWAP1 PUSH2 0x1127 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x608 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5DF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x608 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD CALLVALUE PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x11EC JUMP JUMPDEST SWAP1 POP PUSH2 0x62C ADDRESS PUSH2 0x53D JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x66E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x665 SWAP1 PUSH2 0x1277 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x679 ADDRESS CALLER DUP4 PUSH2 0x90E JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE3D4187F6CA4248660CC0AC8B8056515BAC4A8132BE2ECA31D6D0CC170722A7E DUP3 PUSH1 0x40 MLOAD PUSH2 0x6BF SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6D4 PUSH2 0x863 JUMP JUMPDEST SWAP1 POP PUSH2 0x6E1 DUP2 DUP6 DUP6 PUSH2 0x90E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x77B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x772 SWAP1 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH32 0x8BC87B062B954ECCD7F9017A070917F40C9C40AF9FF4B41ED4F52A6A37199276 DUP2 PUSH1 0x40 MLOAD PUSH2 0x7B1 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x877 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x9FE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x887 DUP5 DUP5 PUSH2 0x7BC JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x908 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8F9 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x907 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x9FE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x97E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x975 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9EE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E5 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F9 DUP4 DUP4 DUP4 PUSH2 0xBCD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA65 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xADE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xBC7 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBBE SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC1D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC11 SWAP2 SWAP1 PUSH2 0x1332 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCEB JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCA6 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD32 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD7C JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDD9 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF8 DUP2 PUSH2 0xDE6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE11 PUSH0 DUP4 ADD DUP5 PUSH2 0xDEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE4E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE33 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE73 DUP3 PUSH2 0xE17 JUMP JUMPDEST PUSH2 0xE7D DUP2 DUP6 PUSH2 0xE21 JUMP JUMPDEST SWAP4 POP PUSH2 0xE8D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE31 JUMP JUMPDEST PUSH2 0xE96 DUP2 PUSH2 0xE59 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEB9 DUP2 DUP5 PUSH2 0xE69 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEEE DUP3 PUSH2 0xEC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEFE DUP2 PUSH2 0xEE4 JUMP JUMPDEST DUP2 EQ PUSH2 0xF08 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF19 DUP2 PUSH2 0xEF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF28 DUP2 PUSH2 0xDE6 JUMP JUMPDEST DUP2 EQ PUSH2 0xF32 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF43 DUP2 PUSH2 0xF1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF5F JUMPI PUSH2 0xF5E PUSH2 0xEC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF6C DUP6 DUP3 DUP7 ADD PUSH2 0xF0B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF7D DUP6 DUP3 DUP7 ADD PUSH2 0xF35 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9B DUP2 PUSH2 0xF87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFB4 PUSH0 DUP4 ADD DUP5 PUSH2 0xF92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFD1 JUMPI PUSH2 0xFD0 PUSH2 0xEC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFDE DUP7 DUP3 DUP8 ADD PUSH2 0xF0B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFEF DUP7 DUP3 DUP8 ADD PUSH2 0xF0B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1000 DUP7 DUP3 DUP8 ADD PUSH2 0xF35 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x101F DUP2 PUSH2 0x100A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1038 PUSH0 DUP4 ADD DUP5 PUSH2 0x1016 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1053 JUMPI PUSH2 0x1052 PUSH2 0xEC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1060 DUP5 DUP3 DUP6 ADD PUSH2 0xF0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x107E JUMPI PUSH2 0x107D PUSH2 0xEC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x108B DUP5 DUP3 DUP6 ADD PUSH2 0xF35 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10AA JUMPI PUSH2 0x10A9 PUSH2 0xEC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10B7 DUP6 DUP3 DUP7 ADD PUSH2 0xF0B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10C8 DUP6 DUP3 DUP7 ADD PUSH2 0xF0B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x10DB DUP2 PUSH2 0xEE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x10D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x113E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1151 JUMPI PUSH2 0x1150 PUSH2 0x10FA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E207769746864726177000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x118B PUSH1 0x17 DUP4 PUSH2 0xE21 JUMP JUMPDEST SWAP2 POP PUSH2 0x1196 DUP3 PUSH2 0x1157 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11B8 DUP2 PUSH2 0x117F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11F6 DUP3 PUSH2 0xDE6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1201 DUP4 PUSH2 0xDE6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x120F DUP2 PUSH2 0xDE6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1226 JUMPI PUSH2 0x1225 PUSH2 0x11BF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E73000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1261 PUSH1 0x11 DUP4 PUSH2 0xE21 JUMP JUMPDEST SWAP2 POP PUSH2 0x126C DUP3 PUSH2 0x122D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x128E DUP2 PUSH2 0x1255 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E206368616E67652074686520726174650000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12C9 PUSH1 0x1E DUP4 PUSH2 0xE21 JUMP JUMPDEST SWAP2 POP PUSH2 0x12D4 DUP3 PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12F6 DUP2 PUSH2 0x12BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1310 PUSH0 DUP4 ADD DUP7 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x131D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0x132A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDEF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x133C DUP3 PUSH2 0xDE6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1347 DUP4 PUSH2 0xDE6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x135F JUMPI PUSH2 0x135E PUSH2 0x11BF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0x4C 0xE2 0xCB SLT 0xCB 0xA8 0x2A GAS KECCAK256 PUSH8 0xECF03DFEC78440 PUSH29 0x886144EDC4803ED0C7FA14E664736F6C63430008150033000000000000 ",
							"sourceMap": "21970:1025:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22010:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12832:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15051:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13902:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15797:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13760:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22838:155;;;;;;;;;;;;;:::i;:::-;;14057:116;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13034:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22325:290;;;:::i;:::-;;14368:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22621:211;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14604:140;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22056:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22010:40;;;;:::o;12832:89::-;12877:13;12909:5;12902:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12832:89;:::o;15051:186::-;15124:4;15140:13;15156:12;:10;:12::i;:::-;15140:28;;15178:31;15187:5;15194:7;15203:5;15178:8;:31::i;:::-;15226:4;15219:11;;;15051:186;;;;:::o;13902:97::-;13954:7;13980:12;;13973:19;;13902:97;:::o;15797:244::-;15884:4;15900:15;15918:12;:10;:12::i;:::-;15900:30;;15940:37;15956:4;15962:7;15971:5;15940:15;:37::i;:::-;15987:26;15997:4;16003:2;16007:5;15987:9;:26::i;:::-;16030:4;16023:11;;;15797:244;;;;;:::o;13760:82::-;13809:5;13833:2;13826:9;;13760:82;:::o;22838:155::-;22897:5;;;;;;;;;;;22883:19;;:10;:19;;;22875:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;22948:5;;;;;;;;;;;22940:23;;:46;22964:21;22940:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22838:155::o;14057:116::-;14122:7;14148:9;:18;14158:7;14148:18;;;;;;;;;;;;;;;;14141:25;;14057:116;;;:::o;13034:93::-;13081:13;13113:7;13106:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13034:93;:::o;22325:290::-;22365:18;22398:23;;22386:9;:35;;;;:::i;:::-;22365:56;;22456:24;22474:4;22456:9;:24::i;:::-;22439:13;:41;;22431:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;22512:51;22530:4;22537:10;22549:13;22512:9;:51::i;:::-;22582:10;22578:30;;;22594:13;22578:30;;;;;;:::i;:::-;;;;;;;;22355:260;22325:290::o;14368:178::-;14437:4;14453:13;14469:12;:10;:12::i;:::-;14453:28;;14491:27;14501:5;14508:2;14512:5;14491:9;:27::i;:::-;14535:4;14528:11;;;14368:178;;;;:::o;22621:211::-;22699:5;;;;;;;;;;;22685:19;;:10;:19;;;22677:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;22775:7;22749:23;:33;;;;22797:28;22817:7;22797:28;;;;;;:::i;:::-;;;;;;;;22621:211;:::o;14604:140::-;14684:7;14710:11;:18;14722:5;14710:18;;;;;;;;;;;;;;;:27;14729:7;14710:27;;;;;;;;;;;;;;;;14703:34;;14604:140;;;;:::o;22056:20::-;;;;;;;;;;;;;:::o;7244:96::-;7297:7;7323:10;7316:17;;7244:96;:::o;19747:128::-;19831:37;19840:5;19847:7;19856:5;19863:4;19831:8;:37::i;:::-;19747:128;;;:::o;21421:477::-;21520:24;21547:25;21557:5;21564:7;21547:9;:25::i;:::-;21520:52;;21606:17;21586:16;:37;21582:310;;21662:5;21643:16;:24;21639:130;;;21721:7;21730:16;21748:5;21694:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;21639:130;21810:57;21819:5;21826:7;21854:5;21835:16;:24;21861:5;21810:8;:57::i;:::-;21582:310;21510:388;21421:477;;;:::o;16414:300::-;16513:1;16497:18;;:4;:18;;;16493:86;;16565:1;16538:30;;;;;;;;;;;:::i;:::-;;;;;;;;16493:86;16606:1;16592:16;;:2;:16;;;16588:86;;16660:1;16631:32;;;;;;;;;;;:::i;:::-;;;;;;;;16588:86;16683:24;16691:4;16697:2;16701:5;16683:7;:24::i;:::-;16414:300;;;:::o;20707:432::-;20836:1;20819:19;;:5;:19;;;20815:89;;20890:1;20861:32;;;;;;;;;;;:::i;:::-;;;;;;;;20815:89;20936:1;20917:21;;:7;:21;;;20913:90;;20989:1;20961:31;;;;;;;;;;;:::i;:::-;;;;;;;;20913:90;21042:5;21012:11;:18;21024:5;21012:18;;;;;;;;;;;;;;;:27;21031:7;21012:27;;;;;;;;;;;;;;;:35;;;;21061:9;21057:76;;;21107:7;21091:31;;21100:5;21091:31;;;21116:5;21091:31;;;;;;:::i;:::-;;;;;;;;21057:76;20707:432;;;;:::o;17029:1107::-;17134:1;17118:18;;:4;:18;;;17114:540;;17270:5;17254:12;;:21;;;;;;;:::i;:::-;;;;;;;;17114:540;;;17306:19;17328:9;:15;17338:4;17328:15;;;;;;;;;;;;;;;;17306:37;;17375:5;17361:11;:19;17357:115;;;17432:4;17438:11;17451:5;17407:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17357:115;17624:5;17610:11;:19;17592:9;:15;17602:4;17592:15;;;;;;;;;;;;;;;:37;;;;17292:362;17114:540;17682:1;17668:16;;:2;:16;;;17664:425;;17847:5;17831:12;;:21;;;;;;;;;;;17664:425;;;18059:5;18042:9;:13;18052:2;18042:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17664:425;18119:2;18104:25;;18113:4;18104:25;;;18123:5;18104:25;;;;;;:::i;:::-;;;;;;;;17029:1107;;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:246::-;803:1;813:113;827:6;824:1;821:13;813:113;;;912:1;907:3;903:11;897:18;893:1;888:3;884:11;877:39;849:2;846:1;842:10;837:15;;813:113;;;960:1;951:6;946:3;942:16;935:27;784:184;722:246;;;:::o;974:102::-;1015:6;1066:2;1062:7;1057:2;1050:5;1046:14;1042:28;1032:38;;974:102;;;:::o;1082:377::-;1170:3;1198:39;1231:5;1198:39;:::i;:::-;1253:71;1317:6;1312:3;1253:71;:::i;:::-;1246:78;;1333:65;1391:6;1386:3;1379:4;1372:5;1368:16;1333:65;:::i;:::-;1423:29;1445:6;1423:29;:::i;:::-;1418:3;1414:39;1407:46;;1174:285;1082:377;;;;:::o;1465:313::-;1578:4;1616:2;1605:9;1601:18;1593:26;;1665:9;1659:4;1655:20;1651:1;1640:9;1636:17;1629:47;1693:78;1766:4;1757:6;1693:78;:::i;:::-;1685:86;;1465:313;;;;:::o;1865:117::-;1974:1;1971;1964:12;2111:126;2148:7;2188:42;2181:5;2177:54;2166:65;;2111:126;;;:::o;2243:96::-;2280:7;2309:24;2327:5;2309:24;:::i;:::-;2298:35;;2243:96;;;:::o;2345:122::-;2418:24;2436:5;2418:24;:::i;:::-;2411:5;2408:35;2398:63;;2457:1;2454;2447:12;2398:63;2345:122;:::o;2473:139::-;2519:5;2557:6;2544:20;2535:29;;2573:33;2600:5;2573:33;:::i;:::-;2473:139;;;;:::o;2618:122::-;2691:24;2709:5;2691:24;:::i;:::-;2684:5;2681:35;2671:63;;2730:1;2727;2720:12;2671:63;2618:122;:::o;2746:139::-;2792:5;2830:6;2817:20;2808:29;;2846:33;2873:5;2846:33;:::i;:::-;2746:139;;;;:::o;2891:474::-;2959:6;2967;3016:2;3004:9;2995:7;2991:23;2987:32;2984:119;;;3022:79;;:::i;:::-;2984:119;3142:1;3167:53;3212:7;3203:6;3192:9;3188:22;3167:53;:::i;:::-;3157:63;;3113:117;3269:2;3295:53;3340:7;3331:6;3320:9;3316:22;3295:53;:::i;:::-;3285:63;;3240:118;2891:474;;;;;:::o;3371:90::-;3405:7;3448:5;3441:13;3434:21;3423:32;;3371:90;;;:::o;3467:109::-;3548:21;3563:5;3548:21;:::i;:::-;3543:3;3536:34;3467:109;;:::o;3582:210::-;3669:4;3707:2;3696:9;3692:18;3684:26;;3720:65;3782:1;3771:9;3767:17;3758:6;3720:65;:::i;:::-;3582:210;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:474::-;5591:6;5599;5648:2;5636:9;5627:7;5623:23;5619:32;5616:119;;;5654:79;;:::i;:::-;5616:119;5774:1;5799:53;5844:7;5835:6;5824:9;5820:22;5799:53;:::i;:::-;5789:63;;5745:117;5901:2;5927:53;5972:7;5963:6;5952:9;5948:22;5927:53;:::i;:::-;5917:63;;5872:118;5523:474;;;;;:::o;6003:118::-;6090:24;6108:5;6090:24;:::i;:::-;6085:3;6078:37;6003:118;;:::o;6127:222::-;6220:4;6258:2;6247:9;6243:18;6235:26;;6271:71;6339:1;6328:9;6324:17;6315:6;6271:71;:::i;:::-;6127:222;;;;:::o;6355:180::-;6403:77;6400:1;6393:88;6500:4;6497:1;6490:15;6524:4;6521:1;6514:15;6541:320;6585:6;6622:1;6616:4;6612:12;6602:22;;6669:1;6663:4;6659:12;6690:18;6680:81;;6746:4;6738:6;6734:17;6724:27;;6680:81;6808:2;6800:6;6797:14;6777:18;6774:38;6771:84;;6827:18;;:::i;:::-;6771:84;6592:269;6541:320;;;:::o;6867:173::-;7007:25;7003:1;6995:6;6991:14;6984:49;6867:173;:::o;7046:366::-;7188:3;7209:67;7273:2;7268:3;7209:67;:::i;:::-;7202:74;;7285:93;7374:3;7285:93;:::i;:::-;7403:2;7398:3;7394:12;7387:19;;7046:366;;;:::o;7418:419::-;7584:4;7622:2;7611:9;7607:18;7599:26;;7671:9;7665:4;7661:20;7657:1;7646:9;7642:17;7635:47;7699:131;7825:4;7699:131;:::i;:::-;7691:139;;7418:419;;;:::o;7843:180::-;7891:77;7888:1;7881:88;7988:4;7985:1;7978:15;8012:4;8009:1;8002:15;8029:410;8069:7;8092:20;8110:1;8092:20;:::i;:::-;8087:25;;8126:20;8144:1;8126:20;:::i;:::-;8121:25;;8181:1;8178;8174:9;8203:30;8221:11;8203:30;:::i;:::-;8192:41;;8382:1;8373:7;8369:15;8366:1;8363:22;8343:1;8336:9;8316:83;8293:139;;8412:18;;:::i;:::-;8293:139;8077:362;8029:410;;;;:::o;8445:167::-;8585:19;8581:1;8573:6;8569:14;8562:43;8445:167;:::o;8618:366::-;8760:3;8781:67;8845:2;8840:3;8781:67;:::i;:::-;8774:74;;8857:93;8946:3;8857:93;:::i;:::-;8975:2;8970:3;8966:12;8959:19;;8618:366;;;:::o;8990:419::-;9156:4;9194:2;9183:9;9179:18;9171:26;;9243:9;9237:4;9233:20;9229:1;9218:9;9214:17;9207:47;9271:131;9397:4;9271:131;:::i;:::-;9263:139;;8990:419;;;:::o;9415:180::-;9555:32;9551:1;9543:6;9539:14;9532:56;9415:180;:::o;9601:366::-;9743:3;9764:67;9828:2;9823:3;9764:67;:::i;:::-;9757:74;;9840:93;9929:3;9840:93;:::i;:::-;9958:2;9953:3;9949:12;9942:19;;9601:366;;;:::o;9973:419::-;10139:4;10177:2;10166:9;10162:18;10154:26;;10226:9;10220:4;10216:20;10212:1;10201:9;10197:17;10190:47;10254:131;10380:4;10254:131;:::i;:::-;10246:139;;9973:419;;;:::o;10398:442::-;10547:4;10585:2;10574:9;10570:18;10562:26;;10598:71;10666:1;10655:9;10651:17;10642:6;10598:71;:::i;:::-;10679:72;10747:2;10736:9;10732:18;10723:6;10679:72;:::i;:::-;10761;10829:2;10818:9;10814:18;10805:6;10761:72;:::i;:::-;10398:442;;;;;;:::o;10846:191::-;10886:3;10905:20;10923:1;10905:20;:::i;:::-;10900:25;;10939:20;10957:1;10939:20;:::i;:::-;10934:25;;10982:1;10979;10975:9;10968:16;;11003:3;11000:1;10997:10;10994:36;;;11010:18;;:::i;:::-;10994:36;10846:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1003800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"admin()": "2596",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2852",
								"buy()": "infinite",
								"decimals()": "405",
								"exchangeRateForOneEther()": "2449",
								"name()": "infinite",
								"setExchangeRate(uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2455",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 21970,
									"end": 22995,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 21970,
									"end": 22995,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21970,
									"end": 22995,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22048,
									"end": 22050,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 22010,
									"end": 22050,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 22010,
									"end": 22050,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 22179,
									"end": 22319,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 22179,
									"end": 22319,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22179,
									"end": 22319,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22179,
									"end": 22319,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22179,
									"end": 22319,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22179,
									"end": 22319,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22179,
									"end": 22319,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22179,
									"end": 22319,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 22179,
									"end": 22319,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22179,
									"end": 22319,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22179,
									"end": 22319,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "PUSH",
									"source": 0,
									"value": "F"
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "PUSH",
									"source": 0,
									"value": "576F726170616B6F726E546F6B656E0000000000000000000000000000000000"
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "PUSH",
									"source": 0,
									"value": "574B540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12728,
									"end": 12733,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12720,
									"end": 12725,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12720,
									"end": 12733,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12720,
									"end": 12733,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12720,
									"end": 12733,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12720,
									"end": 12733,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12720,
									"end": 12733,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12720,
									"end": 12733,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12720,
									"end": 12733,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12720,
									"end": 12733,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12720,
									"end": 12733,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12720,
									"end": 12733,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12753,
									"end": 12760,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12743,
									"end": 12750,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12743,
									"end": 12760,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12743,
									"end": 12760,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12743,
									"end": 12760,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12743,
									"end": 12760,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12743,
									"end": 12760,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12743,
									"end": 12760,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12743,
									"end": 12760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12743,
									"end": 12760,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12743,
									"end": 12760,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12743,
									"end": 12760,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12654,
									"end": 12767,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22235,
									"end": 22284,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 22249,
									"end": 22253,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 22273,
									"end": 22283,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 22273,
									"end": 22281,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 22273,
									"end": 22281,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22273,
									"end": 22281,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 22273,
									"end": 22283,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22273,
									"end": 22283,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 22273,
									"end": 22283,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22273,
									"end": 22283,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 22273,
									"end": 22283,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22267,
									"end": 22269,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 22267,
									"end": 22283,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 22267,
									"end": 22283,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 22267,
									"end": 22283,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22267,
									"end": 22283,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 22267,
									"end": 22283,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22267,
									"end": 22283,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 22267,
									"end": 22283,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22256,
									"end": 22264,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "55D4A80"
								},
								{
									"begin": 22256,
									"end": 22283,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 22256,
									"end": 22283,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 22256,
									"end": 22283,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22256,
									"end": 22283,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 22256,
									"end": 22283,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22256,
									"end": 22283,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 22256,
									"end": 22283,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22235,
									"end": 22240,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 22235,
									"end": 22240,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22235,
									"end": 22240,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 22235,
									"end": 22284,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22235,
									"end": 22284,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 22235,
									"end": 22284,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22235,
									"end": 22284,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 22235,
									"end": 22284,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22302,
									"end": 22312,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 22294,
									"end": 22299,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 22294,
									"end": 22299,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22294,
									"end": 22312,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 22294,
									"end": 22312,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 22294,
									"end": 22312,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22294,
									"end": 22312,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 22294,
									"end": 22312,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22294,
									"end": 22312,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22294,
									"end": 22312,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 22294,
									"end": 22312,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 22294,
									"end": 22312,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22294,
									"end": 22312,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22294,
									"end": 22312,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 22294,
									"end": 22312,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22294,
									"end": 22312,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22294,
									"end": 22312,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 22294,
									"end": 22312,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 22294,
									"end": 22312,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22294,
									"end": 22312,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 22294,
									"end": 22312,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21970,
									"end": 22995,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 21970,
									"end": 22995,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13760,
									"end": 13842,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 13760,
									"end": 13842,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13809,
									"end": 13814,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13833,
									"end": 13835,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 13826,
									"end": 13835,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13826,
									"end": 13835,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13760,
									"end": 13842,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13760,
									"end": 13842,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18479,
									"end": 18687,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 18479,
									"end": 18687,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18568,
									"end": 18569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18549,
									"end": 18570,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18549,
									"end": 18570,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18549,
									"end": 18556,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18549,
									"end": 18570,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18549,
									"end": 18570,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18549,
									"end": 18570,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18545,
									"end": 18636,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18545,
									"end": 18636,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18622,
									"end": 18623,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18593,
									"end": 18625,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18593,
									"end": 18625,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18593,
									"end": 18625,
									"name": "PUSH",
									"source": 0,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18593,
									"end": 18625,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18593,
									"end": 18625,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18593,
									"end": 18625,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18593,
									"end": 18625,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18593,
									"end": 18625,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 18593,
									"end": 18625,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18593,
									"end": 18625,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18593,
									"end": 18625,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 18593,
									"end": 18625,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18593,
									"end": 18625,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 18593,
									"end": 18625,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18593,
									"end": 18625,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18593,
									"end": 18625,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18593,
									"end": 18625,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18593,
									"end": 18625,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18593,
									"end": 18625,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18593,
									"end": 18625,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18593,
									"end": 18625,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18545,
									"end": 18636,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18545,
									"end": 18636,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18645,
									"end": 18680,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 18661,
									"end": 18662,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18665,
									"end": 18672,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18674,
									"end": 18679,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18645,
									"end": 18652,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 18645,
									"end": 18652,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18645,
									"end": 18652,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 18645,
									"end": 18680,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18645,
									"end": 18680,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 18645,
									"end": 18680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18645,
									"end": 18680,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 18645,
									"end": 18680,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18479,
									"end": 18687,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18479,
									"end": 18687,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18479,
									"end": 18687,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17029,
									"end": 18136,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 17029,
									"end": 18136,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17134,
									"end": 17135,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17118,
									"end": 17136,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17118,
									"end": 17136,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17118,
									"end": 17122,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17118,
									"end": 17136,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17118,
									"end": 17136,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17118,
									"end": 17136,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17114,
									"end": 17654,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 17114,
									"end": 17654,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17270,
									"end": 17275,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17254,
									"end": 17266,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17254,
									"end": 17266,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17254,
									"end": 17275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17254,
									"end": 17275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17254,
									"end": 17275,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17254,
									"end": 17275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 17254,
									"end": 17275,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17254,
									"end": 17275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17254,
									"end": 17275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 17254,
									"end": 17275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17254,
									"end": 17275,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 17254,
									"end": 17275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17254,
									"end": 17275,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17254,
									"end": 17275,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17254,
									"end": 17275,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17254,
									"end": 17275,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17254,
									"end": 17275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17254,
									"end": 17275,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17254,
									"end": 17275,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17114,
									"end": 17654,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 17114,
									"end": 17654,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17114,
									"end": 17654,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 17114,
									"end": 17654,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17306,
									"end": 17325,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17328,
									"end": 17337,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17328,
									"end": 17343,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17338,
									"end": 17342,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 17328,
									"end": 17343,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17328,
									"end": 17343,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17328,
									"end": 17343,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17328,
									"end": 17343,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17328,
									"end": 17343,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17328,
									"end": 17343,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17328,
									"end": 17343,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17328,
									"end": 17343,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17328,
									"end": 17343,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17328,
									"end": 17343,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17328,
									"end": 17343,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17328,
									"end": 17343,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17328,
									"end": 17343,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17328,
									"end": 17343,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17328,
									"end": 17343,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17328,
									"end": 17343,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17306,
									"end": 17343,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17306,
									"end": 17343,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17375,
									"end": 17380,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17361,
									"end": 17372,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17361,
									"end": 17380,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17472,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17472,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 17357,
									"end": 17472,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17432,
									"end": 17436,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17438,
									"end": 17449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17451,
									"end": 17456,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17407,
									"end": 17457,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17407,
									"end": 17457,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17407,
									"end": 17457,
									"name": "PUSH",
									"source": 0,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17407,
									"end": 17457,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17407,
									"end": 17457,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17407,
									"end": 17457,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17407,
									"end": 17457,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17407,
									"end": 17457,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 17407,
									"end": 17457,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 17407,
									"end": 17457,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17407,
									"end": 17457,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17407,
									"end": 17457,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17407,
									"end": 17457,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 17407,
									"end": 17457,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17407,
									"end": 17457,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 17407,
									"end": 17457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17407,
									"end": 17457,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17407,
									"end": 17457,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17407,
									"end": 17457,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17407,
									"end": 17457,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17407,
									"end": 17457,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17407,
									"end": 17457,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17407,
									"end": 17457,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17472,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 17357,
									"end": 17472,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17624,
									"end": 17629,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17610,
									"end": 17621,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17610,
									"end": 17629,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17592,
									"end": 17601,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17592,
									"end": 17607,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17602,
									"end": 17606,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 17592,
									"end": 17607,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17592,
									"end": 17607,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17592,
									"end": 17607,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17592,
									"end": 17607,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17592,
									"end": 17607,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17592,
									"end": 17607,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17592,
									"end": 17607,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17592,
									"end": 17607,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17592,
									"end": 17607,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17592,
									"end": 17607,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17592,
									"end": 17607,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17592,
									"end": 17607,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17592,
									"end": 17607,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17592,
									"end": 17607,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17592,
									"end": 17607,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17592,
									"end": 17629,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17592,
									"end": 17629,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17592,
									"end": 17629,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17592,
									"end": 17629,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17292,
									"end": 17654,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17114,
									"end": 17654,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 17114,
									"end": 17654,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17682,
									"end": 17683,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17668,
									"end": 17684,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17668,
									"end": 17684,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17668,
									"end": 17670,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17668,
									"end": 17684,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17668,
									"end": 17684,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17668,
									"end": 17684,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17664,
									"end": 18089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 17664,
									"end": 18089,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17847,
									"end": 17852,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17831,
									"end": 17843,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17831,
									"end": 17843,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17831,
									"end": 17852,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17831,
									"end": 17852,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17831,
									"end": 17852,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17831,
									"end": 17852,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17831,
									"end": 17852,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17831,
									"end": 17852,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17831,
									"end": 17852,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17831,
									"end": 17852,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17831,
									"end": 17852,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17831,
									"end": 17852,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17831,
									"end": 17852,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17664,
									"end": 18089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 17664,
									"end": 18089,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17664,
									"end": 18089,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 17664,
									"end": 18089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18059,
									"end": 18064,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18042,
									"end": 18051,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18042,
									"end": 18055,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18052,
									"end": 18054,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 18042,
									"end": 18055,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18042,
									"end": 18055,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18042,
									"end": 18055,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18042,
									"end": 18055,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18042,
									"end": 18055,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18042,
									"end": 18055,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18042,
									"end": 18055,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18042,
									"end": 18055,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18042,
									"end": 18055,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18042,
									"end": 18055,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18042,
									"end": 18055,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18042,
									"end": 18055,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18042,
									"end": 18055,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18042,
									"end": 18055,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18042,
									"end": 18055,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 18042,
									"end": 18055,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18042,
									"end": 18064,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18042,
									"end": 18064,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18042,
									"end": 18064,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 18042,
									"end": 18064,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18042,
									"end": 18064,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 18042,
									"end": 18064,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18042,
									"end": 18064,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18042,
									"end": 18064,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18042,
									"end": 18064,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18042,
									"end": 18064,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18042,
									"end": 18064,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17664,
									"end": 18089,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 17664,
									"end": 18089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18119,
									"end": 18121,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18104,
									"end": 18129,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18104,
									"end": 18129,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18113,
									"end": 18117,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18104,
									"end": 18129,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18104,
									"end": 18129,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18104,
									"end": 18129,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 18123,
									"end": 18128,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18104,
									"end": 18129,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18104,
									"end": 18129,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18104,
									"end": 18129,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 18104,
									"end": 18129,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18104,
									"end": 18129,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18104,
									"end": 18129,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 18104,
									"end": 18129,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18104,
									"end": 18129,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 18104,
									"end": 18129,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18104,
									"end": 18129,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18104,
									"end": 18129,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18104,
									"end": 18129,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18104,
									"end": 18129,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18104,
									"end": 18129,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18104,
									"end": 18129,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18104,
									"end": 18129,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 17029,
									"end": 18136,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17029,
									"end": 18136,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17029,
									"end": 18136,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17029,
									"end": 18136,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5414,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 5234,
									"end": 5414,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5282,
									"end": 5359,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5279,
									"end": 5280,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5360,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5379,
									"end": 5383,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 5376,
									"end": 5377,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 5369,
									"end": 5384,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5403,
									"end": 5407,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 5400,
									"end": 5401,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5393,
									"end": 5408,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5462,
									"end": 5470,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5509,
									"end": 5514,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5506,
									"end": 5507,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5502,
									"end": 5515,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5420,
									"end": 5522,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5589,
									"end": 5594,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5596,
									"end": 5600,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5620,
									"end": 5626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5611,
									"end": 5626,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5611,
									"end": 5626,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5644,
									"end": 5649,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5635,
									"end": 5649,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5635,
									"end": 5649,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "tag",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5679,
									"end": 5680,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5669,
									"end": 5677,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5666,
									"end": 5681,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5774,
									"end": 5778,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5769,
									"end": 5772,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5765,
									"end": 5779,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 5759,
									"end": 5763,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5756,
									"end": 5780,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 5783,
									"end": 5801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "tag",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "tag",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5833,
									"end": 5834,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5823,
									"end": 5831,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5819,
									"end": 5835,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6248,
									"end": 6252,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6241,
									"end": 6246,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6237,
									"end": 6253,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6228,
									"end": 6253,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6228,
									"end": 6253,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "tag",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6292,
									"end": 6296,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6280,
									"end": 6303,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6280,
									"end": 6303,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 6351,
									"end": 6359,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 6328,
									"end": 6360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "tag",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6316,
									"end": 6360,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 6316,
									"end": 6360,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "tag",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5528,
									"end": 6376,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6436,
									"end": 6441,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6627,
									"end": 6635,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6648,
									"end": 6649,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6639,
									"end": 6649,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6639,
									"end": 6649,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6650,
									"end": 6655,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 6650,
									"end": 6655,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "tag",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6676,
									"end": 6680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6693,
									"end": 6694,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6694,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6684,
									"end": 6694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6695,
									"end": 6700,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 6695,
									"end": 6700,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "tag",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6762,
									"end": 6766,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6811,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6846,
									"end": 6847,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "tag",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6823,
									"end": 6824,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6814,
									"end": 6824,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6814,
									"end": 6824,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "tag",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6886,
									"end": 6889,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 6876,
									"end": 6884,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6873,
									"end": 6890,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 6893,
									"end": 6911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "tag",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "tag",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6942,
									"end": 6950,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6939,
									"end": 6940,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6935,
									"end": 6951,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 6926,
									"end": 6951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6926,
									"end": 6951,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6977,
									"end": 6980,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6970,
									"end": 6975,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 6981,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 6984,
									"end": 7002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "tag",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "tag",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "tag",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7141,
									"end": 7143,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7131,
									"end": 7139,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7128,
									"end": 7144,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7125,
									"name": "PUSH",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 7116,
									"end": 7120,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7113,
									"end": 7126,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 7109,
									"end": 7145,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7091,
									"end": 7093,
									"name": "PUSH",
									"source": 1,
									"value": "4E"
								},
								{
									"begin": 7081,
									"end": 7089,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7078,
									"end": 7094,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7075,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 7067,
									"end": 7071,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7076,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 7060,
									"end": 7095,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7044,
									"end": 7155,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7197,
									"end": 7205,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7191,
									"end": 7195,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7187,
									"end": 7206,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7178,
									"end": 7206,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7178,
									"end": 7206,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7232,
									"end": 7235,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7225,
									"end": 7230,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7222,
									"end": 7236,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 7239,
									"end": 7257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "tag",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "tag",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "tag",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 7350,
									"end": 7353,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7340,
									"end": 7348,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7334,
									"end": 7338,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7331,
									"end": 7332,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 7312,
									"end": 7354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "tag",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7381,
									"end": 7384,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7377,
									"end": 7391,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7370,
									"end": 7375,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7367,
									"end": 7392,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 7395,
									"end": 7413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "tag",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "tag",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7444,
									"end": 7448,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7437,
									"end": 7442,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7433,
									"end": 7449,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7424,
									"end": 7449,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7424,
									"end": 7449,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "tag",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 7455,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7496,
									"end": 7503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7536,
									"end": 7540,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7529,
									"end": 7534,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7525,
									"end": 7541,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7514,
									"end": 7541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7514,
									"end": 7541,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7611,
									"end": 7616,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 7635,
									"end": 7658,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "tag",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7627,
									"end": 7658,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7627,
									"end": 7658,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "157"
								},
								{
									"begin": 7695,
									"end": 7703,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 7679,
									"end": 7704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "tag",
									"source": 1,
									"value": "157"
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7667,
									"end": 7704,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7667,
									"end": 7704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "158"
								},
								{
									"begin": 7760,
									"end": 7826,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7750,
									"end": 7758,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7744,
									"end": 7748,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 7723,
									"end": 7827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "tag",
									"source": 1,
									"value": "158"
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7714,
									"end": 7827,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7714,
									"end": 7827,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7880,
									"end": 7887,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 7921,
									"end": 7922,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 7903,
									"end": 7923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "tag",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7923,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 7955,
									"end": 7956,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 7937,
									"end": 7957,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "tag",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7932,
									"end": 7957,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7932,
									"end": 7957,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7992,
									"end": 7993,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7989,
									"end": 7990,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7994,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "162"
								},
								{
									"begin": 8032,
									"end": 8043,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 8014,
									"end": 8044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "tag",
									"source": 1,
									"value": "162"
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8003,
									"end": 8044,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8003,
									"end": 8044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8193,
									"end": 8194,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8184,
									"end": 8191,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8180,
									"end": 8195,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 8177,
									"end": 8178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8174,
									"end": 8196,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 8154,
									"end": 8155,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 8156,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8127,
									"end": 8210,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "163"
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 8223,
									"end": 8241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "tag",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "tag",
									"source": 1,
									"value": "163"
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7888,
									"end": 8250,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7840,
									"end": 8250,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8293,
									"end": 8300,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8333,
									"end": 8375,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8326,
									"end": 8331,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8322,
									"end": 8376,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8311,
									"end": 8376,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8311,
									"end": 8376,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8256,
									"end": 8382,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8425,
									"end": 8432,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "167"
								},
								{
									"begin": 8472,
									"end": 8477,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 8454,
									"end": 8478,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "tag",
									"source": 1,
									"value": "167"
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8443,
									"end": 8478,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8443,
									"end": 8478,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8484,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "169"
								},
								{
									"begin": 8595,
									"end": 8600,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 8577,
									"end": 8601,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "tag",
									"source": 1,
									"value": "169"
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8572,
									"end": 8575,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8565,
									"end": 8602,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8490,
									"end": 8608,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8707,
									"end": 8711,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8745,
									"end": 8747,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8734,
									"end": 8743,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8730,
									"end": 8748,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8722,
									"end": 8748,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8722,
									"end": 8748,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 8826,
									"end": 8827,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8815,
									"end": 8824,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8811,
									"end": 8828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8802,
									"end": 8808,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 8758,
									"end": 8829,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "tag",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8614,
									"end": 8836,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8882,
									"end": 8885,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 8919,
									"end": 8920,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 8901,
									"end": 8921,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "tag",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8896,
									"end": 8921,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8896,
									"end": 8921,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 8953,
									"end": 8954,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 8935,
									"end": 8955,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "tag",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8930,
									"end": 8955,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8930,
									"end": 8955,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8978,
									"end": 8979,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8975,
									"end": 8976,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8971,
									"end": 8980,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8964,
									"end": 8980,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8964,
									"end": 8980,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8999,
									"end": 9002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8996,
									"end": 8997,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8993,
									"end": 9003,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "176"
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 9006,
									"end": 9024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "tag",
									"source": 1,
									"value": "176"
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "tag",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8842,
									"end": 9033,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 9144,
									"end": 9149,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 9126,
									"end": 9150,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "tag",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9121,
									"end": 9124,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9114,
									"end": 9151,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9039,
									"end": 9157,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9312,
									"end": 9316,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9350,
									"end": 9352,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 9339,
									"end": 9348,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9335,
									"end": 9353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9327,
									"end": 9353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9327,
									"end": 9353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 9431,
									"end": 9432,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9420,
									"end": 9429,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9416,
									"end": 9433,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9407,
									"end": 9413,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 9363,
									"end": 9434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "tag",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "181"
								},
								{
									"begin": 9512,
									"end": 9514,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9501,
									"end": 9510,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9497,
									"end": 9515,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9488,
									"end": 9494,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 9444,
									"end": 9516,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "tag",
									"source": 1,
									"value": "181"
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 9594,
									"end": 9596,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9583,
									"end": 9592,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9579,
									"end": 9597,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9570,
									"end": 9576,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 9526,
									"end": 9598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "tag",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9163,
									"end": 9605,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9704,
									"end": 9708,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9742,
									"end": 9744,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9731,
									"end": 9740,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9727,
									"end": 9745,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9719,
									"end": 9745,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9719,
									"end": 9745,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 9823,
									"end": 9824,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9812,
									"end": 9821,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9808,
									"end": 9825,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9799,
									"end": 9805,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 9755,
									"end": 9826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "tag",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9611,
									"end": 9833,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 21970,
									"end": 22995,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 21970,
									"end": 22995,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21970,
									"end": 22995,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21970,
									"end": 22995,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21970,
									"end": 22995,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21970,
									"end": 22995,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21970,
									"end": 22995,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 21970,
									"end": 22995,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21970,
									"end": 22995,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e04ce2cb12cba82a5a206700ecf03dfec784407c886144edc4803ed0c7fa14e664736f6c63430008150033",
									".code": [
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "DB068E0E"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "F851A440"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "A6F2AE3A"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "2B6C5AF"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21970,
											"end": 22995,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 22010,
											"end": 22050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 22010,
											"end": 22050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12832,
											"end": 12921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 12832,
											"end": 12921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15051,
											"end": 15237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15051,
											"end": 15237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 15051,
											"end": 15237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 13902,
											"end": 13999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 13902,
											"end": 13999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 15797,
											"end": 16041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15797,
											"end": 16041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 15797,
											"end": 16041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 13760,
											"end": 13842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 13760,
											"end": 13842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22838,
											"end": 22993,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22838,
											"end": 22993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22838,
											"end": 22993,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22838,
											"end": 22993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22838,
											"end": 22993,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22838,
											"end": 22993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 22838,
											"end": 22993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22838,
											"end": 22993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22838,
											"end": 22993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22838,
											"end": 22993,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22838,
											"end": 22993,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 22838,
											"end": 22993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22838,
											"end": 22993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22838,
											"end": 22993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 22838,
											"end": 22993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 22838,
											"end": 22993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22838,
											"end": 22993,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 22838,
											"end": 22993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22838,
											"end": 22993,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 14057,
											"end": 14173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 14057,
											"end": 14173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14057,
											"end": 14173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13034,
											"end": 13127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13034,
											"end": 13127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22325,
											"end": 22615,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22325,
											"end": 22615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22325,
											"end": 22615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22325,
											"end": 22615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 22325,
											"end": 22615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22325,
											"end": 22615,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22325,
											"end": 22615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22325,
											"end": 22615,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14368,
											"end": 14546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 14368,
											"end": 14546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14368,
											"end": 14546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 22621,
											"end": 22832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 22621,
											"end": 22832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 14604,
											"end": 14744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14604,
											"end": 14744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14604,
											"end": 14744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 22056,
											"end": 22076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 22056,
											"end": 22076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22010,
											"end": 22050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12890,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12909,
											"end": 12914,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 12902,
											"end": 12914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 12902,
											"end": 12914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12832,
											"end": 12921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15140,
											"end": 15153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15156,
											"end": 15168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 15156,
											"end": 15166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 15156,
											"end": 15168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15156,
											"end": 15168,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 15156,
											"end": 15168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15140,
											"end": 15168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15140,
											"end": 15168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15178,
											"end": 15209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 15187,
											"end": 15192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15194,
											"end": 15201,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15203,
											"end": 15208,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15178,
											"end": 15186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 15178,
											"end": 15209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15178,
											"end": 15209,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 15178,
											"end": 15209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15226,
											"end": 15230,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15219,
											"end": 15230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13954,
											"end": 13961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13980,
											"end": 13992,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13980,
											"end": 13992,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13973,
											"end": 13992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13973,
											"end": 13992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15884,
											"end": 15888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15900,
											"end": 15915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 15918,
											"end": 15928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 15918,
											"end": 15930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15930,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 15918,
											"end": 15930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 15930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 15930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 15977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 15956,
											"end": 15960,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15962,
											"end": 15969,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15976,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 15955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 15940,
											"end": 15977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 15977,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 15940,
											"end": 15977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15987,
											"end": 16013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 15997,
											"end": 16001,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16003,
											"end": 16005,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16007,
											"end": 16012,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15987,
											"end": 15996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 15987,
											"end": 16013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15987,
											"end": 16013,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 15987,
											"end": 16013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16034,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16023,
											"end": 16034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16023,
											"end": 16034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16023,
											"end": 16034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 16041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13809,
											"end": 13814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13833,
											"end": 13835,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13826,
											"end": 13835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13760,
											"end": 13842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22838,
											"end": 22993,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 22838,
											"end": 22993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22897,
											"end": 22902,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22897,
											"end": 22902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22897,
											"end": 22902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22897,
											"end": 22902,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22897,
											"end": 22902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22897,
											"end": 22902,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22897,
											"end": 22902,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22897,
											"end": 22902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22897,
											"end": 22902,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22897,
											"end": 22902,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22897,
											"end": 22902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22883,
											"end": 22902,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22883,
											"end": 22902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22883,
											"end": 22893,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22883,
											"end": 22902,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22883,
											"end": 22902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22883,
											"end": 22902,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 22875,
											"end": 22930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 22875,
											"end": 22930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22948,
											"end": 22953,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22948,
											"end": 22953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22948,
											"end": 22953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22948,
											"end": 22953,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22948,
											"end": 22953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22948,
											"end": 22953,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22948,
											"end": 22953,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22948,
											"end": 22953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22948,
											"end": 22953,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22948,
											"end": 22953,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22948,
											"end": 22953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22940,
											"end": 22963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 22964,
											"end": 22985,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22838,
											"end": 22993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14148,
											"end": 14157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14158,
											"end": 14165,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14057,
											"end": 14173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13081,
											"end": 13094,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13113,
											"end": 13120,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13106,
											"end": 13120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13106,
											"end": 13120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13034,
											"end": 13127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22325,
											"end": 22615,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 22325,
											"end": 22615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22365,
											"end": 22383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22398,
											"end": 22421,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22398,
											"end": 22421,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22386,
											"end": 22395,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22386,
											"end": 22421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 22386,
											"end": 22421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22386,
											"end": 22421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22386,
											"end": 22421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 22386,
											"end": 22421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22386,
											"end": 22421,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 22386,
											"end": 22421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22365,
											"end": 22421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22365,
											"end": 22421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22456,
											"end": 22480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 22474,
											"end": 22478,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 22456,
											"end": 22465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 22456,
											"end": 22480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22456,
											"end": 22480,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 22456,
											"end": 22480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22439,
											"end": 22452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22439,
											"end": 22480,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22439,
											"end": 22480,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 22431,
											"end": 22502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 22431,
											"end": 22502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22512,
											"end": 22563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 22530,
											"end": 22534,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 22537,
											"end": 22547,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22549,
											"end": 22562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22512,
											"end": 22521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 22512,
											"end": 22563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22512,
											"end": 22563,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 22512,
											"end": 22563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22582,
											"end": 22592,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22578,
											"end": 22608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22578,
											"end": 22608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22578,
											"end": 22608,
											"name": "PUSH",
											"source": 0,
											"value": "E3D4187F6CA4248660CC0AC8B8056515BAC4A8132BE2ECA31D6D0CC170722A7E"
										},
										{
											"begin": 22594,
											"end": 22607,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22578,
											"end": 22608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22578,
											"end": 22608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22578,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 22578,
											"end": 22608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22578,
											"end": 22608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22578,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 22578,
											"end": 22608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22578,
											"end": 22608,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 22578,
											"end": 22608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22578,
											"end": 22608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22578,
											"end": 22608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22578,
											"end": 22608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22578,
											"end": 22608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22578,
											"end": 22608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22578,
											"end": 22608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22578,
											"end": 22608,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 22355,
											"end": 22615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22325,
											"end": 22615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14437,
											"end": 14441,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14453,
											"end": 14466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14469,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 14469,
											"end": 14479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 14469,
											"end": 14481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14469,
											"end": 14481,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 14469,
											"end": 14481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14453,
											"end": 14481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14453,
											"end": 14481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14491,
											"end": 14518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 14501,
											"end": 14506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14508,
											"end": 14510,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14512,
											"end": 14517,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14491,
											"end": 14500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 14491,
											"end": 14518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14491,
											"end": 14518,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 14491,
											"end": 14518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14535,
											"end": 14539,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14528,
											"end": 14539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14528,
											"end": 14539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14528,
											"end": 14539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22699,
											"end": 22704,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22699,
											"end": 22704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22699,
											"end": 22704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22699,
											"end": 22704,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22699,
											"end": 22704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22699,
											"end": 22704,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22699,
											"end": 22704,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22699,
											"end": 22704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22699,
											"end": 22704,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22699,
											"end": 22704,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22699,
											"end": 22704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22704,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22685,
											"end": 22704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22695,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22704,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22685,
											"end": 22704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22704,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 22677,
											"end": 22739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 22677,
											"end": 22739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22775,
											"end": 22782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22749,
											"end": 22772,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22749,
											"end": 22782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22749,
											"end": 22782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22749,
											"end": 22782,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22749,
											"end": 22782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22797,
											"end": 22825,
											"name": "PUSH",
											"source": 0,
											"value": "8BC87B062B954ECCD7F9017A070917F40C9C40AF9FF4B41ED4F52A6A37199276"
										},
										{
											"begin": 22817,
											"end": 22824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22797,
											"end": 22825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22797,
											"end": 22825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22797,
											"end": 22825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 22797,
											"end": 22825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22797,
											"end": 22825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22797,
											"end": 22825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 22797,
											"end": 22825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22797,
											"end": 22825,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 22797,
											"end": 22825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22797,
											"end": 22825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22797,
											"end": 22825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22797,
											"end": 22825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22797,
											"end": 22825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22797,
											"end": 22825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22797,
											"end": 22825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22797,
											"end": 22825,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14684,
											"end": 14691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14710,
											"end": 14721,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14722,
											"end": 14727,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14729,
											"end": 14736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14737,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14710,
											"end": 14737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14737,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14710,
											"end": 14737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14710,
											"end": 14737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14710,
											"end": 14737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14710,
											"end": 14737,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14737,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14703,
											"end": 14737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14703,
											"end": 14737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14604,
											"end": 14744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7340,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 7244,
											"end": 7340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7323,
											"end": 7333,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7316,
											"end": 7333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7316,
											"end": 7333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19747,
											"end": 19875,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 19747,
											"end": 19875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19831,
											"end": 19868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 19840,
											"end": 19845,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19847,
											"end": 19854,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19861,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19863,
											"end": 19867,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19831,
											"end": 19839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 19831,
											"end": 19868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19831,
											"end": 19868,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 19831,
											"end": 19868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19747,
											"end": 19875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19747,
											"end": 19875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19747,
											"end": 19875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19747,
											"end": 19875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21898,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 21421,
											"end": 21898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21520,
											"end": 21544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21547,
											"end": 21572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 21557,
											"end": 21562,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21564,
											"end": 21571,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21547,
											"end": 21556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 21547,
											"end": 21572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21547,
											"end": 21572,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 21547,
											"end": 21572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21520,
											"end": 21572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21520,
											"end": 21572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21606,
											"end": 21623,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21586,
											"end": 21602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21586,
											"end": 21623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21582,
											"end": 21892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 21582,
											"end": 21892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21662,
											"end": 21667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21643,
											"end": 21659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21643,
											"end": 21667,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21639,
											"end": 21769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21639,
											"end": 21769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 21639,
											"end": 21769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21721,
											"end": 21728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21730,
											"end": 21746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21748,
											"end": 21753,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21694,
											"end": 21754,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21694,
											"end": 21754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21694,
											"end": 21754,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21694,
											"end": 21754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21694,
											"end": 21754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21694,
											"end": 21754,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21694,
											"end": 21754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21694,
											"end": 21754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 21694,
											"end": 21754,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21694,
											"end": 21754,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21694,
											"end": 21754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21694,
											"end": 21754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21694,
											"end": 21754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 21694,
											"end": 21754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21694,
											"end": 21754,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 21694,
											"end": 21754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21694,
											"end": 21754,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21694,
											"end": 21754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21694,
											"end": 21754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21694,
											"end": 21754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21694,
											"end": 21754,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21694,
											"end": 21754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21694,
											"end": 21754,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21639,
											"end": 21769,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 21639,
											"end": 21769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21810,
											"end": 21867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 21819,
											"end": 21824,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21826,
											"end": 21833,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21854,
											"end": 21859,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21835,
											"end": 21851,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21835,
											"end": 21859,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21861,
											"end": 21866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21810,
											"end": 21818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 21810,
											"end": 21867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21810,
											"end": 21867,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 21810,
											"end": 21867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21582,
											"end": 21892,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 21582,
											"end": 21892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21510,
											"end": 21898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21421,
											"end": 21898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16414,
											"end": 16714,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 16414,
											"end": 16714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16513,
											"end": 16514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16497,
											"end": 16515,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16497,
											"end": 16515,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16497,
											"end": 16501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16497,
											"end": 16515,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16497,
											"end": 16515,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16497,
											"end": 16515,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 16493,
											"end": 16579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16565,
											"end": 16566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16538,
											"end": 16568,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16538,
											"end": 16568,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16538,
											"end": 16568,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16538,
											"end": 16568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16538,
											"end": 16568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16538,
											"end": 16568,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16538,
											"end": 16568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16538,
											"end": 16568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 16538,
											"end": 16568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16538,
											"end": 16568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16538,
											"end": 16568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 16538,
											"end": 16568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16538,
											"end": 16568,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 16538,
											"end": 16568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16538,
											"end": 16568,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16538,
											"end": 16568,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16538,
											"end": 16568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16538,
											"end": 16568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16538,
											"end": 16568,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16538,
											"end": 16568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16538,
											"end": 16568,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16579,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 16493,
											"end": 16579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16606,
											"end": 16607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16592,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16592,
											"end": 16608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16592,
											"end": 16594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16592,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16592,
											"end": 16608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16592,
											"end": 16608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16588,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 16588,
											"end": 16674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16660,
											"end": 16661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16631,
											"end": 16663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16631,
											"end": 16663,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16663,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16631,
											"end": 16663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16663,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16631,
											"end": 16663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 16631,
											"end": 16663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 16631,
											"end": 16663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16663,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 16631,
											"end": 16663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16631,
											"end": 16663,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16663,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16663,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16588,
											"end": 16674,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 16588,
											"end": 16674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16683,
											"end": 16707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 16691,
											"end": 16695,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16697,
											"end": 16699,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16701,
											"end": 16706,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16683,
											"end": 16690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 16683,
											"end": 16707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16683,
											"end": 16707,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 16683,
											"end": 16707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16414,
											"end": 16714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16414,
											"end": 16714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16414,
											"end": 16714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16414,
											"end": 16714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20707,
											"end": 21139,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 20707,
											"end": 21139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20836,
											"end": 20837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20819,
											"end": 20838,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20819,
											"end": 20838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20819,
											"end": 20824,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20819,
											"end": 20838,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20819,
											"end": 20838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20819,
											"end": 20838,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20815,
											"end": 20904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 20815,
											"end": 20904,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 20891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20861,
											"end": 20893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20861,
											"end": 20893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20861,
											"end": 20893,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20861,
											"end": 20893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20861,
											"end": 20893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20861,
											"end": 20893,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20861,
											"end": 20893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20861,
											"end": 20893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 20861,
											"end": 20893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20861,
											"end": 20893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20861,
											"end": 20893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 20861,
											"end": 20893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20861,
											"end": 20893,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 20861,
											"end": 20893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20861,
											"end": 20893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20861,
											"end": 20893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20861,
											"end": 20893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20861,
											"end": 20893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20861,
											"end": 20893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20861,
											"end": 20893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20861,
											"end": 20893,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20815,
											"end": 20904,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 20815,
											"end": 20904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20917,
											"end": 20938,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20917,
											"end": 20938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20917,
											"end": 20924,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20917,
											"end": 20938,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20917,
											"end": 20938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20917,
											"end": 20938,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20913,
											"end": 21003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 20913,
											"end": 21003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20989,
											"end": 20990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20961,
											"end": 20992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20961,
											"end": 20992,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20961,
											"end": 20992,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20961,
											"end": 20992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20961,
											"end": 20992,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20961,
											"end": 20992,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20961,
											"end": 20992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20961,
											"end": 20992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 20961,
											"end": 20992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20961,
											"end": 20992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20961,
											"end": 20992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 20961,
											"end": 20992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20961,
											"end": 20992,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 20961,
											"end": 20992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20961,
											"end": 20992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20961,
											"end": 20992,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20961,
											"end": 20992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20961,
											"end": 20992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20961,
											"end": 20992,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20961,
											"end": 20992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20961,
											"end": 20992,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20913,
											"end": 21003,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 20913,
											"end": 21003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21042,
											"end": 21047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21023,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21012,
											"end": 21030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21024,
											"end": 21029,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21012,
											"end": 21030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21012,
											"end": 21030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21030,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21012,
											"end": 21030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21030,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21012,
											"end": 21030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21012,
											"end": 21030,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21031,
											"end": 21038,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21039,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21012,
											"end": 21039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21039,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21012,
											"end": 21039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21012,
											"end": 21039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21012,
											"end": 21039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21012,
											"end": 21039,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21047,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21061,
											"end": 21070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21057,
											"end": 21133,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21057,
											"end": 21133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 21057,
											"end": 21133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21107,
											"end": 21114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21122,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21091,
											"end": 21122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21105,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21122,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21091,
											"end": 21122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21122,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21116,
											"end": 21121,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21122,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21091,
											"end": 21122,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 21091,
											"end": 21122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 21091,
											"end": 21122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21122,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 21091,
											"end": 21122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21122,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21091,
											"end": 21122,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21122,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21091,
											"end": 21122,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21057,
											"end": 21133,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 21057,
											"end": 21133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20707,
											"end": 21139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20707,
											"end": 21139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20707,
											"end": 21139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20707,
											"end": 21139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20707,
											"end": 21139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17029,
											"end": 18136,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 17029,
											"end": 18136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17134,
											"end": 17135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17118,
											"end": 17136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17118,
											"end": 17136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17118,
											"end": 17122,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17118,
											"end": 17136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17118,
											"end": 17136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17118,
											"end": 17136,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 17114,
											"end": 17654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17270,
											"end": 17275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17254,
											"end": 17266,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17254,
											"end": 17266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17254,
											"end": 17275,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17254,
											"end": 17275,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17254,
											"end": 17275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17254,
											"end": 17275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 17254,
											"end": 17275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17254,
											"end": 17275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17254,
											"end": 17275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 17254,
											"end": 17275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17254,
											"end": 17275,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 17254,
											"end": 17275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17254,
											"end": 17275,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17254,
											"end": 17275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17254,
											"end": 17275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17254,
											"end": 17275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17254,
											"end": 17275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17254,
											"end": 17275,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17254,
											"end": 17275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 17114,
											"end": 17654,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17654,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 17114,
											"end": 17654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17328,
											"end": 17337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17328,
											"end": 17343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17338,
											"end": 17342,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17328,
											"end": 17343,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17328,
											"end": 17343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17328,
											"end": 17343,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17328,
											"end": 17343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17328,
											"end": 17343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17328,
											"end": 17343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17328,
											"end": 17343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17328,
											"end": 17343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17328,
											"end": 17343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17328,
											"end": 17343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17328,
											"end": 17343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17328,
											"end": 17343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17328,
											"end": 17343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17328,
											"end": 17343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17328,
											"end": 17343,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17328,
											"end": 17343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17375,
											"end": 17380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17361,
											"end": 17372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17361,
											"end": 17380,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 17357,
											"end": 17472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17432,
											"end": 17436,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17438,
											"end": 17449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17451,
											"end": 17456,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17407,
											"end": 17457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17407,
											"end": 17457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17407,
											"end": 17457,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17407,
											"end": 17457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17407,
											"end": 17457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17407,
											"end": 17457,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17407,
											"end": 17457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17407,
											"end": 17457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 17407,
											"end": 17457,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17407,
											"end": 17457,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17407,
											"end": 17457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17407,
											"end": 17457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17407,
											"end": 17457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 17407,
											"end": 17457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17407,
											"end": 17457,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 17407,
											"end": 17457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17407,
											"end": 17457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17407,
											"end": 17457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17407,
											"end": 17457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17407,
											"end": 17457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17407,
											"end": 17457,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17407,
											"end": 17457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17407,
											"end": 17457,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17472,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 17357,
											"end": 17472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17624,
											"end": 17629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17610,
											"end": 17621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17610,
											"end": 17629,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17592,
											"end": 17601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17592,
											"end": 17607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17602,
											"end": 17606,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17592,
											"end": 17607,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17592,
											"end": 17607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17592,
											"end": 17607,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17592,
											"end": 17607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17592,
											"end": 17607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17592,
											"end": 17607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17592,
											"end": 17607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17592,
											"end": 17607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17592,
											"end": 17607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17592,
											"end": 17607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17592,
											"end": 17607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17592,
											"end": 17607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17592,
											"end": 17607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17592,
											"end": 17607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17592,
											"end": 17607,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17592,
											"end": 17629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17592,
											"end": 17629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17592,
											"end": 17629,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17592,
											"end": 17629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17114,
											"end": 17654,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 17114,
											"end": 17654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17682,
											"end": 17683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17668,
											"end": 17684,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17668,
											"end": 17684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17668,
											"end": 17670,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17668,
											"end": 17684,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17668,
											"end": 17684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17668,
											"end": 17684,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17664,
											"end": 18089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 17664,
											"end": 18089,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17847,
											"end": 17852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17831,
											"end": 17843,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17831,
											"end": 17843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17831,
											"end": 17852,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17831,
											"end": 17852,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17831,
											"end": 17852,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17831,
											"end": 17852,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17831,
											"end": 17852,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17831,
											"end": 17852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17831,
											"end": 17852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17831,
											"end": 17852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17831,
											"end": 17852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17831,
											"end": 17852,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17831,
											"end": 17852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17664,
											"end": 18089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 17664,
											"end": 18089,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17664,
											"end": 18089,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 17664,
											"end": 18089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18059,
											"end": 18064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18042,
											"end": 18051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18042,
											"end": 18055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18052,
											"end": 18054,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18042,
											"end": 18055,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18042,
											"end": 18055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18042,
											"end": 18055,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18042,
											"end": 18055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18042,
											"end": 18055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18042,
											"end": 18055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18042,
											"end": 18055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18042,
											"end": 18055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18042,
											"end": 18055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18042,
											"end": 18055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18042,
											"end": 18055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18042,
											"end": 18055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18042,
											"end": 18055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18042,
											"end": 18055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18042,
											"end": 18055,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18042,
											"end": 18055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18042,
											"end": 18064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18042,
											"end": 18064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18042,
											"end": 18064,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18042,
											"end": 18064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18042,
											"end": 18064,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18042,
											"end": 18064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18042,
											"end": 18064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18042,
											"end": 18064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18042,
											"end": 18064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18042,
											"end": 18064,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18042,
											"end": 18064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17664,
											"end": 18089,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 17664,
											"end": 18089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18119,
											"end": 18121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18104,
											"end": 18129,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18104,
											"end": 18129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18113,
											"end": 18117,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18104,
											"end": 18129,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18104,
											"end": 18129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18104,
											"end": 18129,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18123,
											"end": 18128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18104,
											"end": 18129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18104,
											"end": 18129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18104,
											"end": 18129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 18104,
											"end": 18129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18104,
											"end": 18129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18104,
											"end": 18129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 18104,
											"end": 18129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18104,
											"end": 18129,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 18104,
											"end": 18129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18104,
											"end": 18129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18104,
											"end": 18129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18104,
											"end": 18129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18104,
											"end": 18129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18104,
											"end": 18129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18104,
											"end": 18129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18104,
											"end": 18129,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 17029,
											"end": 18136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17029,
											"end": 18136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17029,
											"end": 18136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17029,
											"end": 18136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 541,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 442,
											"end": 541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 522,
											"end": 534,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 512,
											"end": 534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 512,
											"end": 534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 442,
											"end": 541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 547,
											"end": 716,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 547,
											"end": 716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 642,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 660,
											"end": 663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 653,
											"end": 672,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 681,
											"end": 710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 681,
											"end": 710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 547,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 722,
											"end": 968,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 722,
											"end": 968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 803,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 824,
											"end": 825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 821,
											"end": 834,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 813,
											"end": 926,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 813,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 912,
											"end": 913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 907,
											"end": 910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 903,
											"end": 914,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 897,
											"end": 915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 888,
											"end": 891,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 884,
											"end": 895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 877,
											"end": 916,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 849,
											"end": 851,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 846,
											"end": 847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 842,
											"end": 852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 837,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 837,
											"end": 852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 813,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 813,
											"end": 926,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 960,
											"end": 961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 951,
											"end": 957,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 946,
											"end": 949,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 942,
											"end": 958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 935,
											"end": 962,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 784,
											"end": 968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 722,
											"end": 968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 722,
											"end": 968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 722,
											"end": 968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 722,
											"end": 968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1068,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1059,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1050,
											"end": 1055,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 974,
											"end": 1076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 1231,
											"end": 1236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 1198,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 1317,
											"end": 1323,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1315,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 1253,
											"end": 1324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1324,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 1391,
											"end": 1397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 1389,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1377,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 1333,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1445,
											"end": 1451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1423,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1453,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1614,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1665,
											"end": 1674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1675,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1676,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1766,
											"end": 1770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1763,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1693,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1982,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1865,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 1975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1972,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1976,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2230,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2181,
											"end": 2186,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2177,
											"end": 2231,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2280,
											"end": 2287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 2327,
											"end": 2332,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2309,
											"end": 2333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2243,
											"end": 2339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2467,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2345,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 2418,
											"end": 2442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2443,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2519,
											"end": 2524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2563,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2564,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 2564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 2564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2600,
											"end": 2605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2573,
											"end": 2606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2740,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2618,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2709,
											"end": 2714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2691,
											"end": 2715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2715,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2691,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2684,
											"end": 2689,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 2716,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2671,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2671,
											"end": 2734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2730,
											"end": 2731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2720,
											"end": 2732,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2671,
											"end": 2734,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2671,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2837,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2873,
											"end": 2878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2846,
											"end": 2879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 2973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3018,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3013,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3002,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3014,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2987,
											"end": 3019,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3103,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 2984,
											"end": 3103,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3022,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 3022,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 3022,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3022,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 3022,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3103,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 2984,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 3212,
											"end": 3219,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3192,
											"end": 3201,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 3167,
											"end": 3220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3220,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 3167,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3220,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3271,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3295,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 3340,
											"end": 3347,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3331,
											"end": 3337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3320,
											"end": 3329,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3316,
											"end": 3338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 3295,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3348,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 3295,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3285,
											"end": 3348,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3285,
											"end": 3348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 3365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3371,
											"end": 3461,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 3371,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3412,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3441,
											"end": 3454,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3455,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3371,
											"end": 3461,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3371,
											"end": 3461,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3371,
											"end": 3461,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3371,
											"end": 3461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3576,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 3467,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 3563,
											"end": 3568,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 3548,
											"end": 3569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3569,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 3548,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3543,
											"end": 3546,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3570,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3709,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3696,
											"end": 3705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3692,
											"end": 3710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3684,
											"end": 3710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3684,
											"end": 3710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 3720,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3785,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 3720,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 5302,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5481,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 5447,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5605,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5650,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5636,
											"end": 5645,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5627,
											"end": 5634,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5646,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5619,
											"end": 5651,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 5654,
											"end": 5733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5774,
											"end": 5775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 5844,
											"end": 5851,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5833,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5820,
											"end": 5842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 5799,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5852,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5745,
											"end": 5862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5901,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 5972,
											"end": 5979,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 5969,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5952,
											"end": 5961,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5948,
											"end": 5970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 5927,
											"end": 5980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5917,
											"end": 5980,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5917,
											"end": 5980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 5990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6003,
											"end": 6121,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 6003,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6090,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 6108,
											"end": 6113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6090,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 6090,
											"end": 6114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6090,
											"end": 6114,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 6090,
											"end": 6114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6085,
											"end": 6088,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6115,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6003,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6003,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6003,
											"end": 6121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6127,
											"end": 6349,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6127,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6220,
											"end": 6224,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6258,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6247,
											"end": 6256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6243,
											"end": 6261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6235,
											"end": 6261,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6235,
											"end": 6261,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 6339,
											"end": 6340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6328,
											"end": 6337,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6341,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 6271,
											"end": 6342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6342,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 6271,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6127,
											"end": 6349,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6127,
											"end": 6349,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6127,
											"end": 6349,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6127,
											"end": 6349,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6127,
											"end": 6349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6355,
											"end": 6535,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6355,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6403,
											"end": 6480,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6400,
											"end": 6401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6393,
											"end": 6481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6500,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6497,
											"end": 6498,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6490,
											"end": 6505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6524,
											"end": 6528,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6521,
											"end": 6522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6514,
											"end": 6529,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6622,
											"end": 6623,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6616,
											"end": 6620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6624,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6669,
											"end": 6670,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6663,
											"end": 6667,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6659,
											"end": 6671,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6746,
											"end": 6750,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 6738,
											"end": 6744,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6734,
											"end": 6751,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6724,
											"end": 6751,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6724,
											"end": 6751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6808,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6800,
											"end": 6806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6811,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6827,
											"end": 6845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 6861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6867,
											"end": 7040,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 6867,
											"end": 7040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7007,
											"end": 7032,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C792061646D696E2063616E207769746864726177000000000000000000"
										},
										{
											"begin": 7003,
											"end": 7004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6995,
											"end": 7001,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6991,
											"end": 7005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 7033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6867,
											"end": 7040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6867,
											"end": 7040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7046,
											"end": 7412,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 7046,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7191,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7209,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 7273,
											"end": 7275,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 7268,
											"end": 7271,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 7209,
											"end": 7276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7276,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 7209,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7202,
											"end": 7276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7202,
											"end": 7276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7285,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 7374,
											"end": 7377,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7285,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 7285,
											"end": 7378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7285,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 7285,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7403,
											"end": 7405,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7398,
											"end": 7401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7394,
											"end": 7406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7387,
											"end": 7406,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7387,
											"end": 7406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7046,
											"end": 7412,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7046,
											"end": 7412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7046,
											"end": 7412,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7046,
											"end": 7412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7837,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 7418,
											"end": 7837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7584,
											"end": 7588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7622,
											"end": 7624,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7611,
											"end": 7620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7607,
											"end": 7625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7625,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7680,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7665,
											"end": 7669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7681,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 7658,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7646,
											"end": 7655,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7642,
											"end": 7659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7635,
											"end": 7682,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 7825,
											"end": 7829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 7699,
											"end": 7830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7830,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 7699,
											"end": 7830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7691,
											"end": 7830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7691,
											"end": 7830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7837,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7843,
											"end": 8023,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 7843,
											"end": 8023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7891,
											"end": 7968,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7888,
											"end": 7889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7881,
											"end": 7969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7988,
											"end": 7992,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7985,
											"end": 7986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7978,
											"end": 7993,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8012,
											"end": 8016,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8009,
											"end": 8010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8002,
											"end": 8017,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8439,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 8029,
											"end": 8439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8069,
											"end": 8076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8092,
											"end": 8112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 8110,
											"end": 8111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 8092,
											"end": 8112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8112,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 8092,
											"end": 8112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8126,
											"end": 8146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 8144,
											"end": 8145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8126,
											"end": 8146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 8126,
											"end": 8146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8126,
											"end": 8146,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 8126,
											"end": 8146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8181,
											"end": 8182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8174,
											"end": 8183,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8203,
											"end": 8233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 8221,
											"end": 8232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8203,
											"end": 8233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 8203,
											"end": 8233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8203,
											"end": 8233,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 8203,
											"end": 8233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8192,
											"end": 8233,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8192,
											"end": 8233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8382,
											"end": 8383,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8373,
											"end": 8380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8369,
											"end": 8384,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8367,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8363,
											"end": 8385,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8336,
											"end": 8345,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8316,
											"end": 8399,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 8293,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 8293,
											"end": 8432,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8412,
											"end": 8430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 8412,
											"end": 8430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 8412,
											"end": 8430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8412,
											"end": 8430,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 8412,
											"end": 8430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8293,
											"end": 8432,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 8293,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8077,
											"end": 8439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8439,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8439,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8612,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 8445,
											"end": 8612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8585,
											"end": 8604,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F7420656E6F75676820746F6B656E73000000000000000000000000000000"
										},
										{
											"begin": 8581,
											"end": 8582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8569,
											"end": 8583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8562,
											"end": 8605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8618,
											"end": 8984,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 8618,
											"end": 8984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8760,
											"end": 8763,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8781,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 8845,
											"end": 8847,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 8840,
											"end": 8843,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8781,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 8781,
											"end": 8848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8781,
											"end": 8848,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 8781,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8774,
											"end": 8848,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8774,
											"end": 8848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8857,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 8946,
											"end": 8949,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8857,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 8857,
											"end": 8950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8857,
											"end": 8950,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 8857,
											"end": 8950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8975,
											"end": 8977,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8970,
											"end": 8973,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8966,
											"end": 8978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8959,
											"end": 8978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8959,
											"end": 8978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8618,
											"end": 8984,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8618,
											"end": 8984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8618,
											"end": 8984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8618,
											"end": 8984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8990,
											"end": 9409,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 8990,
											"end": 9409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9156,
											"end": 9160,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9194,
											"end": 9196,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9183,
											"end": 9192,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9179,
											"end": 9197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9243,
											"end": 9252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9237,
											"end": 9241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9233,
											"end": 9253,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9229,
											"end": 9230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9218,
											"end": 9227,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9207,
											"end": 9254,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9271,
											"end": 9402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 9397,
											"end": 9401,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9271,
											"end": 9402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 9271,
											"end": 9402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9271,
											"end": 9402,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 9271,
											"end": 9402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9263,
											"end": 9402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9263,
											"end": 9402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8990,
											"end": 9409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8990,
											"end": 9409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8990,
											"end": 9409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8990,
											"end": 9409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9415,
											"end": 9595,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 9415,
											"end": 9595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9555,
											"end": 9587,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C792061646D696E2063616E206368616E67652074686520726174650000"
										},
										{
											"begin": 9551,
											"end": 9552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9543,
											"end": 9549,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9539,
											"end": 9553,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9532,
											"end": 9588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9415,
											"end": 9595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9415,
											"end": 9595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9601,
											"end": 9967,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 9601,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9743,
											"end": 9746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9764,
											"end": 9831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 9828,
											"end": 9830,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 9823,
											"end": 9826,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9764,
											"end": 9831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 9764,
											"end": 9831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9764,
											"end": 9831,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 9764,
											"end": 9831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9757,
											"end": 9831,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9757,
											"end": 9831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9840,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 9929,
											"end": 9932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9840,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 9840,
											"end": 9933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9840,
											"end": 9933,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 9840,
											"end": 9933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 9960,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9953,
											"end": 9956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 9961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9942,
											"end": 9961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9942,
											"end": 9961,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9601,
											"end": 9967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9601,
											"end": 9967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9601,
											"end": 9967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9601,
											"end": 9967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9973,
											"end": 10392,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 9973,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10139,
											"end": 10143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10177,
											"end": 10179,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10166,
											"end": 10175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10162,
											"end": 10180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10154,
											"end": 10180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10154,
											"end": 10180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10226,
											"end": 10235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10236,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10212,
											"end": 10213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10201,
											"end": 10210,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10197,
											"end": 10214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10190,
											"end": 10237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 10380,
											"end": 10384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 10254,
											"end": 10385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10385,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 10254,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10246,
											"end": 10385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10246,
											"end": 10385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9973,
											"end": 10392,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9973,
											"end": 10392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9973,
											"end": 10392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9973,
											"end": 10392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10840,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 10398,
											"end": 10840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10547,
											"end": 10551,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10585,
											"end": 10587,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10574,
											"end": 10583,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10562,
											"end": 10588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10562,
											"end": 10588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10598,
											"end": 10669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 10666,
											"end": 10667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10655,
											"end": 10664,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10651,
											"end": 10668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10642,
											"end": 10648,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10598,
											"end": 10669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 10598,
											"end": 10669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10598,
											"end": 10669,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 10598,
											"end": 10669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10679,
											"end": 10751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 10747,
											"end": 10749,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10736,
											"end": 10745,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10732,
											"end": 10750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10723,
											"end": 10729,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10679,
											"end": 10751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 10679,
											"end": 10751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10679,
											"end": 10751,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 10679,
											"end": 10751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10761,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 10829,
											"end": 10831,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10818,
											"end": 10827,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10814,
											"end": 10832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10805,
											"end": 10811,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10761,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 10761,
											"end": 10833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10761,
											"end": 10833,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 10761,
											"end": 10833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10840,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10840,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10846,
											"end": 11037,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 10846,
											"end": 11037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10886,
											"end": 10889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10905,
											"end": 10925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 10923,
											"end": 10924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10905,
											"end": 10925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 10905,
											"end": 10925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10905,
											"end": 10925,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 10905,
											"end": 10925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10900,
											"end": 10925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10900,
											"end": 10925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10939,
											"end": 10959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 10957,
											"end": 10958,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10939,
											"end": 10959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 10939,
											"end": 10959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10939,
											"end": 10959,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 10939,
											"end": 10959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10934,
											"end": 10959,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10934,
											"end": 10959,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10982,
											"end": 10983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10979,
											"end": 10980,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10975,
											"end": 10984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 10984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 10984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11003,
											"end": 11006,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11000,
											"end": 11001,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10997,
											"end": 11007,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10994,
											"end": 11030,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10994,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 10994,
											"end": 11030,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 11010,
											"end": 11028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 11010,
											"end": 11028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11028,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 11010,
											"end": 11028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10994,
											"end": 11030,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 10994,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10846,
											"end": 11037,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10846,
											"end": 11037,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10846,
											"end": 11037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10846,
											"end": 11037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10846,
											"end": 11037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Worapakorn_Coin0_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"admin()": "f851a440",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buy()": "a6f2ae3a",
							"decimals()": "313ce567",
							"exchangeRateForOneEther()": "02b6c5af",
							"name()": "06fdde03",
							"setExchangeRate(uint256)": "db068e0e",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"ExchangeRateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRateForOneEther\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"setExchangeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Worapakorn_Coin0_flattened.sol\":\"WorapakornToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Worapakorn_Coin0_flattened.sol\":{\"keccak256\":\"0x07ed308e8edb7f31b214ee859bb14637f82c924bac2c6cae34ed744b748b58d3\",\"urls\":[\"bzz-raw://d1029eea7f5abea6e98f95aa1e81f1dda117a15ae3f7a4e429570e0905599f20\",\"dweb:/ipfs/QmR4nRzEvMfbdPANXUSgD8XiwrcxVqjdg1JxWxy6YssrB5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 271,
								"contract": "contracts/Worapakorn_Coin0_flattened.sol:WorapakornToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 277,
								"contract": "contracts/Worapakorn_Coin0_flattened.sol:WorapakornToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 279,
								"contract": "contracts/Worapakorn_Coin0_flattened.sol:WorapakornToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 281,
								"contract": "contracts/Worapakorn_Coin0_flattened.sol:WorapakornToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 283,
								"contract": "contracts/Worapakorn_Coin0_flattened.sol:WorapakornToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 769,
								"contract": "contracts/Worapakorn_Coin0_flattened.sol:WorapakornToken",
								"label": "exchangeRateForOneEther",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 771,
								"contract": "contracts/Worapakorn_Coin0_flattened.sol:WorapakornToken",
								"label": "admin",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Worapakorn_Coin0_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Worapakorn_Coin0_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Worapakorn_Coin0_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/Worapakorn_Coin0_flattened.sol",
					"exportedSymbols": {
						"Context": [
							157
						],
						"ERC20": [
							763
						],
						"IERC1155Errors": [
							136
						],
						"IERC20": [
							234
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							257
						],
						"IERC721Errors": [
							89
						],
						"WorapakornToken": [
							893
						]
					},
					"id": 894,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "146:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "172:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "322:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "341:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "661:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "694:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "686:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "710:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "702:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:49:0"
									},
									"src": "655:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "741:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "904:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "931:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "923:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "922:16:0"
									},
									"src": "898:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "945:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1115:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1144:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1136:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1135:18:0"
									},
									"src": "1109:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1160:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1516:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1551:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1543:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1568:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1560:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1587:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1579:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1542:52:0"
									},
									"src": "1510:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1601:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1786:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1815:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1807:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1806:18:0"
									},
									"src": "1780:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1831:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2037:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2065:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2057:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2056:17:0"
									},
									"src": "2031:43:0"
								}
							],
							"scope": 894,
							"src": "312:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2078:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2230:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2250:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2480:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2507:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2499:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2498:15:0"
									},
									"src": "2474:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2520:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2663:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2694:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2686:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2685:17:0"
									},
									"src": "2657:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2709:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "3009:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3038:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3030:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3054:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3046:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3071:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3063:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3029:48:0"
									},
									"src": "3003:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3084:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3247:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3275:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3267:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3266:16:0"
									},
									"src": "3241:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3289:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3459:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3489:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3481:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3481:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3480:18:0"
									},
									"src": "3453:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3505:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3763:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3798:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3790:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3816:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3808:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3789:35:0"
									},
									"src": "3757:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3831:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "4016:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4046:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4038:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4037:18:0"
									},
									"src": "4010:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4062:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4270:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4300:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4292:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4292:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4291:18:0"
									},
									"src": "4264:46:0"
								}
							],
							"scope": 894,
							"src": "2220:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4314:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4468:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4489:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4861:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4896:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4888:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4912:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4904:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4929:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4921:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4945:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4937:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4887:66:0"
									},
									"src": "4855:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4960:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5123:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5152:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5144:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5144:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5143:16:0"
									},
									"src": "5117:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5166:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5336:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5367:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5359:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5359:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5358:18:0"
									},
									"src": "5330:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5383:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5650:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5687:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5679:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5705:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5697:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5678:33:0"
									},
									"src": "5644:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5718:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5903:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5934:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5926:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5925:18:0"
									},
									"src": "5897:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5950:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6158:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6189:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6181:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6180:18:0"
									},
									"src": "6152:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6205:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6496:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6530:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6522:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6549:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6541:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6521:41:0"
									},
									"src": "6490:73:0"
								}
							],
							"scope": 894,
							"src": "4458:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						},
						{
							"id": 137,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "6689:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 138,
								"nodeType": "StructuredDocumentation",
								"src": "6715:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 157,
							"linearizedBaseContracts": [
								157
							],
							"name": "Context",
							"nameLocation": "7230:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "7306:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 143,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7323:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7327:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7323:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 142,
												"id": 145,
												"nodeType": "Return",
												"src": "7316:17:0"
											}
										]
									},
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "7253:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7263:2:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "7297:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7297:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7296:9:0"
									},
									"scope": 157,
									"src": "7244:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "7413:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 152,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7430:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7434:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "7430:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 151,
												"id": 154,
												"nodeType": "Return",
												"src": "7423:15:0"
											}
										]
									},
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "7355:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7363:2:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "7397:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 149,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7397:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7396:16:0"
									},
									"scope": 157,
									"src": "7346:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 894,
							"src": "7212:235:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 158,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "7581:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 159,
								"nodeType": "StructuredDocumentation",
								"src": "7607:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 234,
							"linearizedBaseContracts": [
								234
							],
							"name": "IERC20",
							"nameLocation": "7688:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "7701:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 168,
									"name": "Transfer",
									"nameLocation": "7870:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7895:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "7879:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7879:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7917:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "7901:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7929:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "7921:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7878:57:0"
									},
									"src": "7864:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "7942:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 177,
									"name": "Approval",
									"nameLocation": "8101:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8126:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "8110:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8149:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "8133:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8133:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8166:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "8158:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8109:63:0"
									},
									"src": "8095:78:0"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "8179:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "8258:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8269:2:0"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "8295:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8294:9:0"
									},
									"scope": 234,
									"src": "8249:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "8310:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8395:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8413:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "8405:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8404:17:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "8445:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8444:9:0"
									},
									"scope": 234,
									"src": "8386:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "8460:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "8687:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8704:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "8696:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8716:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "8708:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8695:27:0"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "8741:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8741:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8740:6:0"
									},
									"scope": 234,
									"src": "8678:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "8753:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "9031:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9049:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "9041:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9064:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "9056:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9056:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9040:32:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "9096:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9095:9:0"
									},
									"scope": 234,
									"src": "9022:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "9111:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "9792:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9808:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "9800:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9800:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9825:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "9817:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9799:32:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "9850:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9850:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9849:6:0"
									},
									"scope": 234,
									"src": "9783:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "9862:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "10173:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10194:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "10186:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10186:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10208:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "10200:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10200:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10220:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "10212:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10185:41:0"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "10245:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10245:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10244:6:0"
									},
									"scope": 234,
									"src": "10164:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 894,
							"src": "7678:2575:0",
							"usedErrors": [],
							"usedEvents": [
								168,
								177
							]
						},
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "10425:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 237,
										"name": "IERC20",
										"nameLocations": [
											"10567:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 234,
										"src": "10567:6:0"
									},
									"id": 238,
									"nodeType": "InheritanceSpecifier",
									"src": "10567:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 236,
								"nodeType": "StructuredDocumentation",
								"src": "10452:86:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 257,
							"linearizedBaseContracts": [
								257,
								234
							],
							"name": "IERC20Metadata",
							"nameLocation": "10549:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "10580:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "10648:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10652:2:0"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "10678:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10678:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10677:15:0"
									},
									"scope": 257,
									"src": "10639:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "10699:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "10769:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10775:2:0"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "10801:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 247,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10801:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10800:15:0"
									},
									"scope": 257,
									"src": "10760:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "10822:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 256,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "10901:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10909:2:0"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "10935:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 253,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10935:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10934:7:0"
									},
									"scope": 257,
									"src": "10892:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 894,
							"src": "10539:405:0",
							"usedErrors": [],
							"usedEvents": [
								168,
								177
							]
						},
						{
							"id": 258,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11076:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 260,
										"name": "Context",
										"nameLocations": [
											"12186:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 157,
										"src": "12186:7:0"
									},
									"id": 261,
									"nodeType": "InheritanceSpecifier",
									"src": "12186:7:0"
								},
								{
									"baseName": {
										"id": 262,
										"name": "IERC20",
										"nameLocations": [
											"12195:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 234,
										"src": "12195:6:0"
									},
									"id": 263,
									"nodeType": "InheritanceSpecifier",
									"src": "12195:6:0"
								},
								{
									"baseName": {
										"id": 264,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12203:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 257,
										"src": "12203:14:0"
									},
									"id": 265,
									"nodeType": "InheritanceSpecifier",
									"src": "12203:14:0"
								},
								{
									"baseName": {
										"id": 266,
										"name": "IERC20Errors",
										"nameLocations": [
											"12219:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "12219:12:0"
									},
									"id": 267,
									"nodeType": "InheritanceSpecifier",
									"src": "12219:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 259,
								"nodeType": "StructuredDocumentation",
								"src": "11106:1052:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 763,
							"linearizedBaseContracts": [
								763,
								41,
								257,
								234,
								157
							],
							"name": "ERC20",
							"nameLocation": "12177:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 271,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12282:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "12238:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 270,
										"keyName": "account",
										"keyNameLocation": "12254:7:0",
										"keyType": {
											"id": 268,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12246:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12238:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 269,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12265:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 277,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12370:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "12298:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 276,
										"keyName": "account",
										"keyNameLocation": "12314:7:0",
										"keyType": {
											"id": 272,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12306:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12298:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 275,
											"keyName": "spender",
											"keyNameLocation": "12341:7:0",
											"keyType": {
												"id": 273,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12333:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12325:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 274,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12352:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12404:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "12388:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 278,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12388:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 281,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12438:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "12423:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 280,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12423:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 283,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12464:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "12449:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 282,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12449:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "12710:57:0",
										"statements": [
											{
												"expression": {
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 291,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "12720:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 292,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "12728:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12720:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "12720:13:0"
											},
											{
												"expression": {
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 295,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "12743:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 296,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "12753:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12743:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "12743:17:0"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "12478:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 300,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12680:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "12666:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 285,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12666:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12701:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "12687:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 287,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12687:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12665:44:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12710:0:0"
									},
									"scope": 763,
									"src": "12654:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										244
									],
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "12892:29:0",
										"statements": [
											{
												"expression": {
													"id": 306,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 281,
													"src": "12909:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 305,
												"id": 307,
												"nodeType": "Return",
												"src": "12902:12:0"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "12773:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12841:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12845:2:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "12877:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 303,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12877:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12876:15:0"
									},
									"scope": 763,
									"src": "12832:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										250
									],
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "13096:31:0",
										"statements": [
											{
												"expression": {
													"id": 315,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 283,
													"src": "13113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 314,
												"id": 316,
												"nodeType": "Return",
												"src": "13106:14:0"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "12927:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "13043:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13049:2:0"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "13081:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 312,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13081:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13080:15:0"
									},
									"scope": 763,
									"src": "13034:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										256
									],
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "13816:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13833:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 323,
												"id": 325,
												"nodeType": "Return",
												"src": "13826:9:0"
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "13133:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13769:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13777:2:0"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "13809:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 321,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13809:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13808:7:0"
									},
									"scope": 763,
									"src": "13760:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										183
									],
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "13963:36:0",
										"statements": [
											{
												"expression": {
													"id": 333,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 279,
													"src": "13980:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "13973:19:0"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "13848:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13911:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13922:2:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "13954:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13954:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13953:9:0"
									},
									"scope": 763,
									"src": "13902:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										191
									],
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "14131:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 344,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "14148:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 346,
													"indexExpression": {
														"id": 345,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "14158:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14148:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 343,
												"id": 347,
												"nodeType": "Return",
												"src": "14141:25:0"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "14005:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "14066:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14084:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "14076:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14076:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14075:17:0"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "14122:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14121:9:0"
									},
									"scope": 763,
									"src": "14057:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										201
									],
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "14443:103:0",
										"statements": [
											{
												"assignments": [
													360
												],
												"declarations": [
													{
														"constant": false,
														"id": 360,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14461:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 372,
														"src": "14453:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 359,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14453:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 363,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 361,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "14469:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14469:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14453:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 365,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14501:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 366,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "14508:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 367,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "14512:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "14491:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14491:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "14491:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14535:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 358,
												"id": 371,
												"nodeType": "Return",
												"src": "14528:11:0"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "14179:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14377:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14394:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "14386:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14406:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "14398:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14385:27:0"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "14437:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14437:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14436:6:0"
									},
									"scope": 763,
									"src": "14368:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										211
									],
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "14693:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 383,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "14710:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 385,
														"indexExpression": {
															"id": 384,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "14722:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14710:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 387,
													"indexExpression": {
														"id": 386,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "14729:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14710:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 382,
												"id": 388,
												"nodeType": "Return",
												"src": "14703:34:0"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "14552:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14613:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14631:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "14623:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14623:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14646:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "14638:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14622:32:0"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "14684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14683:9:0"
									},
									"scope": 763,
									"src": "14604:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										221
									],
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "15130:107:0",
										"statements": [
											{
												"assignments": [
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "15148:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 413,
														"src": "15140:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 400,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15140:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 404,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 402,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "15156:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15156:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15140:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 406,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "15187:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 407,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "15194:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 408,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "15203:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 405,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															654,
															714
														],
														"referencedDeclaration": 654,
														"src": "15178:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15178:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "15178:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15226:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 399,
												"id": 412,
												"nodeType": "Return",
												"src": "15219:11:0"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "14750:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "15060:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15076:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "15068:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15068:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15093:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "15085:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15085:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15067:32:0"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "15124:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15124:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15123:6:0"
									},
									"scope": 763,
									"src": "15051:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										233
									],
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "15890:151:0",
										"statements": [
											{
												"assignments": [
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "15908:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "15900:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 426,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15900:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 430,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 428,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "15918:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15918:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15900:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 432,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "15956:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 433,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "15962:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 434,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "15971:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 431,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "15940:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15940:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "15940:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 438,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "15997:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 439,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "16003:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 440,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "16007:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 437,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "15987:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15987:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "15987:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16030:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 425,
												"id": 444,
												"nodeType": "Return",
												"src": "16023:11:0"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "15243:549:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15806:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15827:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "15819:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15819:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15841:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "15833:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15833:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15853:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "15845:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15845:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15818:41:0"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "15884:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 423,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15884:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15883:6:0"
									},
									"scope": 763,
									"src": "15797:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "16483:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 456,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "16497:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16513:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16505:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 457,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16505:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16505:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16497:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 470,
												"nodeType": "IfStatement",
												"src": "16493:86:0",
												"trueBody": {
													"id": 469,
													"nodeType": "Block",
													"src": "16517:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16565:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16557:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 463,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16557:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16557:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 462,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "16538:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16538:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 468,
															"nodeType": "RevertStatement",
															"src": "16531:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 471,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "16592:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16606:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16598:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 472,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16598:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16598:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16592:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 485,
												"nodeType": "IfStatement",
												"src": "16588:86:0",
												"trueBody": {
													"id": 484,
													"nodeType": "Block",
													"src": "16610:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 480,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16660:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16652:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 478,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16652:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16652:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 477,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "16631:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16631:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 483,
															"nodeType": "RevertStatement",
															"src": "16624:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 487,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "16691:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 488,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "16697:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 489,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "16701:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 486,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "16683:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16683:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "16683:24:0"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "16047:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16423:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16441:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "16433:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16433:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16455:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "16447:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16467:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "16459:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16432:41:0"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16483:0:0"
									},
									"scope": 763,
									"src": "16414:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "17104:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 503,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "17118:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17134:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17126:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 504,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17126:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17126:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17118:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 540,
													"nodeType": "Block",
													"src": "17292:362:0",
													"statements": [
														{
															"assignments": [
																515
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 515,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17314:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 540,
																	"src": "17306:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 514,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17306:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 519,
															"initialValue": {
																"baseExpression": {
																	"id": 516,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 271,
																	"src": "17328:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 518,
																"indexExpression": {
																	"id": 517,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 496,
																	"src": "17338:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17328:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17306:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 520,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "17361:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 521,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 500,
																	"src": "17375:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17361:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 530,
															"nodeType": "IfStatement",
															"src": "17357:115:0",
															"trueBody": {
																"id": 529,
																"nodeType": "Block",
																"src": "17382:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 524,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 496,
																					"src": "17432:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 525,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 515,
																					"src": "17438:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 526,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 500,
																					"src": "17451:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 523,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "17407:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17407:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 528,
																		"nodeType": "RevertStatement",
																		"src": "17400:57:0"
																	}
																]
															}
														},
														{
															"id": 539,
															"nodeType": "UncheckedBlock",
															"src": "17485:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 531,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 271,
																				"src": "17592:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 533,
																			"indexExpression": {
																				"id": 532,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 496,
																				"src": "17602:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17592:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 534,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "17610:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 535,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 500,
																				"src": "17624:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17610:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17592:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 538,
																	"nodeType": "ExpressionStatement",
																	"src": "17592:37:0"
																}
															]
														}
													]
												},
												"id": 541,
												"nodeType": "IfStatement",
												"src": "17114:540:0",
												"trueBody": {
													"id": 513,
													"nodeType": "Block",
													"src": "17138:148:0",
													"statements": [
														{
															"expression": {
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 509,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17254:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 510,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 500,
																	"src": "17270:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17254:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 512,
															"nodeType": "ExpressionStatement",
															"src": "17254:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 542,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "17668:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17682:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17674:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 543,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17674:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17674:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17668:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "17883:206:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "17897:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 554,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 271,
																				"src": "18042:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 556,
																			"indexExpression": {
																				"id": 555,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 498,
																				"src": "18052:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "18042:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 500,
																			"src": "18059:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18042:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "18042:22:0"
																}
															]
														}
													]
												},
												"id": 562,
												"nodeType": "IfStatement",
												"src": "17664:425:0",
												"trueBody": {
													"id": 553,
													"nodeType": "Block",
													"src": "17686:191:0",
													"statements": [
														{
															"id": 552,
															"nodeType": "UncheckedBlock",
															"src": "17700:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 548,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 279,
																			"src": "17831:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 549,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 500,
																			"src": "17847:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17831:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 551,
																	"nodeType": "ExpressionStatement",
																	"src": "17831:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 564,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "18113:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "18119:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "18123:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 563,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "18104:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18104:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "EmitStatement",
												"src": "18099:30:0"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "16720:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "17038:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17054:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "17046:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17046:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17068:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "17060:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17080:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "17072:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17072:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17045:41:0"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17104:0:0"
									},
									"scope": 763,
									"src": "17029:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "18535:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "18549:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18568:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18560:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18560:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18560:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18549:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 592,
												"nodeType": "IfStatement",
												"src": "18545:91:0",
												"trueBody": {
													"id": 591,
													"nodeType": "Block",
													"src": "18572:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 587,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18622:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18614:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 585,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18614:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18614:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 584,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "18593:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18593:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 590,
															"nodeType": "RevertStatement",
															"src": "18586:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18661:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18653:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 594,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18653:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18653:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "18665:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 599,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "18674:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 593,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "18645:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18645:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "18645:35:0"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "18142:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18488:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18502:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "18494:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18494:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18519:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "18511:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18493:32:0"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18535:0:0"
									},
									"scope": 763,
									"src": "18479:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "19061:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 611,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "19075:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19094:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19086:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 612,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19086:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19086:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19075:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 625,
												"nodeType": "IfStatement",
												"src": "19071:89:0",
												"trueBody": {
													"id": 624,
													"nodeType": "Block",
													"src": "19098:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 620,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19146:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 619,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19138:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 618,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19138:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19138:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 617,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "19119:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19119:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 623,
															"nodeType": "RevertStatement",
															"src": "19112:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 627,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "19177:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19194:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19186:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 628,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19186:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19186:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "19198:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 626,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "19169:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19169:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "19169:35:0"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "18693:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "19014:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19028:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "19020:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19020:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19045:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "19037:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19037:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19019:32:0"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19061:0:0"
									},
									"scope": 763,
									"src": "19005:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "19821:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 647,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "19840:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "19847:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "19856:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19863:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 646,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															654,
															714
														],
														"referencedDeclaration": 714,
														"src": "19831:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19831:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "19831:37:0"
											}
										]
									},
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "19217:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19756:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19773:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "19765:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19788:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "19780:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19780:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19805:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "19797:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19764:47:0"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19821:0:0"
									},
									"scope": 763,
									"src": "19747:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "20805:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 666,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "20819:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20836:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20828:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 667,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20828:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20828:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20819:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 680,
												"nodeType": "IfStatement",
												"src": "20815:89:0",
												"trueBody": {
													"id": 679,
													"nodeType": "Block",
													"src": "20840:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 675,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20890:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20882:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 673,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20882:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20882:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 672,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "20861:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20861:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 678,
															"nodeType": "RevertStatement",
															"src": "20854:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 681,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "20917:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20936:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20928:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 682,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20928:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20928:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20917:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 695,
												"nodeType": "IfStatement",
												"src": "20913:90:0",
												"trueBody": {
													"id": 694,
													"nodeType": "Block",
													"src": "20940:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20989:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20981:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 688,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20981:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20981:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 687,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "20961:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20961:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 693,
															"nodeType": "RevertStatement",
															"src": "20954:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 696,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "21012:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 699,
															"indexExpression": {
																"id": 697,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 657,
																"src": "21024:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21012:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 700,
														"indexExpression": {
															"id": 698,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "21031:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21012:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 701,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "21042:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21012:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "21012:35:0"
											},
											{
												"condition": {
													"id": 704,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 663,
													"src": "21061:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 712,
												"nodeType": "IfStatement",
												"src": "21057:76:0",
												"trueBody": {
													"id": 711,
													"nodeType": "Block",
													"src": "21072:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 706,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "21100:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 707,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "21107:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 708,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "21116:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 705,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "21091:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21091:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 710,
															"nodeType": "EmitStatement",
															"src": "21086:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "19881:821:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20716:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20733:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "20725:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20748:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "20740:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20740:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20765:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "20757:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20757:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20777:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "20772:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 662,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20772:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20724:63:0"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20805:0:0"
									},
									"scope": 763,
									"src": "20707:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "21510:388:0",
										"statements": [
											{
												"assignments": [
													725
												],
												"declarations": [
													{
														"constant": false,
														"id": 725,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21528:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "21520:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 724,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 730,
												"initialValue": {
													"arguments": [
														{
															"id": 727,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "21557:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 728,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "21564:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 726,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "21547:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21547:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21520:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 731,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "21586:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21611:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 733,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21611:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 732,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21606:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21606:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21620:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21606:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21586:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 760,
												"nodeType": "IfStatement",
												"src": "21582:310:0",
												"trueBody": {
													"id": 759,
													"nodeType": "Block",
													"src": "21625:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 738,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "21643:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 739,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 721,
																	"src": "21662:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21643:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 748,
															"nodeType": "IfStatement",
															"src": "21639:130:0",
															"trueBody": {
																"id": 747,
																"nodeType": "Block",
																"src": "21669:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 742,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 719,
																					"src": "21721:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 743,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 725,
																					"src": "21730:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 744,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 721,
																					"src": "21748:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 741,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "21694:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21694:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 746,
																		"nodeType": "RevertStatement",
																		"src": "21687:67:0"
																	}
																]
															}
														},
														{
															"id": 758,
															"nodeType": "UncheckedBlock",
															"src": "21782:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 750,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 717,
																				"src": "21819:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 751,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 719,
																				"src": "21826:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 754,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 752,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 725,
																					"src": "21835:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 753,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 721,
																					"src": "21854:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21835:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 755,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21861:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 749,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				654,
																				714
																			],
																			"referencedDeclaration": 714,
																			"src": "21810:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21810:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 757,
																	"nodeType": "ExpressionStatement",
																	"src": "21810:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "21145:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21430:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "21446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21446:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21469:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "21461:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21486:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "21478:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21445:47:0"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21510:0:0"
									},
									"scope": 763,
									"src": "21421:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 894,
							"src": "12159:9741:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								168,
								177
							]
						},
						{
							"id": 764,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "21943:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 765,
										"name": "ERC20",
										"nameLocations": [
											"21998:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 763,
										"src": "21998:5:0"
									},
									"id": 766,
									"nodeType": "InheritanceSpecifier",
									"src": "21998:5:0"
								}
							],
							"canonicalName": "WorapakornToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 893,
							"linearizedBaseContracts": [
								893,
								763,
								41,
								257,
								234,
								157
							],
							"name": "WorapakornToken",
							"nameLocation": "21979:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "02b6c5af",
									"id": 769,
									"mutability": "mutable",
									"name": "exchangeRateForOneEther",
									"nameLocation": "22022:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 893,
									"src": "22010:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 767,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "22010:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 768,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "22048:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 771,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "22071:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 893,
									"src": "22056:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 770,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22056:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "e3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e",
									"id": 777,
									"name": "Buy",
									"nameLocation": "22089:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22109:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "22093:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22093:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "22120:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "22115:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "22115:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22092:35:0"
									},
									"src": "22083:45:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8bc87b062b954eccd7f9017a070917f40c9c40af9ff4b41ed4f52a6a37199276",
									"id": 781,
									"name": "ExchangeRateChanged",
									"nameLocation": "22139:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"indexed": false,
												"mutability": "mutable",
												"name": "newRate",
												"nameLocation": "22164:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "22159:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "22159:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22158:14:0"
									},
									"src": "22133:40:0"
								},
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "22225:94:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 791,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "22249:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_WorapakornToken_$893",
																		"typeString": "contract WorapakornToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_WorapakornToken_$893",
																		"typeString": "contract WorapakornToken"
																	}
																],
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22241:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 789,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22241:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22241:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3930303030303030",
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22256:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_90000000_by_1",
																	"typeString": "int_const 90000000"
																},
																"value": "90000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22267:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 795,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "22273:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22273:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "22267:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22256:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 788,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "22235:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22235:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "22235:49:0"
											},
											{
												"expression": {
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 801,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "22294:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 802,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "22302:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "22306:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "22302:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22294:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "22294:18:0"
											}
										]
									},
									"id": 807,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "576f726170616b6f726e546f6b656e",
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22199:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2c7de69bbe92cb83b8d64e1413a59ac318df70d83a4d33668d6c0e2ed70f10d4",
														"typeString": "literal_string \"WorapakornToken\""
													},
													"value": "WorapakornToken"
												},
												{
													"hexValue": "574b54",
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22218:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_fb1949b2de6534805893650d3d7c47a2f786e302317e4583ff0bd9b6f9f3f0b4",
														"typeString": "literal_string \"WKT\""
													},
													"value": "WKT"
												}
											],
											"id": 786,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 783,
												"name": "ERC20",
												"nameLocations": [
													"22193:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 763,
												"src": "22193:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22193:31:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22190:2:0"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22225:0:0"
									},
									"scope": 893,
									"src": "22179:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "22355:260:0",
										"statements": [
											{
												"assignments": [
													811
												],
												"declarations": [
													{
														"constant": false,
														"id": 811,
														"mutability": "mutable",
														"name": "tokenReceived",
														"nameLocation": "22370:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 845,
														"src": "22365:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 810,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "22365:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 816,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 812,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "22386:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "22390:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "22386:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 814,
														"name": "exchangeRateForOneEther",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "22398:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22386:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22365:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 818,
																"name": "tokenReceived",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "22439:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 822,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "22474:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_WorapakornToken_$893",
																					"typeString": "contract WorapakornToken"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_WorapakornToken_$893",
																					"typeString": "contract WorapakornToken"
																				}
																			],
																			"id": 821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "22466:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 820,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "22466:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22466:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 819,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "22456:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22456:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22439:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820746f6b656e73",
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22482:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
																"typeString": "literal_string \"Not enough tokens\""
															},
															"value": "Not enough tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
																"typeString": "literal_string \"Not enough tokens\""
															}
														],
														"id": 817,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22431:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22431:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "22431:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 832,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "22530:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_WorapakornToken_$893",
																		"typeString": "contract WorapakornToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_WorapakornToken_$893",
																		"typeString": "contract WorapakornToken"
																	}
																],
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22522:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 830,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22522:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22522:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 834,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "22537:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "22541:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "22537:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 836,
															"name": "tokenReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "22549:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 829,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "22512:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22512:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "22512:51:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 840,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "22582:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "22586:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "22582:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 842,
															"name": "tokenReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "22594:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 839,
														"name": "Buy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "22578:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22578:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 844,
												"nodeType": "EmitStatement",
												"src": "22573:35:0"
											}
										]
									},
									"functionSelector": "a6f2ae3a",
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "22334:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22337:2:0"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22355:0:0"
									},
									"scope": 893,
									"src": "22325:290:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "22667:165:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 852,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "22685:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "22689:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "22685:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 854,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "22699:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "22685:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e2063616e206368616e6765207468652072617465",
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22706:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_972fbfa1ab705252aafd96b27fcf7b5a6c24910c764d6d12e44b19430bc96b03",
																"typeString": "literal_string \"Only admin can change the rate\""
															},
															"value": "Only admin can change the rate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_972fbfa1ab705252aafd96b27fcf7b5a6c24910c764d6d12e44b19430bc96b03",
																"typeString": "literal_string \"Only admin can change the rate\""
															}
														],
														"id": 851,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22677:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22677:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "22677:62:0"
											},
											{
												"expression": {
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 859,
														"name": "exchangeRateForOneEther",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "22749:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 860,
														"name": "newRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "22775:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22749:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "22749:33:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 864,
															"name": "newRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "22817:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 863,
														"name": "ExchangeRateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "22797:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22797:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "EmitStatement",
												"src": "22792:33:0"
											}
										]
									},
									"functionSelector": "db068e0e",
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setExchangeRate",
									"nameLocation": "22630:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "newRate",
												"nameLocation": "22651:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "22646:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "22646:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22645:14:0"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22667:0:0"
									},
									"scope": 893,
									"src": "22621:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "22865:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 872,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "22883:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "22887:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "22883:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 874,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "22897:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "22883:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e2063616e207769746864726177",
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22904:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f10257f08d816bc8f48d4eaea80001c132074cc09321d652527afabb4d0b030",
																"typeString": "literal_string \"Only admin can withdraw\""
															},
															"value": "Only admin can withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f10257f08d816bc8f48d4eaea80001c132074cc09321d652527afabb4d0b030",
																"typeString": "literal_string \"Only admin can withdraw\""
															}
														],
														"id": 871,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22875:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22875:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "22875:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 886,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "22972:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_WorapakornToken_$893",
																			"typeString": "contract WorapakornToken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_WorapakornToken_$893",
																			"typeString": "contract WorapakornToken"
																		}
																	],
																	"id": 885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22964:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 884,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "22964:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22964:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "22978:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "22964:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 881,
																	"name": "admin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "22948:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22940:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 879,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22940:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22940:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "22955:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "22940:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22940:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "22940:46:0"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "22847:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22855:2:0"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22865:0:0"
									},
									"scope": 893,
									"src": "22838:155:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 894,
							"src": "21970:1025:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								168,
								177,
								777,
								781
							]
						}
					],
					"src": "146:22850:0"
				},
				"id": 0
			}
		}
	}
}