{
	"id": "f9f1843d2ca02dbb0b675431bc0c5770",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/WOJAToken3.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\";\r\n\r\ncontract WOJA_Hero is ERC1155 {\r\n    constructor() ERC1155(\"https://raw.githubusercontent.com/WorapakornJarusiriphot/My_NFT_Workshop/main/WOJA_Hero.json\")     \r\n    {\r\n        _mint(msg.sender, 1, 10, \"\");\r\n    }\r\n}"
			},
			"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155Receiver} from \"./IERC1155Receiver.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/Arrays.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts@5.0.0/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts@5.0.0/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 178,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 184,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 186,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts@5.0.0/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/Arrays.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":276:4802  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":276:4802  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201bad52cf3edf53198dd56a531549c4e00cd70e46469fd04a1e1077be361b9d0e64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201bad52cf3edf53198dd56a531549c4e00cd70e46469fd04a1e1077be361b9d0e64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xAD MSTORE 0xCF RETURNDATACOPY 0xDF MSTORE8 NOT DUP14 0xD5 PUSH11 0x531549C4E00CD70E46469F 0xD0 0x4A 0x1E LT PUSH24 0xBE361B9D0E64736F6C634300081600330000000000000000 ",
							"sourceMap": "276:4526:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201bad52cf3edf53198dd56a531549c4e00cd70e46469fd04a1e1077be361b9d0e64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xAD MSTORE 0xCF RETURNDATACOPY 0xDF MSTORE8 NOT DUP14 0xD5 PUSH11 0x531549C4E00CD70E46469F 0xD0 0x4A 0x1E LT PUSH24 0xBE361B9D0E64736F6C634300081600330000000000000000 ",
							"sourceMap": "276:4526:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite",
								"unsafeMemoryAccess(address[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(uint256[] memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201bad52cf3edf53198dd56a531549c4e00cd70e46469fd04a1e1077be361b9d0e64736f6c63430008160033",
									".code": [
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts@5.0.0/utils/Arrays.sol",
								"@openzeppelin/contracts@5.0.0/utils/Context.sol",
								"@openzeppelin/contracts@5.0.0/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/math/Math.sol",
								"contracts/WOJAToken3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts@5.0.0/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.0/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.0/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a098be97ee7d2eed4974ca0453ef2812a610b1aec8c0a2d19d6305cb446554af64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a098be97ee7d2eed4974ca0453ef2812a610b1aec8c0a2d19d6305cb446554af64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 SWAP9 0xBE SWAP8 0xEE PUSH30 0x2EED4974CA0453EF2812A610B1AEC8C0A2D19D6305CB446554AF64736F6C PUSH4 0x43000816 STOP CALLER ",
							"sourceMap": "1245:2685:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a098be97ee7d2eed4974ca0453ef2812a610b1aec8c0a2d19d6305cb446554af64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 SWAP9 0xBE SWAP8 0xEE PUSH30 0x2EED4974CA0453EF2812A610B1AEC8C0A2D19D6305CB446554AF64736F6C PUSH4 0x43000816 STOP CALLER ",
							"sourceMap": "1245:2685:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a098be97ee7d2eed4974ca0453ef2812a610b1aec8c0a2d19d6305cb446554af64736f6c63430008160033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts@5.0.0/utils/Arrays.sol",
								"@openzeppelin/contracts@5.0.0/utils/Context.sol",
								"@openzeppelin/contracts@5.0.0/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/math/Math.sol",
								"contracts/WOJAToken3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e8950e848d043e5126a5d792f0c1c2600b514b6d947a0dcfe7aea70cad55262b64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e8950e848d043e5126a5d792f0c1c2600b514b6d947a0dcfe7aea70cad55262b64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 SWAP6 0xE DUP5 DUP14 DIV RETURNDATACOPY MLOAD 0x26 0xA5 0xD7 SWAP3 CREATE 0xC1 0xC2 PUSH1 0xB MLOAD 0x4B PUSH14 0x947A0DCFE7AEA70CAD55262B6473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "203:14914:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e8950e848d043e5126a5d792f0c1c2600b514b6d947a0dcfe7aea70cad55262b64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 SWAP6 0xE DUP5 DUP14 DIV RETURNDATACOPY MLOAD 0x26 0xA5 0xD7 SWAP3 CREATE 0xC1 0xC2 PUSH1 0xB MLOAD 0x4B PUSH14 0x947A0DCFE7AEA70CAD55262B6473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "203:14914:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e8950e848d043e5126a5d792f0c1c2600b514b6d947a0dcfe7aea70cad55262b64736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts@5.0.0/utils/Arrays.sol",
								"@openzeppelin/contracts@5.0.0/utils/Context.sol",
								"@openzeppelin/contracts@5.0.0/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/math/Math.sol",
								"contracts/WOJAToken3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/WOJAToken3.sol": {
				"WOJA_Hero": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/WOJAToken3.sol\":130:345  contract WOJA_Hero is ERC1155 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/WOJAToken3.sol\":167:342  constructor() ERC1155(\"https://raw.githubusercontent.com/WorapakornJarusiriphot/My_NFT_Workshop/main/WOJA_Hero.json\")     ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0x80\n  add\n  0x40\n  mstore\n  dup1\n  0x5c\n  dup2\n  mstore\n  0x20\n  add\n  data_99c456ce8103a063eadde2fefd34e0c93694ee0875780c5d3728db26ca2aaf27\n  0x5c\n  swap2\n  codecopy\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  tag_5\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1301:1305  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1293:1300  _setURI */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  pop\n    /* \"contracts/WOJAToken3.sol\":306:334  _mint(msg.sender, 1, 10, \"\") */\n  tag_8\n    /* \"contracts/WOJAToken3.sol\":312:322  msg.sender */\n  caller\n    /* \"contracts/WOJAToken3.sol\":324:325  1 */\n  0x01\n    /* \"contracts/WOJAToken3.sol\":327:329  10 */\n  0x0a\n    /* \"contracts/WOJAToken3.sol\":306:334  _mint(msg.sender, 1, 10, \"\") */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"contracts/WOJAToken3.sol\":306:311  _mint */\n  shl(0x20, tag_9)\n    /* \"contracts/WOJAToken3.sol\":306:334  _mint(msg.sender, 1, 10, \"\") */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/WOJAToken3.sol\":130:345  contract WOJA_Hero is ERC1155 {... */\n  jump(tag_10)\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\ntag_6:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":10355:10361  newuri */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n  0x02\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\ntag_9:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":10856:10857  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":10842:10844  to */\n  dup5\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n  tag_15\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":10912:10913  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":10881:10915  ERC1155InvalidReceiver(address(0)) */\n  mload(0x40)\n  0x57f447ce00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\ntag_15:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":10936:10956  uint256[] memory ids */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":10958:10981  uint256[] memory values */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n  tag_18\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":11004:11006  id */\n  dup6\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":11008:11013  value */\n  dup6\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":10985:11003  _asSingletonArrays */\n  shl(0x20, tag_19)\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":10935:11014  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n  swap2\n  pop\n  swap2\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n  tag_20\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":11059:11060  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":11063:11065  to */\n  dup8\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":11067:11070  ids */\n  dup5\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":11072:11078  values */\n  dup5\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":11080:11084  data */\n  dup8\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":11024:11050  _updateWithAcceptanceCheck */\n  shl(0x20, tag_21)\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":10828:11092  {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\ntag_19:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16188:16211  uint256[] memory array1 */\n  0x60\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16213:16236  uint256[] memory array2 */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16374:16378  0x40 */\n  0x40\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n  mload\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16358:16379  array1 := mload(0x40) */\n  swap2\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16444:16445  1 */\n  0x01\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16436:16442  array1 */\n  dup3\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16429:16446  mstore(array1, 1) */\n  mstore\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16582:16590  element1 */\n  dup4\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16575:16579  0x20 */\n  0x20\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16567:16573  array1 */\n  dup4\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16563:16580  add(array1, 0x20) */\n  add\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16556:16591  mstore(add(array1, 0x20), element1) */\n  mstore\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16704:16708  0x40 */\n  0x40\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16696:16702  array1 */\n  dup3\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n  add\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16682:16709  array2 := add(array1, 0x40) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16737:16738  1 */\n  0x01\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16729:16735  array2 */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16722:16739  mstore(array2, 1) */\n  mstore\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16778:16786  element2 */\n  dup3\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16771:16775  0x20 */\n  0x20\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16763:16769  array2 */\n  dup3\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16759:16776  add(array2, 0x20) */\n  add\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16752:16787  mstore(add(array2, 0x20), element2) */\n  mstore\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16907:16911  0x40 */\n  0x40\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16899:16905  array2 */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16895:16912  add(array2, 0x40) */\n  add\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16889:16893  0x40 */\n  0x40\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16882:16913  mstore(0x40, add(array2, 0x40)) */\n  mstore\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\ntag_21:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n  tag_24\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7213:7217  from */\n  dup6\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7219:7221  to */\n  dup6\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7223:7226  ids */\n  dup6\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7228:7234  values */\n  dup6\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7205:7212  _update */\n  shl(0x20, tag_25)\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7263:7264  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7249:7251  to */\n  dup5\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n  tag_26\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7281:7297  address operator */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n  tag_27\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7300:7310  _msgSender */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7281:7312  address operator = _msgSender() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7344:7345  1 */\n  0x01\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7330:7333  ids */\n  dup5\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7330:7340  ids.length */\n  mload\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7330:7345  ids.length == 1 */\n  sub\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n  tag_29\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7365:7375  uint256 id */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n  tag_30\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7401:7402  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7378:7381  ids */\n  dup7\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7378:7400  ids.unsafeMemoryAccess */\n  shl(0x20, tag_31)\n  swap1\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7365:7403  uint256 id = ids.unsafeMemoryAccess(0) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7421:7434  uint256 value */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n  tag_32\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7463:7464  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7437:7443  values */\n  dup7\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7437:7462  values.unsafeMemoryAccess */\n  shl(0x20, tag_31)\n  swap1\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7421:7465  uint256 value = values.unsafeMemoryAccess(0) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n  tag_33\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7514:7522  operator */\n  dup4\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7524:7528  from */\n  dup10\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7530:7532  to */\n  dup10\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7534:7536  id */\n  dup6\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7538:7543  value */\n  dup6\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7545:7549  data */\n  dup10\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7483:7513  _doSafeTransferAcceptanceCheck */\n  shl(0x20, tag_34)\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n  0x20\n  shr\n  jump\t// in\ntag_33:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7347:7565  {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n  jump(tag_35)\ntag_29:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n  tag_36\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7625:7633  operator */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7635:7639  from */\n  dup8\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7641:7643  to */\n  dup8\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7645:7648  ids */\n  dup8\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7650:7656  values */\n  dup8\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7658:7662  data */\n  dup8\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7589:7624  _doSafeBatchTransferAcceptanceCheck */\n  shl(0x20, tag_37)\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n  0x20\n  shr\n  jump\t// in\ntag_36:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\ntag_35:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7267:7688  {... */\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\ntag_26:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\ntag_25:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5279:5285  values */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5279:5292  values.length */\n  mload\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5265:5268  ids */\n  dup3\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5265:5275  ids.length */\n  mload\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5265:5292  ids.length != values.length */\n  eq\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n  tag_39\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5341:5344  ids */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5341:5351  ids.length */\n  mload\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5353:5359  values */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5353:5366  values.length */\n  mload\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5315:5367  ERC1155InvalidArrayLength(ids.length, values.length) */\n  mload(0x40)\n  0x5b05999100000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_40\n  swap3\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\ntag_39:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5388:5404  address operator */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n  tag_42\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5407:5417  _msgSender */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_42:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5388:5419  address operator = _msgSender() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5435:5444  uint256 i */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\ntag_43:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5454:5457  ids */\n  dup4\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5454:5464  ids.length */\n  mload\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5450:5451  i */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5450:5464  i < ids.length */\n  lt\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n  iszero\n  tag_44\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5485:5495  uint256 id */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n  tag_46\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5521:5522  i */\n  dup3\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5498:5501  ids */\n  dup7\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5498:5520  ids.unsafeMemoryAccess */\n  shl(0x20, tag_31)\n  swap1\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_46:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5485:5523  uint256 id = ids.unsafeMemoryAccess(i) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5537:5550  uint256 value */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n  tag_47\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5579:5580  i */\n  dup4\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5553:5559  values */\n  dup7\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5553:5578  values.unsafeMemoryAccess */\n  shl(0x20, tag_31)\n  swap1\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_47:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5537:5581  uint256 value = values.unsafeMemoryAccess(i) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5616:5617  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5600:5604  from */\n  dup9\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n  tag_48\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5638:5657  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5670:5672  id */\n  dup5\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5674:5678  from */\n  dup11\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5638:5679  uint256 fromBalance = _balances[id][from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5715:5720  value */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5701:5712  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5701:5720  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n  iszero\n  tag_49\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5778:5782  from */\n  dup9\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5784:5795  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5797:5802  value */\n  dup4\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5804:5806  id */\n  dup6\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n  mload(0x40)\n  0x03dee4c500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_50\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_51\n  jump\t// in\ntag_50:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\ntag_49:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5978:5983  value */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5964:5975  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5964:5983  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5942:5951  _balances */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5952:5954  id */\n  dup6\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5956:5960  from */\n  dup12\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5942:5983  _balances[id][from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5620:6016  {... */\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\ntag_48:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6048:6049  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6034:6036  to */\n  dup8\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n  tag_52\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6091:6096  value */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6070:6079  _balances */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6080:6082  id */\n  dup5\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6084:6086  to */\n  dup10\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n  dup3\n  dup3\n  sload\n  tag_53\n  swap2\n  swap1\n  tag_54\n  jump\t// in\ntag_53:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\ntag_52:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5471:6121  {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5466:5469  ++i */\n  dup1\n  0x01\n  add\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n  jump(tag_43)\ntag_44:\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6149:6150  1 */\n  0x01\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6135:6138  ids */\n  dup4\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6135:6145  ids.length */\n  mload\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6135:6150  ids.length == 1 */\n  sub\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n  tag_55\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6166:6176  uint256 id */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n  tag_56\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6202:6203  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6179:6182  ids */\n  dup6\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6179:6201  ids.unsafeMemoryAccess */\n  shl(0x20, tag_31)\n  swap1\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_56:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6166:6204  uint256 id = ids.unsafeMemoryAccess(0) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6218:6231  uint256 value */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n  tag_57\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6260:6261  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6234:6240  values */\n  dup6\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6234:6259  values.unsafeMemoryAccess */\n  shl(0x20, tag_31)\n  swap1\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_57:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6218:6262  uint256 value = values.unsafeMemoryAccess(0) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6312:6314  to */\n  dup6\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6306:6310  from */\n  dup8\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6296:6304  operator */\n  dup5\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6316:6318  id */\n  dup6\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6320:6325  value */\n  dup6\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n  mload(0x40)\n  tag_58\n  swap3\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_58:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6152:6337  {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n  jump(tag_59)\ntag_55:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6392:6394  to */\n  dup4\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6386:6390  from */\n  dup6\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6376:6384  operator */\n  dup3\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6396:6399  ids */\n  dup7\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6401:6407  values */\n  dup7\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n  mload(0x40)\n  tag_60\n  swap3\n  swap2\n  swap1\n  tag_61\n  jump\t// in\ntag_60:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\ntag_59:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5251:6425  {... */\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_28:\n    /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\ntag_31:\n    /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4290:4301  uint256 res */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4378:4382  0x20 */\n  0x20\n    /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4373:4376  pos */\n  dup3\n    /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4369:4383  mul(pos, 0x20) */\n  mul\n    /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4362:4366  0x20 */\n  0x20\n    /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4357:4360  arr */\n  dup5\n    /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4353:4367  add(arr, 0x20) */\n  add\n    /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4349:4384  add(add(arr, 0x20), mul(pos, 0x20)) */\n  add\n    /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4343:4385  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n  mload\n    /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4336:4385  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\ntag_34:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13984:13985  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13967:13969  to */\n  dup5\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13967:13981  to.code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13967:13985  to.code.length > 0 */\n  gt\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n  iszero\n  tag_65\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14022:14024  to */\n  dup4\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14005:14043  IERC1155Receiver(to).onERC1155Received */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xf23a6e61\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14044:14052  operator */\n  dup8\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14054:14058  from */\n  dup8\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14060:14062  id */\n  dup7\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14064:14069  value */\n  dup7\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14071:14075  data */\n  dup7\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n  mload(0x40)\n  dup7\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_66\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_67\n  jump\t// in\ntag_66:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  swap3\n  pop\n  pop\n  pop\n  dup1\n  iszero\n  tag_68\n  jumpi\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_69\n  swap2\n  swap1\n  tag_70\n  jump\t// in\ntag_69:\n  0x01\ntag_68:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n  tag_71\n  jumpi\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_76\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_75)\ntag_76:\n  0x60\n  swap2\n  pop\ntag_75:\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14377:14378  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14360:14366  reason */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14360:14373  reason.length */\n  mload\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14360:14378  reason.length == 0 */\n  sub\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n  tag_77\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14487:14489  to */\n  dup5\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14464:14490  ERC1155InvalidReceiver(to) */\n  mload(0x40)\n  0x57f447ce00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_78\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_78:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\ntag_77:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14657:14663  reason */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14651:14664  mload(reason) */\n  mload\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14642:14648  reason */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14638:14640  32 */\n  0x20\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14634:14649  add(32, reason) */\n  add\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14627:14665  revert(add(32, reason), mload(reason)) */\n  revert\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\ntag_71:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14137:14180  IERC1155Receiver.onERC1155Received.selector */\n  shl(0xe0, 0xf23a6e61)\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14125:14133  response */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  eq\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n  tag_81\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14273:14275  to */\n  dup5\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n  mload(0x40)\n  0x57f447ce00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_82\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_82:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\ntag_81:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14077:14309  returns (bytes4 response) {... */\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\ntag_65:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\ntag_37:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15171:15172  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15154:15156  to */\n  dup5\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15154:15168  to.code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15154:15172  to.code.length > 0 */\n  gt\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n  iszero\n  tag_84\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15209:15211  to */\n  dup4\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15192:15235  IERC1155Receiver(to).onERC1155BatchReceived */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xbc197c81\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15236:15244  operator */\n  dup8\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15246:15250  from */\n  dup8\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15252:15255  ids */\n  dup7\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15257:15263  values */\n  dup7\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15265:15269  data */\n  dup7\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n  mload(0x40)\n  dup7\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_85\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_86\n  jump\t// in\ntag_85:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  swap3\n  pop\n  pop\n  pop\n  dup1\n  iszero\n  tag_87\n  jumpi\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_88\n  swap2\n  swap1\n  tag_70\n  jump\t// in\ntag_88:\n  0x01\ntag_87:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n  tag_89\n  jumpi\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_94\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_93)\ntag_94:\n  0x60\n  swap2\n  pop\ntag_93:\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15606:15607  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15589:15595  reason */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15589:15602  reason.length */\n  mload\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15589:15607  reason.length == 0 */\n  sub\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n  tag_95\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15716:15718  to */\n  dup5\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15693:15719  ERC1155InvalidReceiver(to) */\n  mload(0x40)\n  0x57f447ce00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_96\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_96:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\ntag_95:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15886:15892  reason */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15880:15893  mload(reason) */\n  mload\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15871:15877  reason */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15867:15869  32 */\n  0x20\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15863:15878  add(32, reason) */\n  add\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15856:15894  revert(add(32, reason), mload(reason)) */\n  revert\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\ntag_89:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15361:15409  IERC1155Receiver.onERC1155BatchReceived.selector */\n  shl(0xe0, 0xbc197c81)\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15349:15357  response */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  eq\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n  tag_99\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15502:15504  to */\n  dup5\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15479:15505  ERC1155InvalidReceiver(to) */\n  mload(0x40)\n  0x57f447ce00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_100\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_100:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\ntag_99:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15271:15538  returns (... */\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\ntag_84:\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_101:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_102:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_103:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_104:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_149\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_149:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_150\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_151\n  tag_103\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":714:798   */\ntag_150:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_105:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_106:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_107:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_108:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_156\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_107\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":1429:1468   */\n  tag_157\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_107\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_109:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_110:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_111:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_161\n    /* \"#utility.yul\":1818:1852   */\n  tag_162\n    /* \"#utility.yul\":1827:1851   */\n  tag_163\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_109\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":1818:1852   */\n  tag_110\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":1800:1853   */\n  tag_109\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_112:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_113:\n    /* \"#utility.yul\":2056:2095   */\n  tag_166\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_111\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":2117:2208   */\n  tag_167\n    /* \"#utility.yul\":2166:2207   */\n  tag_168\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_112\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_108\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_114:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_115:\n    /* \"#utility.yul\":2377:2409   */\n  tag_171\n  tag_114\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":2418:2483   */\n  tag_172\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_113\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_116:\n    /* \"#utility.yul\":2555:2675   */\ntag_174:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_176\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_177\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_115\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_174)\ntag_176:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_117:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_180\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_105\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":2906:2935   */\n  tag_181\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_106\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_182:\n    /* \"#utility.yul\":3133:3213   */\n  tag_183\n    /* \"#utility.yul\":3189:3211   */\n  tag_184\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_106\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_116\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_179:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_118:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_119:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_187\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_118\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_120:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_189\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_119\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_13:\n    /* \"#utility.yul\":3950:3987   */\n  tag_191\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_101\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_192\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_193\n  tag_102\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":4038:4094   */\ntag_192:\n    /* \"#utility.yul\":4118:4156   */\n  tag_194\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_104\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":4203:4270   */\n  tag_195\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_117\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_197\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_198\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_198:\n    /* \"#utility.yul\":5144:5211   */\n  tag_199\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_120\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_196)\n    /* \"#utility.yul\":4365:4983   */\ntag_197:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_200\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_105\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_201:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_203\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_201)\ntag_203:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_204\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_205\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_119\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_204:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_196:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_121:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_122:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_208\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_121\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_123:\n    /* \"#utility.yul\":5555:5579   */\n  tag_210\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_122\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_17:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_212\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_123\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5820:5938   */\ntag_124:\n    /* \"#utility.yul\":5907:5931   */\n  tag_214\n    /* \"#utility.yul\":5925:5930   */\n  dup2\n    /* \"#utility.yul\":5907:5931   */\n  tag_109\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":5902:5905   */\n  dup3\n    /* \"#utility.yul\":5895:5932   */\n  mstore\n    /* \"#utility.yul\":5820:5938   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5944:6276   */\ntag_41:\n    /* \"#utility.yul\":6065:6069   */\n  0x00\n    /* \"#utility.yul\":6103:6105   */\n  0x40\n    /* \"#utility.yul\":6092:6101   */\n  dup3\n    /* \"#utility.yul\":6088:6106   */\n  add\n    /* \"#utility.yul\":6080:6106   */\n  swap1\n  pop\n    /* \"#utility.yul\":6116:6187   */\n  tag_216\n    /* \"#utility.yul\":6184:6185   */\n  0x00\n    /* \"#utility.yul\":6173:6182   */\n  dup4\n    /* \"#utility.yul\":6169:6186   */\n  add\n    /* \"#utility.yul\":6160:6166   */\n  dup6\n    /* \"#utility.yul\":6116:6187   */\n  tag_124\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":6197:6269   */\n  tag_217\n    /* \"#utility.yul\":6265:6267   */\n  0x20\n    /* \"#utility.yul\":6254:6263   */\n  dup4\n    /* \"#utility.yul\":6250:6268   */\n  add\n    /* \"#utility.yul\":6241:6247   */\n  dup5\n    /* \"#utility.yul\":6197:6269   */\n  tag_124\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":5944:6276   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6282:6835   */\ntag_51:\n    /* \"#utility.yul\":6459:6463   */\n  0x00\n    /* \"#utility.yul\":6497:6500   */\n  0x80\n    /* \"#utility.yul\":6486:6495   */\n  dup3\n    /* \"#utility.yul\":6482:6501   */\n  add\n    /* \"#utility.yul\":6474:6501   */\n  swap1\n  pop\n    /* \"#utility.yul\":6511:6582   */\n  tag_219\n    /* \"#utility.yul\":6579:6580   */\n  0x00\n    /* \"#utility.yul\":6568:6577   */\n  dup4\n    /* \"#utility.yul\":6564:6581   */\n  add\n    /* \"#utility.yul\":6555:6561   */\n  dup8\n    /* \"#utility.yul\":6511:6582   */\n  tag_123\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":6592:6664   */\n  tag_220\n    /* \"#utility.yul\":6660:6662   */\n  0x20\n    /* \"#utility.yul\":6649:6658   */\n  dup4\n    /* \"#utility.yul\":6645:6663   */\n  add\n    /* \"#utility.yul\":6636:6642   */\n  dup7\n    /* \"#utility.yul\":6592:6664   */\n  tag_124\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":6674:6746   */\n  tag_221\n    /* \"#utility.yul\":6742:6744   */\n  0x40\n    /* \"#utility.yul\":6731:6740   */\n  dup4\n    /* \"#utility.yul\":6727:6745   */\n  add\n    /* \"#utility.yul\":6718:6724   */\n  dup6\n    /* \"#utility.yul\":6674:6746   */\n  tag_124\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":6756:6828   */\n  tag_222\n    /* \"#utility.yul\":6824:6826   */\n  0x60\n    /* \"#utility.yul\":6813:6822   */\n  dup4\n    /* \"#utility.yul\":6809:6827   */\n  add\n    /* \"#utility.yul\":6800:6806   */\n  dup5\n    /* \"#utility.yul\":6756:6828   */\n  tag_124\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":6282:6835   */\n  swap6\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6841:7021   */\ntag_125:\n    /* \"#utility.yul\":6889:6966   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6886:6887   */\n  0x00\n    /* \"#utility.yul\":6879:6967   */\n  mstore\n    /* \"#utility.yul\":6986:6990   */\n  0x11\n    /* \"#utility.yul\":6983:6984   */\n  0x04\n    /* \"#utility.yul\":6976:6991   */\n  mstore\n    /* \"#utility.yul\":7010:7014   */\n  0x24\n    /* \"#utility.yul\":7007:7008   */\n  0x00\n    /* \"#utility.yul\":7000:7015   */\n  revert\n    /* \"#utility.yul\":7027:7218   */\ntag_54:\n    /* \"#utility.yul\":7067:7070   */\n  0x00\n    /* \"#utility.yul\":7086:7106   */\n  tag_225\n    /* \"#utility.yul\":7104:7105   */\n  dup3\n    /* \"#utility.yul\":7086:7106   */\n  tag_109\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":7081:7106   */\n  swap2\n  pop\n    /* \"#utility.yul\":7120:7140   */\n  tag_226\n    /* \"#utility.yul\":7138:7139   */\n  dup4\n    /* \"#utility.yul\":7120:7140   */\n  tag_109\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":7115:7140   */\n  swap3\n  pop\n    /* \"#utility.yul\":7163:7164   */\n  dup3\n    /* \"#utility.yul\":7160:7161   */\n  dup3\n    /* \"#utility.yul\":7156:7165   */\n  add\n    /* \"#utility.yul\":7149:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":7184:7187   */\n  dup1\n    /* \"#utility.yul\":7181:7182   */\n  dup3\n    /* \"#utility.yul\":7178:7188   */\n  gt\n    /* \"#utility.yul\":7175:7211   */\n  iszero\n  tag_227\n  jumpi\n    /* \"#utility.yul\":7191:7209   */\n  tag_228\n  tag_125\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":7175:7211   */\ntag_227:\n    /* \"#utility.yul\":7027:7218   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7224:7338   */\ntag_126:\n    /* \"#utility.yul\":7291:7297   */\n  0x00\n    /* \"#utility.yul\":7325:7330   */\n  dup2\n    /* \"#utility.yul\":7319:7331   */\n  mload\n    /* \"#utility.yul\":7309:7331   */\n  swap1\n  pop\n    /* \"#utility.yul\":7224:7338   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7344:7528   */\ntag_127:\n    /* \"#utility.yul\":7443:7454   */\n  0x00\n    /* \"#utility.yul\":7477:7483   */\n  dup3\n    /* \"#utility.yul\":7472:7475   */\n  dup3\n    /* \"#utility.yul\":7465:7484   */\n  mstore\n    /* \"#utility.yul\":7517:7521   */\n  0x20\n    /* \"#utility.yul\":7512:7515   */\n  dup3\n    /* \"#utility.yul\":7508:7522   */\n  add\n    /* \"#utility.yul\":7493:7522   */\n  swap1\n  pop\n    /* \"#utility.yul\":7344:7528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7534:7666   */\ntag_128:\n    /* \"#utility.yul\":7601:7605   */\n  0x00\n    /* \"#utility.yul\":7624:7627   */\n  dup2\n    /* \"#utility.yul\":7616:7627   */\n  swap1\n  pop\n    /* \"#utility.yul\":7654:7658   */\n  0x20\n    /* \"#utility.yul\":7649:7652   */\n  dup3\n    /* \"#utility.yul\":7645:7659   */\n  add\n    /* \"#utility.yul\":7637:7659   */\n  swap1\n  pop\n    /* \"#utility.yul\":7534:7666   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7672:7780   */\ntag_129:\n    /* \"#utility.yul\":7749:7773   */\n  tag_233\n    /* \"#utility.yul\":7767:7772   */\n  dup2\n    /* \"#utility.yul\":7749:7773   */\n  tag_109\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":7744:7747   */\n  dup3\n    /* \"#utility.yul\":7737:7774   */\n  mstore\n    /* \"#utility.yul\":7672:7780   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7786:7965   */\ntag_130:\n    /* \"#utility.yul\":7855:7865   */\n  0x00\n    /* \"#utility.yul\":7876:7922   */\n  tag_235\n    /* \"#utility.yul\":7918:7921   */\n  dup4\n    /* \"#utility.yul\":7910:7916   */\n  dup4\n    /* \"#utility.yul\":7876:7922   */\n  tag_129\n  jump\t// in\ntag_235:\n    /* \"#utility.yul\":7954:7958   */\n  0x20\n    /* \"#utility.yul\":7949:7952   */\n  dup4\n    /* \"#utility.yul\":7945:7959   */\n  add\n    /* \"#utility.yul\":7931:7959   */\n  swap1\n  pop\n    /* \"#utility.yul\":7786:7965   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7971:8084   */\ntag_131:\n    /* \"#utility.yul\":8041:8045   */\n  0x00\n    /* \"#utility.yul\":8073:8077   */\n  0x20\n    /* \"#utility.yul\":8068:8071   */\n  dup3\n    /* \"#utility.yul\":8064:8078   */\n  add\n    /* \"#utility.yul\":8056:8078   */\n  swap1\n  pop\n    /* \"#utility.yul\":7971:8084   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8120:8852   */\ntag_132:\n    /* \"#utility.yul\":8239:8242   */\n  0x00\n    /* \"#utility.yul\":8268:8322   */\n  tag_238\n    /* \"#utility.yul\":8316:8321   */\n  dup3\n    /* \"#utility.yul\":8268:8322   */\n  tag_126\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":8338:8424   */\n  tag_239\n    /* \"#utility.yul\":8417:8423   */\n  dup2\n    /* \"#utility.yul\":8412:8415   */\n  dup6\n    /* \"#utility.yul\":8338:8424   */\n  tag_127\n  jump\t// in\ntag_239:\n    /* \"#utility.yul\":8331:8424   */\n  swap4\n  pop\n    /* \"#utility.yul\":8448:8504   */\n  tag_240\n    /* \"#utility.yul\":8498:8503   */\n  dup4\n    /* \"#utility.yul\":8448:8504   */\n  tag_128\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":8527:8534   */\n  dup1\n    /* \"#utility.yul\":8558:8559   */\n  0x00\n    /* \"#utility.yul\":8543:8827   */\ntag_241:\n    /* \"#utility.yul\":8568:8574   */\n  dup4\n    /* \"#utility.yul\":8565:8566   */\n  dup2\n    /* \"#utility.yul\":8562:8575   */\n  lt\n    /* \"#utility.yul\":8543:8827   */\n  iszero\n  tag_243\n  jumpi\n    /* \"#utility.yul\":8644:8650   */\n  dup2\n    /* \"#utility.yul\":8638:8651   */\n  mload\n    /* \"#utility.yul\":8671:8734   */\n  tag_244\n    /* \"#utility.yul\":8730:8733   */\n  dup9\n    /* \"#utility.yul\":8715:8728   */\n  dup3\n    /* \"#utility.yul\":8671:8734   */\n  tag_130\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":8664:8734   */\n  swap8\n  pop\n    /* \"#utility.yul\":8757:8817   */\n  tag_245\n    /* \"#utility.yul\":8810:8816   */\n  dup4\n    /* \"#utility.yul\":8757:8817   */\n  tag_131\n  jump\t// in\ntag_245:\n    /* \"#utility.yul\":8747:8817   */\n  swap3\n  pop\n    /* \"#utility.yul\":8603:8827   */\n  pop\n    /* \"#utility.yul\":8590:8591   */\n  0x01\n    /* \"#utility.yul\":8587:8588   */\n  dup2\n    /* \"#utility.yul\":8583:8592   */\n  add\n    /* \"#utility.yul\":8578:8592   */\n  swap1\n  pop\n    /* \"#utility.yul\":8543:8827   */\n  jump(tag_241)\ntag_243:\n    /* \"#utility.yul\":8547:8561   */\n  pop\n    /* \"#utility.yul\":8843:8846   */\n  dup6\n    /* \"#utility.yul\":8836:8846   */\n  swap4\n  pop\n    /* \"#utility.yul\":8244:8852   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8120:8852   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8858:9492   */\ntag_61:\n    /* \"#utility.yul\":9079:9083   */\n  0x00\n    /* \"#utility.yul\":9117:9119   */\n  0x40\n    /* \"#utility.yul\":9106:9115   */\n  dup3\n    /* \"#utility.yul\":9102:9120   */\n  add\n    /* \"#utility.yul\":9094:9120   */\n  swap1\n  pop\n    /* \"#utility.yul\":9166:9175   */\n  dup2\n    /* \"#utility.yul\":9160:9164   */\n  dup2\n    /* \"#utility.yul\":9156:9176   */\n  sub\n    /* \"#utility.yul\":9152:9153   */\n  0x00\n    /* \"#utility.yul\":9141:9150   */\n  dup4\n    /* \"#utility.yul\":9137:9154   */\n  add\n    /* \"#utility.yul\":9130:9177   */\n  mstore\n    /* \"#utility.yul\":9194:9302   */\n  tag_247\n    /* \"#utility.yul\":9297:9301   */\n  dup2\n    /* \"#utility.yul\":9288:9294   */\n  dup6\n    /* \"#utility.yul\":9194:9302   */\n  tag_132\n  jump\t// in\ntag_247:\n    /* \"#utility.yul\":9186:9302   */\n  swap1\n  pop\n    /* \"#utility.yul\":9349:9358   */\n  dup2\n    /* \"#utility.yul\":9343:9347   */\n  dup2\n    /* \"#utility.yul\":9339:9359   */\n  sub\n    /* \"#utility.yul\":9334:9336   */\n  0x20\n    /* \"#utility.yul\":9323:9332   */\n  dup4\n    /* \"#utility.yul\":9319:9337   */\n  add\n    /* \"#utility.yul\":9312:9360   */\n  mstore\n    /* \"#utility.yul\":9377:9485   */\n  tag_248\n    /* \"#utility.yul\":9480:9484   */\n  dup2\n    /* \"#utility.yul\":9471:9477   */\n  dup5\n    /* \"#utility.yul\":9377:9485   */\n  tag_132\n  jump\t// in\ntag_248:\n    /* \"#utility.yul\":9369:9485   */\n  swap1\n  pop\n    /* \"#utility.yul\":8858:9492   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9498:9596   */\ntag_133:\n    /* \"#utility.yul\":9549:9555   */\n  0x00\n    /* \"#utility.yul\":9583:9588   */\n  dup2\n    /* \"#utility.yul\":9577:9589   */\n  mload\n    /* \"#utility.yul\":9567:9589   */\n  swap1\n  pop\n    /* \"#utility.yul\":9498:9596   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9602:9770   */\ntag_134:\n    /* \"#utility.yul\":9685:9696   */\n  0x00\n    /* \"#utility.yul\":9719:9725   */\n  dup3\n    /* \"#utility.yul\":9714:9717   */\n  dup3\n    /* \"#utility.yul\":9707:9726   */\n  mstore\n    /* \"#utility.yul\":9759:9763   */\n  0x20\n    /* \"#utility.yul\":9754:9757   */\n  dup3\n    /* \"#utility.yul\":9750:9764   */\n  add\n    /* \"#utility.yul\":9735:9764   */\n  swap1\n  pop\n    /* \"#utility.yul\":9602:9770   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9776:10022   */\ntag_135:\n    /* \"#utility.yul\":9857:9858   */\n  0x00\n    /* \"#utility.yul\":9867:9980   */\ntag_252:\n    /* \"#utility.yul\":9881:9887   */\n  dup4\n    /* \"#utility.yul\":9878:9879   */\n  dup2\n    /* \"#utility.yul\":9875:9888   */\n  lt\n    /* \"#utility.yul\":9867:9980   */\n  iszero\n  tag_254\n  jumpi\n    /* \"#utility.yul\":9966:9967   */\n  dup1\n    /* \"#utility.yul\":9961:9964   */\n  dup3\n    /* \"#utility.yul\":9957:9968   */\n  add\n    /* \"#utility.yul\":9951:9969   */\n  mload\n    /* \"#utility.yul\":9947:9948   */\n  dup2\n    /* \"#utility.yul\":9942:9945   */\n  dup5\n    /* \"#utility.yul\":9938:9949   */\n  add\n    /* \"#utility.yul\":9931:9970   */\n  mstore\n    /* \"#utility.yul\":9903:9905   */\n  0x20\n    /* \"#utility.yul\":9900:9901   */\n  dup2\n    /* \"#utility.yul\":9896:9906   */\n  add\n    /* \"#utility.yul\":9891:9906   */\n  swap1\n  pop\n    /* \"#utility.yul\":9867:9980   */\n  jump(tag_252)\ntag_254:\n    /* \"#utility.yul\":10014:10015   */\n  0x00\n    /* \"#utility.yul\":10005:10011   */\n  dup5\n    /* \"#utility.yul\":10000:10003   */\n  dup5\n    /* \"#utility.yul\":9996:10012   */\n  add\n    /* \"#utility.yul\":9989:10016   */\n  mstore\n    /* \"#utility.yul\":9838:10022   */\n  pop\n    /* \"#utility.yul\":9776:10022   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10028:10130   */\ntag_136:\n    /* \"#utility.yul\":10069:10075   */\n  0x00\n    /* \"#utility.yul\":10120:10122   */\n  0x1f\n    /* \"#utility.yul\":10116:10123   */\n  not\n    /* \"#utility.yul\":10111:10113   */\n  0x1f\n    /* \"#utility.yul\":10104:10109   */\n  dup4\n    /* \"#utility.yul\":10100:10114   */\n  add\n    /* \"#utility.yul\":10096:10124   */\n  and\n    /* \"#utility.yul\":10086:10124   */\n  swap1\n  pop\n    /* \"#utility.yul\":10028:10130   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10136:10509   */\ntag_137:\n    /* \"#utility.yul\":10222:10225   */\n  0x00\n    /* \"#utility.yul\":10250:10288   */\n  tag_257\n    /* \"#utility.yul\":10282:10287   */\n  dup3\n    /* \"#utility.yul\":10250:10288   */\n  tag_133\n  jump\t// in\ntag_257:\n    /* \"#utility.yul\":10304:10374   */\n  tag_258\n    /* \"#utility.yul\":10367:10373   */\n  dup2\n    /* \"#utility.yul\":10362:10365   */\n  dup6\n    /* \"#utility.yul\":10304:10374   */\n  tag_134\n  jump\t// in\ntag_258:\n    /* \"#utility.yul\":10297:10374   */\n  swap4\n  pop\n    /* \"#utility.yul\":10383:10448   */\n  tag_259\n    /* \"#utility.yul\":10441:10447   */\n  dup2\n    /* \"#utility.yul\":10436:10439   */\n  dup6\n    /* \"#utility.yul\":10429:10433   */\n  0x20\n    /* \"#utility.yul\":10422:10427   */\n  dup7\n    /* \"#utility.yul\":10418:10434   */\n  add\n    /* \"#utility.yul\":10383:10448   */\n  tag_135\n  jump\t// in\ntag_259:\n    /* \"#utility.yul\":10473:10502   */\n  tag_260\n    /* \"#utility.yul\":10495:10501   */\n  dup2\n    /* \"#utility.yul\":10473:10502   */\n  tag_136\n  jump\t// in\ntag_260:\n    /* \"#utility.yul\":10468:10471   */\n  dup5\n    /* \"#utility.yul\":10464:10503   */\n  add\n    /* \"#utility.yul\":10457:10503   */\n  swap2\n  pop\n    /* \"#utility.yul\":10226:10509   */\n  pop\n    /* \"#utility.yul\":10136:10509   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10515:11266   */\ntag_67:\n    /* \"#utility.yul\":10738:10742   */\n  0x00\n    /* \"#utility.yul\":10776:10779   */\n  0xa0\n    /* \"#utility.yul\":10765:10774   */\n  dup3\n    /* \"#utility.yul\":10761:10780   */\n  add\n    /* \"#utility.yul\":10753:10780   */\n  swap1\n  pop\n    /* \"#utility.yul\":10790:10861   */\n  tag_262\n    /* \"#utility.yul\":10858:10859   */\n  0x00\n    /* \"#utility.yul\":10847:10856   */\n  dup4\n    /* \"#utility.yul\":10843:10860   */\n  add\n    /* \"#utility.yul\":10834:10840   */\n  dup9\n    /* \"#utility.yul\":10790:10861   */\n  tag_123\n  jump\t// in\ntag_262:\n    /* \"#utility.yul\":10871:10943   */\n  tag_263\n    /* \"#utility.yul\":10939:10941   */\n  0x20\n    /* \"#utility.yul\":10928:10937   */\n  dup4\n    /* \"#utility.yul\":10924:10942   */\n  add\n    /* \"#utility.yul\":10915:10921   */\n  dup8\n    /* \"#utility.yul\":10871:10943   */\n  tag_123\n  jump\t// in\ntag_263:\n    /* \"#utility.yul\":10953:11025   */\n  tag_264\n    /* \"#utility.yul\":11021:11023   */\n  0x40\n    /* \"#utility.yul\":11010:11019   */\n  dup4\n    /* \"#utility.yul\":11006:11024   */\n  add\n    /* \"#utility.yul\":10997:11003   */\n  dup7\n    /* \"#utility.yul\":10953:11025   */\n  tag_124\n  jump\t// in\ntag_264:\n    /* \"#utility.yul\":11035:11107   */\n  tag_265\n    /* \"#utility.yul\":11103:11105   */\n  0x60\n    /* \"#utility.yul\":11092:11101   */\n  dup4\n    /* \"#utility.yul\":11088:11106   */\n  add\n    /* \"#utility.yul\":11079:11085   */\n  dup6\n    /* \"#utility.yul\":11035:11107   */\n  tag_124\n  jump\t// in\ntag_265:\n    /* \"#utility.yul\":11155:11164   */\n  dup2\n    /* \"#utility.yul\":11149:11153   */\n  dup2\n    /* \"#utility.yul\":11145:11165   */\n  sub\n    /* \"#utility.yul\":11139:11142   */\n  0x80\n    /* \"#utility.yul\":11128:11137   */\n  dup4\n    /* \"#utility.yul\":11124:11143   */\n  add\n    /* \"#utility.yul\":11117:11166   */\n  mstore\n    /* \"#utility.yul\":11183:11259   */\n  tag_266\n    /* \"#utility.yul\":11254:11258   */\n  dup2\n    /* \"#utility.yul\":11245:11251   */\n  dup5\n    /* \"#utility.yul\":11183:11259   */\n  tag_137\n  jump\t// in\ntag_266:\n    /* \"#utility.yul\":11175:11259   */\n  swap1\n  pop\n    /* \"#utility.yul\":10515:11266   */\n  swap7\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11353:11470   */\ntag_139:\n    /* \"#utility.yul\":11462:11463   */\n  0x00\n    /* \"#utility.yul\":11459:11460   */\n  dup1\n    /* \"#utility.yul\":11452:11464   */\n  revert\n    /* \"#utility.yul\":11599:11748   */\ntag_141:\n    /* \"#utility.yul\":11635:11642   */\n  0x00\n    /* \"#utility.yul\":11675:11741   */\n  0xffffffff00000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":11668:11673   */\n  dup3\n    /* \"#utility.yul\":11664:11742   */\n  and\n    /* \"#utility.yul\":11653:11742   */\n  swap1\n  pop\n    /* \"#utility.yul\":11599:11748   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11754:11874   */\ntag_142:\n    /* \"#utility.yul\":11826:11849   */\n  tag_272\n    /* \"#utility.yul\":11843:11848   */\n  dup2\n    /* \"#utility.yul\":11826:11849   */\n  tag_141\n  jump\t// in\ntag_272:\n    /* \"#utility.yul\":11819:11824   */\n  dup2\n    /* \"#utility.yul\":11816:11850   */\n  eq\n    /* \"#utility.yul\":11806:11868   */\n  tag_273\n  jumpi\n    /* \"#utility.yul\":11864:11865   */\n  0x00\n    /* \"#utility.yul\":11861:11862   */\n  dup1\n    /* \"#utility.yul\":11854:11866   */\n  revert\n    /* \"#utility.yul\":11806:11868   */\ntag_273:\n    /* \"#utility.yul\":11754:11874   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11880:12021   */\ntag_143:\n    /* \"#utility.yul\":11936:11941   */\n  0x00\n    /* \"#utility.yul\":11967:11973   */\n  dup2\n    /* \"#utility.yul\":11961:11974   */\n  mload\n    /* \"#utility.yul\":11952:11974   */\n  swap1\n  pop\n    /* \"#utility.yul\":11983:12015   */\n  tag_275\n    /* \"#utility.yul\":12009:12014   */\n  dup2\n    /* \"#utility.yul\":11983:12015   */\n  tag_142\n  jump\t// in\ntag_275:\n    /* \"#utility.yul\":11880:12021   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12027:12376   */\ntag_70:\n    /* \"#utility.yul\":12096:12102   */\n  0x00\n    /* \"#utility.yul\":12145:12147   */\n  0x20\n    /* \"#utility.yul\":12133:12142   */\n  dup3\n    /* \"#utility.yul\":12124:12131   */\n  dup5\n    /* \"#utility.yul\":12120:12143   */\n  sub\n    /* \"#utility.yul\":12116:12148   */\n  slt\n    /* \"#utility.yul\":12113:12232   */\n  iszero\n  tag_277\n  jumpi\n    /* \"#utility.yul\":12151:12230   */\n  tag_278\n  tag_139\n  jump\t// in\ntag_278:\n    /* \"#utility.yul\":12113:12232   */\ntag_277:\n    /* \"#utility.yul\":12271:12272   */\n  0x00\n    /* \"#utility.yul\":12296:12359   */\n  tag_279\n    /* \"#utility.yul\":12351:12358   */\n  dup5\n    /* \"#utility.yul\":12342:12348   */\n  dup3\n    /* \"#utility.yul\":12331:12340   */\n  dup6\n    /* \"#utility.yul\":12327:12349   */\n  add\n    /* \"#utility.yul\":12296:12359   */\n  tag_143\n  jump\t// in\ntag_279:\n    /* \"#utility.yul\":12286:12359   */\n  swap2\n  pop\n    /* \"#utility.yul\":12242:12369   */\n  pop\n    /* \"#utility.yul\":12027:12376   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12382:13435   */\ntag_86:\n    /* \"#utility.yul\":12705:12709   */\n  0x00\n    /* \"#utility.yul\":12743:12746   */\n  0xa0\n    /* \"#utility.yul\":12732:12741   */\n  dup3\n    /* \"#utility.yul\":12728:12747   */\n  add\n    /* \"#utility.yul\":12720:12747   */\n  swap1\n  pop\n    /* \"#utility.yul\":12757:12828   */\n  tag_281\n    /* \"#utility.yul\":12825:12826   */\n  0x00\n    /* \"#utility.yul\":12814:12823   */\n  dup4\n    /* \"#utility.yul\":12810:12827   */\n  add\n    /* \"#utility.yul\":12801:12807   */\n  dup9\n    /* \"#utility.yul\":12757:12828   */\n  tag_123\n  jump\t// in\ntag_281:\n    /* \"#utility.yul\":12838:12910   */\n  tag_282\n    /* \"#utility.yul\":12906:12908   */\n  0x20\n    /* \"#utility.yul\":12895:12904   */\n  dup4\n    /* \"#utility.yul\":12891:12909   */\n  add\n    /* \"#utility.yul\":12882:12888   */\n  dup8\n    /* \"#utility.yul\":12838:12910   */\n  tag_123\n  jump\t// in\ntag_282:\n    /* \"#utility.yul\":12957:12966   */\n  dup2\n    /* \"#utility.yul\":12951:12955   */\n  dup2\n    /* \"#utility.yul\":12947:12967   */\n  sub\n    /* \"#utility.yul\":12942:12944   */\n  0x40\n    /* \"#utility.yul\":12931:12940   */\n  dup4\n    /* \"#utility.yul\":12927:12945   */\n  add\n    /* \"#utility.yul\":12920:12968   */\n  mstore\n    /* \"#utility.yul\":12985:13093   */\n  tag_283\n    /* \"#utility.yul\":13088:13092   */\n  dup2\n    /* \"#utility.yul\":13079:13085   */\n  dup7\n    /* \"#utility.yul\":12985:13093   */\n  tag_132\n  jump\t// in\ntag_283:\n    /* \"#utility.yul\":12977:13093   */\n  swap1\n  pop\n    /* \"#utility.yul\":13140:13149   */\n  dup2\n    /* \"#utility.yul\":13134:13138   */\n  dup2\n    /* \"#utility.yul\":13130:13150   */\n  sub\n    /* \"#utility.yul\":13125:13127   */\n  0x60\n    /* \"#utility.yul\":13114:13123   */\n  dup4\n    /* \"#utility.yul\":13110:13128   */\n  add\n    /* \"#utility.yul\":13103:13151   */\n  mstore\n    /* \"#utility.yul\":13168:13276   */\n  tag_284\n    /* \"#utility.yul\":13271:13275   */\n  dup2\n    /* \"#utility.yul\":13262:13268   */\n  dup6\n    /* \"#utility.yul\":13168:13276   */\n  tag_132\n  jump\t// in\ntag_284:\n    /* \"#utility.yul\":13160:13276   */\n  swap1\n  pop\n    /* \"#utility.yul\":13324:13333   */\n  dup2\n    /* \"#utility.yul\":13318:13322   */\n  dup2\n    /* \"#utility.yul\":13314:13334   */\n  sub\n    /* \"#utility.yul\":13308:13311   */\n  0x80\n    /* \"#utility.yul\":13297:13306   */\n  dup4\n    /* \"#utility.yul\":13293:13312   */\n  add\n    /* \"#utility.yul\":13286:13335   */\n  mstore\n    /* \"#utility.yul\":13352:13428   */\n  tag_285\n    /* \"#utility.yul\":13423:13427   */\n  dup2\n    /* \"#utility.yul\":13414:13420   */\n  dup5\n    /* \"#utility.yul\":13352:13428   */\n  tag_137\n  jump\t// in\ntag_285:\n    /* \"#utility.yul\":13344:13428   */\n  swap1\n  pop\n    /* \"#utility.yul\":12382:13435   */\n  swap7\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/WOJAToken3.sol\":130:345  contract WOJA_Hero is ERC1155 {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_99c456ce8103a063eadde2fefd34e0c93694ee0875780c5d3728db26ca2aaf27 68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f576f726170616b6f726e4a6172757369726970686f742f4d795f4e46545f576f726b73686f702f6d61696e2f574f4a415f4865726f2e6a736f6e\n\nsub_0: assembly {\n        /* \"contracts/WOJAToken3.sol\":130:345  contract WOJA_Hero is ERC1155 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2324:2331  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2350:2359  _balances */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2360:2362  id */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2364:2371  account */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2343:2372  return _balances[id][account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1482:1486  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1532:1558  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1517:1528  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_55\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1589:1626  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1574:1585  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_55:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_56\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      tag_57\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1666:1677  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1642:1665  super.supportsInterface */\n      tag_58\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_56:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1498:1678  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2144:2157  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2176:2180  _uri */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2169:2180  return _uri */\n      dup1\n      sload\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_62\n      swap1\n      tag_61\n      jump\t// in\n    tag_62:\n      dup1\n      iszero\n      tag_63\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_64\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_63)\n    tag_64:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_65:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_65\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_33:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4208:4222  address sender */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      tag_67\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4225:4235  _msgSender */\n      tag_68\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4208:4237  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4259:4265  sender */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4251:4255  from */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_69\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      tag_70\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4287:4291  from */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4293:4299  sender */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4270:4286  isApprovedForAll */\n      tag_47\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4269:4300  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n    tag_69:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_71\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4352:4358  sender */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4360:4364  from */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4323:4365  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap3\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      tag_74\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4408:4412  from */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4414:4416  to */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4418:4421  ids */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4423:4429  values */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4431:4435  data */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4385:4407  _safeBatchTransferFrom */\n      tag_75\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4198:4443  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_37:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2660:2676  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2711:2714  ids */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2711:2721  ids.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2692:2700  accounts */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2692:2707  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2692:2721  accounts.length != ids.length */\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n      tag_77\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2770:2773  ids */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2770:2780  ids.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2782:2790  accounts */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2782:2797  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2744:2798  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap3\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2819:2849  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2866:2874  accounts */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2866:2881  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2852:2882  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_80\n      jumpi\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n    tag_80:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_83\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_83:\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2819:2882  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2898:2907  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2917:2925  accounts */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2917:2932  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2913:2914  i */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2913:2932  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_85\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      tag_87\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      tag_88\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3010:3011  i */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2982:2990  accounts */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2982:3009  accounts.unsafeMemoryAccess */\n      tag_89\n      swap1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      tag_90\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3037:3038  i */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3014:3017  ids */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3014:3036  ids.unsafeMemoryAccess */\n      tag_91\n      swap1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2972:2981  balanceOf */\n      tag_15\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2953:2966  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2967:2968  i */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2953:2969  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_92\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n    tag_92:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2953:3040  batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2934:2937  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_84)\n    tag_85:\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3068:3081  batchBalances */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3061:3081  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_43:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_96\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      tag_97\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3260:3270  _msgSender */\n      tag_68\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3274:3282  operator */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3284:3292  approved */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3241:3259  _setApprovalForAll */\n      tag_98\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3457:3461  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3480:3498  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3499:3506  account */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3508:3516  operator */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3473:3517  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_52:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3714:3728  address sender */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      tag_101\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3731:3741  _msgSender */\n      tag_68\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3714:3743  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3765:3771  sender */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3757:3761  from */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_102\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      tag_103\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3793:3797  from */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3799:3805  sender */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3776:3792  isApprovedForAll */\n      tag_47\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3775:3806  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n    tag_102:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3858:3864  sender */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3866:3870  from */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3829:3871  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap3\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      tag_106\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3909:3913  from */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3915:3917  to */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3919:3921  id */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3923:3928  value */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3930:3934  data */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3891:3908  _safeTransferFrom */\n      tag_107\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3704:3942  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n    tag_75:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9222:9223  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9208:9210  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n      tag_111\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9278:9279  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9247:9281  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9321:9322  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9305:9309  from */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n      tag_114\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9375:9376  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9346:9378  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_116\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9425:9429  from */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9431:9433  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9435:9438  ids */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9440:9446  values */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9448:9452  data */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9398:9424  _updateWithAcceptanceCheck */\n      tag_117\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4689:4700  address res */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4772:4775  pos */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4768:4782  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4761:4765  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4756:4759  arr */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4752:4766  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4735:4784  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4290:4301  uint256 res */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4378:4382  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4373:4376  pos */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4369:4383  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4362:4366  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4357:4360  arr */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4353:4367  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4349:4384  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4343:4385  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4336:4385  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_98:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13395:13396  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13375:13383  operator */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n      tag_121\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13451:13452  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13420:13454  ERC1155InvalidOperator(address(0)) */\n      mload(0x40)\n      0xced3e10000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13512:13520  approved */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13474:13492  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13493:13498  owner */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13500:13508  operator */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13474:13520  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13557:13565  operator */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13550:13555  owner */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13567:13575  approved */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_107:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8287:8288  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8273:8275  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n      tag_125\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8343:8344  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8312:8346  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8386:8387  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8370:8374  from */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n      tag_127\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8440:8441  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8411:8443  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8464:8484  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8486:8509  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      tag_129\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8532:8534  id */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8536:8541  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8513:8531  _asSingletonArrays */\n      tag_130\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8463:8542  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_131\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8579:8583  from */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8585:8587  to */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8589:8592  ids */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8594:8600  values */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8602:8606  data */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8552:8578  _updateWithAcceptanceCheck */\n      tag_117\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8259:8614  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n    tag_117:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      tag_133\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7213:7217  from */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7219:7221  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7223:7226  ids */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7228:7234  values */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7205:7212  _update */\n      tag_134\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7263:7264  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7249:7251  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n      tag_135\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7281:7297  address operator */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      tag_136\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7300:7310  _msgSender */\n      tag_68\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7281:7312  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7344:7345  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7330:7333  ids */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7330:7340  ids.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7330:7345  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7365:7375  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      tag_138\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7401:7402  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7378:7381  ids */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7378:7400  ids.unsafeMemoryAccess */\n      tag_91\n      swap1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7365:7403  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7421:7434  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      tag_139\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7463:7464  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7437:7443  values */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7437:7462  values.unsafeMemoryAccess */\n      tag_91\n      swap1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7421:7465  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      tag_140\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7514:7522  operator */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7524:7528  from */\n      dup10\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7530:7532  to */\n      dup10\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7534:7536  id */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7538:7543  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7545:7549  data */\n      dup10\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7483:7513  _doSafeTransferAcceptanceCheck */\n      tag_141\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7347:7565  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      jump(tag_142)\n    tag_137:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      tag_143\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7625:7633  operator */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7635:7639  from */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7641:7643  to */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7645:7648  ids */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7650:7656  values */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7658:7662  data */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7589:7624  _doSafeBatchTransferAcceptanceCheck */\n      tag_144\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7267:7688  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n    tag_130:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16188:16211  uint256[] memory array1 */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16213:16236  uint256[] memory array2 */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16374:16378  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16358:16379  array1 := mload(0x40) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16444:16445  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16436:16442  array1 */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16429:16446  mstore(array1, 1) */\n      mstore\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16582:16590  element1 */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16575:16579  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16567:16573  array1 */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16563:16580  add(array1, 0x20) */\n      add\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16556:16591  mstore(add(array1, 0x20), element1) */\n      mstore\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16704:16708  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16696:16702  array1 */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      add\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16682:16709  array2 := add(array1, 0x40) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16737:16738  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16729:16735  array2 */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16722:16739  mstore(array2, 1) */\n      mstore\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16778:16786  element2 */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16771:16775  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16763:16769  array2 */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16759:16776  add(array2, 0x20) */\n      add\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16752:16787  mstore(add(array2, 0x20), element2) */\n      mstore\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16907:16911  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16899:16905  array2 */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16895:16912  add(array2, 0x40) */\n      add\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16889:16893  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16882:16913  mstore(0x40, add(array2, 0x40)) */\n      mstore\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n    tag_134:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5279:5285  values */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5279:5292  values.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5265:5268  ids */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5265:5275  ids.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5265:5292  ids.length != values.length */\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n      tag_147\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5341:5344  ids */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5341:5351  ids.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5353:5359  values */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5353:5366  values.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5315:5367  ERC1155InvalidArrayLength(ids.length, values.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap3\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5388:5404  address operator */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      tag_149\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5407:5417  _msgSender */\n      tag_68\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5388:5419  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5435:5444  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5454:5457  ids */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5454:5464  ids.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5450:5451  i */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5450:5464  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5485:5495  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      tag_153\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5521:5522  i */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5498:5501  ids */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5498:5520  ids.unsafeMemoryAccess */\n      tag_91\n      swap1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5485:5523  uint256 id = ids.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5537:5550  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      tag_154\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5579:5580  i */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5553:5559  values */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5553:5578  values.unsafeMemoryAccess */\n      tag_91\n      swap1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5537:5581  uint256 value = values.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5616:5617  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5600:5604  from */\n      dup9\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5638:5657  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5670:5672  id */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5674:5678  from */\n      dup11\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5638:5679  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5715:5720  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5701:5712  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5701:5720  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n      iszero\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5778:5782  from */\n      dup9\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5784:5795  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5797:5802  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5804:5806  id */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      mload(0x40)\n      0x03dee4c500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5978:5983  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5964:5975  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5964:5983  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5942:5951  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5952:5954  id */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5956:5960  from */\n      dup12\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5942:5983  _balances[id][from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5620:6016  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6048:6049  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6034:6036  to */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6091:6096  value */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6070:6079  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6080:6082  id */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6084:6086  to */\n      dup10\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n      dup3\n      dup3\n      sload\n      tag_160\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5471:6121  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5466:5469  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_150)\n    tag_151:\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6149:6150  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6135:6138  ids */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6135:6145  ids.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6135:6150  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6166:6176  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      tag_163\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6202:6203  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6179:6182  ids */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6179:6201  ids.unsafeMemoryAccess */\n      tag_91\n      swap1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6166:6204  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6218:6231  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      tag_164\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6260:6261  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6234:6240  values */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6234:6259  values.unsafeMemoryAccess */\n      tag_91\n      swap1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6218:6262  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6312:6314  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6306:6310  from */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6296:6304  operator */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6316:6318  id */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6320:6325  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      mload(0x40)\n      tag_165\n      swap3\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6152:6337  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      jump(tag_166)\n    tag_162:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6392:6394  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6386:6390  from */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6376:6384  operator */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6396:6399  ids */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6401:6407  values */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      mload(0x40)\n      tag_167\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5251:6425  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n    tag_141:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13984:13985  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13967:13969  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13967:13981  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13967:13985  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14022:14024  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14005:14043  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14044:14052  operator */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14054:14058  from */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14060:14062  id */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14064:14069  value */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14071:14075  data */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_173\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_174\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      0x01\n    tag_173:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n      tag_176\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_181\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_180)\n    tag_181:\n      0x60\n      swap2\n      pop\n    tag_180:\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14377:14378  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14360:14366  reason */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14360:14373  reason.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14360:14378  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14487:14489  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14464:14490  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14657:14663  reason */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14651:14664  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14642:14648  reason */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14638:14640  32 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14634:14649  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14627:14665  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14137:14180  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14125:14133  response */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_186\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14273:14275  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_186:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14077:14309  returns (bytes4 response) {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_144:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15171:15172  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15154:15156  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15154:15168  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15154:15172  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n      iszero\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15209:15211  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15192:15235  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15236:15244  operator */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15246:15250  from */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15252:15255  ids */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15257:15263  values */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15265:15269  data */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_192\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_193\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_193:\n      0x01\n    tag_192:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n      tag_194\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_199\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_198)\n    tag_199:\n      0x60\n      swap2\n      pop\n    tag_198:\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15606:15607  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15589:15595  reason */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15589:15602  reason.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15589:15607  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15716:15718  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15693:15719  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15886:15892  reason */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15880:15893  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15871:15877  reason */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15867:15869  32 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15863:15878  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15856:15894  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n    tag_194:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15361:15409  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15349:15357  response */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15502:15504  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15479:15505  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15271:15538  returns (... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_206:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_207:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_208:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_209:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_210:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_264\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_209\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_211:\n        /* \"#utility.yul\":641:665   */\n      tag_266\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_210\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_267:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_212:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_269\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_211\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_213:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_214:\n        /* \"#utility.yul\":997:1021   */\n      tag_272\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_213\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_273:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_215:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_275\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_214\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_14:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_278\n      tag_207\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":1290:1409   */\n    tag_277:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_279\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_212\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_280\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_215\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_216:\n        /* \"#utility.yul\":1764:1788   */\n      tag_282\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_213\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_17:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_284\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_216\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_217:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_218:\n        /* \"#utility.yul\":2256:2279   */\n      tag_287\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_217\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_288:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_219:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_290\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_218\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_20:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_293\n      tag_207\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":2528:2647   */\n    tag_292:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_294\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_219\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_220:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_221:\n        /* \"#utility.yul\":2963:2984   */\n      tag_297\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_220\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_23:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_299\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_221\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3542   */\n    tag_26:\n        /* \"#utility.yul\":3272:3278   */\n      0x00\n        /* \"#utility.yul\":3321:3323   */\n      0x20\n        /* \"#utility.yul\":3309:3318   */\n      dup3\n        /* \"#utility.yul\":3300:3307   */\n      dup5\n        /* \"#utility.yul\":3296:3319   */\n      sub\n        /* \"#utility.yul\":3292:3324   */\n      slt\n        /* \"#utility.yul\":3289:3408   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":3327:3406   */\n      tag_302\n      tag_207\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3289:3408   */\n    tag_301:\n        /* \"#utility.yul\":3447:3448   */\n      0x00\n        /* \"#utility.yul\":3472:3525   */\n      tag_303\n        /* \"#utility.yul\":3517:3524   */\n      dup5\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup6\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_215\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3418:3535   */\n      pop\n        /* \"#utility.yul\":3213:3542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3647   */\n    tag_222:\n        /* \"#utility.yul\":3600:3606   */\n      0x00\n        /* \"#utility.yul\":3634:3639   */\n      dup2\n        /* \"#utility.yul\":3628:3640   */\n      mload\n        /* \"#utility.yul\":3618:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3822   */\n    tag_223:\n        /* \"#utility.yul\":3737:3748   */\n      0x00\n        /* \"#utility.yul\":3771:3777   */\n      dup3\n        /* \"#utility.yul\":3766:3769   */\n      dup3\n        /* \"#utility.yul\":3759:3778   */\n      mstore\n        /* \"#utility.yul\":3811:3815   */\n      0x20\n        /* \"#utility.yul\":3806:3809   */\n      dup3\n        /* \"#utility.yul\":3802:3816   */\n      add\n        /* \"#utility.yul\":3787:3816   */\n      swap1\n      pop\n        /* \"#utility.yul\":3653:3822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3828:4074   */\n    tag_224:\n        /* \"#utility.yul\":3909:3910   */\n      0x00\n        /* \"#utility.yul\":3919:4032   */\n    tag_307:\n        /* \"#utility.yul\":3933:3939   */\n      dup4\n        /* \"#utility.yul\":3930:3931   */\n      dup2\n        /* \"#utility.yul\":3927:3940   */\n      lt\n        /* \"#utility.yul\":3919:4032   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":4018:4019   */\n      dup1\n        /* \"#utility.yul\":4013:4016   */\n      dup3\n        /* \"#utility.yul\":4009:4020   */\n      add\n        /* \"#utility.yul\":4003:4021   */\n      mload\n        /* \"#utility.yul\":3999:4000   */\n      dup2\n        /* \"#utility.yul\":3994:3997   */\n      dup5\n        /* \"#utility.yul\":3990:4001   */\n      add\n        /* \"#utility.yul\":3983:4022   */\n      mstore\n        /* \"#utility.yul\":3955:3957   */\n      0x20\n        /* \"#utility.yul\":3952:3953   */\n      dup2\n        /* \"#utility.yul\":3948:3958   */\n      add\n        /* \"#utility.yul\":3943:3958   */\n      swap1\n      pop\n        /* \"#utility.yul\":3919:4032   */\n      jump(tag_307)\n    tag_309:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4057:4063   */\n      dup5\n        /* \"#utility.yul\":4052:4055   */\n      dup5\n        /* \"#utility.yul\":4048:4064   */\n      add\n        /* \"#utility.yul\":4041:4068   */\n      mstore\n        /* \"#utility.yul\":3890:4074   */\n      pop\n        /* \"#utility.yul\":3828:4074   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4080:4182   */\n    tag_225:\n        /* \"#utility.yul\":4121:4127   */\n      0x00\n        /* \"#utility.yul\":4172:4174   */\n      0x1f\n        /* \"#utility.yul\":4168:4175   */\n      not\n        /* \"#utility.yul\":4163:4165   */\n      0x1f\n        /* \"#utility.yul\":4156:4161   */\n      dup4\n        /* \"#utility.yul\":4152:4166   */\n      add\n        /* \"#utility.yul\":4148:4176   */\n      and\n        /* \"#utility.yul\":4138:4176   */\n      swap1\n      pop\n        /* \"#utility.yul\":4080:4182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4188:4565   */\n    tag_226:\n        /* \"#utility.yul\":4276:4279   */\n      0x00\n        /* \"#utility.yul\":4304:4343   */\n      tag_312\n        /* \"#utility.yul\":4337:4342   */\n      dup3\n        /* \"#utility.yul\":4304:4343   */\n      tag_222\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":4359:4430   */\n      tag_313\n        /* \"#utility.yul\":4423:4429   */\n      dup2\n        /* \"#utility.yul\":4418:4421   */\n      dup6\n        /* \"#utility.yul\":4359:4430   */\n      tag_223\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4352:4430   */\n      swap4\n      pop\n        /* \"#utility.yul\":4439:4504   */\n      tag_314\n        /* \"#utility.yul\":4497:4503   */\n      dup2\n        /* \"#utility.yul\":4492:4495   */\n      dup6\n        /* \"#utility.yul\":4485:4489   */\n      0x20\n        /* \"#utility.yul\":4478:4483   */\n      dup7\n        /* \"#utility.yul\":4474:4490   */\n      add\n        /* \"#utility.yul\":4439:4504   */\n      tag_224\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":4529:4558   */\n      tag_315\n        /* \"#utility.yul\":4551:4557   */\n      dup2\n        /* \"#utility.yul\":4529:4558   */\n      tag_225\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":4524:4527   */\n      dup5\n        /* \"#utility.yul\":4520:4559   */\n      add\n        /* \"#utility.yul\":4513:4559   */\n      swap2\n      pop\n        /* \"#utility.yul\":4280:4565   */\n      pop\n        /* \"#utility.yul\":4188:4565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4571:4884   */\n    tag_29:\n        /* \"#utility.yul\":4684:4688   */\n      0x00\n        /* \"#utility.yul\":4722:4724   */\n      0x20\n        /* \"#utility.yul\":4711:4720   */\n      dup3\n        /* \"#utility.yul\":4707:4725   */\n      add\n        /* \"#utility.yul\":4699:4725   */\n      swap1\n      pop\n        /* \"#utility.yul\":4771:4780   */\n      dup2\n        /* \"#utility.yul\":4765:4769   */\n      dup2\n        /* \"#utility.yul\":4761:4781   */\n      sub\n        /* \"#utility.yul\":4757:4758   */\n      0x00\n        /* \"#utility.yul\":4746:4755   */\n      dup4\n        /* \"#utility.yul\":4742:4759   */\n      add\n        /* \"#utility.yul\":4735:4782   */\n      mstore\n        /* \"#utility.yul\":4799:4877   */\n      tag_317\n        /* \"#utility.yul\":4872:4876   */\n      dup2\n        /* \"#utility.yul\":4863:4869   */\n      dup5\n        /* \"#utility.yul\":4799:4877   */\n      tag_226\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":4791:4877   */\n      swap1\n      pop\n        /* \"#utility.yul\":4571:4884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5007   */\n    tag_227:\n        /* \"#utility.yul\":4999:5000   */\n      0x00\n        /* \"#utility.yul\":4996:4997   */\n      dup1\n        /* \"#utility.yul\":4989:5001   */\n      revert\n        /* \"#utility.yul\":5013:5193   */\n    tag_82:\n        /* \"#utility.yul\":5061:5138   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5058:5059   */\n      0x00\n        /* \"#utility.yul\":5051:5139   */\n      mstore\n        /* \"#utility.yul\":5158:5162   */\n      0x41\n        /* \"#utility.yul\":5155:5156   */\n      0x04\n        /* \"#utility.yul\":5148:5163   */\n      mstore\n        /* \"#utility.yul\":5182:5186   */\n      0x24\n        /* \"#utility.yul\":5179:5180   */\n      0x00\n        /* \"#utility.yul\":5172:5187   */\n      revert\n        /* \"#utility.yul\":5199:5480   */\n    tag_228:\n        /* \"#utility.yul\":5282:5309   */\n      tag_321\n        /* \"#utility.yul\":5304:5308   */\n      dup3\n        /* \"#utility.yul\":5282:5309   */\n      tag_225\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":5274:5280   */\n      dup2\n        /* \"#utility.yul\":5270:5310   */\n      add\n        /* \"#utility.yul\":5412:5418   */\n      dup2\n        /* \"#utility.yul\":5400:5410   */\n      dup2\n        /* \"#utility.yul\":5397:5419   */\n      lt\n        /* \"#utility.yul\":5376:5394   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5364:5374   */\n      dup3\n        /* \"#utility.yul\":5361:5395   */\n      gt\n        /* \"#utility.yul\":5358:5420   */\n      or\n        /* \"#utility.yul\":5355:5443   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":5423:5441   */\n      tag_323\n      tag_82\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5355:5443   */\n    tag_322:\n        /* \"#utility.yul\":5463:5473   */\n      dup1\n        /* \"#utility.yul\":5459:5461   */\n      0x40\n        /* \"#utility.yul\":5452:5474   */\n      mstore\n        /* \"#utility.yul\":5242:5480   */\n      pop\n        /* \"#utility.yul\":5199:5480   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5486:5615   */\n    tag_229:\n        /* \"#utility.yul\":5520:5526   */\n      0x00\n        /* \"#utility.yul\":5547:5567   */\n      tag_325\n      tag_206\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":5537:5567   */\n      swap1\n      pop\n        /* \"#utility.yul\":5576:5609   */\n      tag_326\n        /* \"#utility.yul\":5604:5608   */\n      dup3\n        /* \"#utility.yul\":5596:5602   */\n      dup3\n        /* \"#utility.yul\":5576:5609   */\n      tag_228\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":5486:5615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5621:5932   */\n    tag_230:\n        /* \"#utility.yul\":5698:5702   */\n      0x00\n        /* \"#utility.yul\":5788:5806   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5780:5786   */\n      dup3\n        /* \"#utility.yul\":5777:5807   */\n      gt\n        /* \"#utility.yul\":5774:5830   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":5810:5828   */\n      tag_329\n      tag_82\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":5774:5830   */\n    tag_328:\n        /* \"#utility.yul\":5860:5864   */\n      0x20\n        /* \"#utility.yul\":5852:5858   */\n      dup3\n        /* \"#utility.yul\":5848:5865   */\n      mul\n        /* \"#utility.yul\":5840:5865   */\n      swap1\n      pop\n        /* \"#utility.yul\":5920:5924   */\n      0x20\n        /* \"#utility.yul\":5914:5918   */\n      dup2\n        /* \"#utility.yul\":5910:5925   */\n      add\n        /* \"#utility.yul\":5902:5925   */\n      swap1\n      pop\n        /* \"#utility.yul\":5621:5932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5938:6055   */\n    tag_231:\n        /* \"#utility.yul\":6047:6048   */\n      0x00\n        /* \"#utility.yul\":6044:6045   */\n      dup1\n        /* \"#utility.yul\":6037:6049   */\n      revert\n        /* \"#utility.yul\":6078:6788   */\n    tag_232:\n        /* \"#utility.yul\":6174:6179   */\n      0x00\n        /* \"#utility.yul\":6199:6280   */\n      tag_332\n        /* \"#utility.yul\":6215:6279   */\n      tag_333\n        /* \"#utility.yul\":6272:6278   */\n      dup5\n        /* \"#utility.yul\":6215:6279   */\n      tag_230\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":6199:6280   */\n      tag_229\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":6190:6280   */\n      swap1\n      pop\n        /* \"#utility.yul\":6300:6305   */\n      dup1\n        /* \"#utility.yul\":6329:6335   */\n      dup4\n        /* \"#utility.yul\":6322:6327   */\n      dup3\n        /* \"#utility.yul\":6315:6336   */\n      mstore\n        /* \"#utility.yul\":6363:6367   */\n      0x20\n        /* \"#utility.yul\":6356:6361   */\n      dup3\n        /* \"#utility.yul\":6352:6368   */\n      add\n        /* \"#utility.yul\":6345:6368   */\n      swap1\n      pop\n        /* \"#utility.yul\":6416:6420   */\n      0x20\n        /* \"#utility.yul\":6408:6414   */\n      dup5\n        /* \"#utility.yul\":6404:6421   */\n      mul\n        /* \"#utility.yul\":6396:6402   */\n      dup4\n        /* \"#utility.yul\":6392:6422   */\n      add\n        /* \"#utility.yul\":6445:6448   */\n      dup6\n        /* \"#utility.yul\":6437:6443   */\n      dup2\n        /* \"#utility.yul\":6434:6449   */\n      gt\n        /* \"#utility.yul\":6431:6553   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":6464:6543   */\n      tag_335\n      tag_231\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6431:6553   */\n    tag_334:\n        /* \"#utility.yul\":6579:6585   */\n      dup4\n        /* \"#utility.yul\":6562:6782   */\n    tag_336:\n        /* \"#utility.yul\":6596:6602   */\n      dup2\n        /* \"#utility.yul\":6591:6594   */\n      dup2\n        /* \"#utility.yul\":6588:6603   */\n      lt\n        /* \"#utility.yul\":6562:6782   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":6671:6674   */\n      dup1\n        /* \"#utility.yul\":6700:6737   */\n      tag_339\n        /* \"#utility.yul\":6733:6736   */\n      dup9\n        /* \"#utility.yul\":6721:6731   */\n      dup3\n        /* \"#utility.yul\":6700:6737   */\n      tag_215\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":6695:6698   */\n      dup5\n        /* \"#utility.yul\":6688:6738   */\n      mstore\n        /* \"#utility.yul\":6767:6771   */\n      0x20\n        /* \"#utility.yul\":6762:6765   */\n      dup5\n        /* \"#utility.yul\":6758:6772   */\n      add\n        /* \"#utility.yul\":6751:6772   */\n      swap4\n      pop\n        /* \"#utility.yul\":6638:6782   */\n      pop\n        /* \"#utility.yul\":6622:6626   */\n      0x20\n        /* \"#utility.yul\":6617:6620   */\n      dup2\n        /* \"#utility.yul\":6613:6627   */\n      add\n        /* \"#utility.yul\":6606:6627   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6782   */\n      jump(tag_336)\n    tag_338:\n        /* \"#utility.yul\":6566:6587   */\n      pop\n        /* \"#utility.yul\":6180:6788   */\n      pop\n      pop\n        /* \"#utility.yul\":6078:6788   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6811:7181   */\n    tag_233:\n        /* \"#utility.yul\":6882:6887   */\n      0x00\n        /* \"#utility.yul\":6931:6934   */\n      dup3\n        /* \"#utility.yul\":6924:6928   */\n      0x1f\n        /* \"#utility.yul\":6916:6922   */\n      dup4\n        /* \"#utility.yul\":6912:6929   */\n      add\n        /* \"#utility.yul\":6908:6935   */\n      slt\n        /* \"#utility.yul\":6898:7020   */\n      tag_341\n      jumpi\n        /* \"#utility.yul\":6939:7018   */\n      tag_342\n      tag_227\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":6898:7020   */\n    tag_341:\n        /* \"#utility.yul\":7056:7062   */\n      dup2\n        /* \"#utility.yul\":7043:7063   */\n      calldataload\n        /* \"#utility.yul\":7081:7175   */\n      tag_343\n        /* \"#utility.yul\":7171:7174   */\n      dup5\n        /* \"#utility.yul\":7163:7169   */\n      dup3\n        /* \"#utility.yul\":7156:7160   */\n      0x20\n        /* \"#utility.yul\":7148:7154   */\n      dup7\n        /* \"#utility.yul\":7144:7161   */\n      add\n        /* \"#utility.yul\":7081:7175   */\n      tag_232\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":7072:7175   */\n      swap2\n      pop\n        /* \"#utility.yul\":6888:7181   */\n      pop\n        /* \"#utility.yul\":6811:7181   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7187:7304   */\n    tag_234:\n        /* \"#utility.yul\":7296:7297   */\n      0x00\n        /* \"#utility.yul\":7293:7294   */\n      dup1\n        /* \"#utility.yul\":7286:7298   */\n      revert\n        /* \"#utility.yul\":7310:7617   */\n    tag_235:\n        /* \"#utility.yul\":7371:7375   */\n      0x00\n        /* \"#utility.yul\":7461:7479   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7453:7459   */\n      dup3\n        /* \"#utility.yul\":7450:7480   */\n      gt\n        /* \"#utility.yul\":7447:7503   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":7483:7501   */\n      tag_347\n      tag_82\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":7447:7503   */\n    tag_346:\n        /* \"#utility.yul\":7521:7550   */\n      tag_348\n        /* \"#utility.yul\":7543:7549   */\n      dup3\n        /* \"#utility.yul\":7521:7550   */\n      tag_225\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":7513:7550   */\n      swap1\n      pop\n        /* \"#utility.yul\":7605:7609   */\n      0x20\n        /* \"#utility.yul\":7599:7603   */\n      dup2\n        /* \"#utility.yul\":7595:7610   */\n      add\n        /* \"#utility.yul\":7587:7610   */\n      swap1\n      pop\n        /* \"#utility.yul\":7310:7617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7623:7769   */\n    tag_236:\n        /* \"#utility.yul\":7720:7726   */\n      dup3\n        /* \"#utility.yul\":7715:7718   */\n      dup2\n        /* \"#utility.yul\":7710:7713   */\n      dup4\n        /* \"#utility.yul\":7697:7727   */\n      calldatacopy\n        /* \"#utility.yul\":7761:7762   */\n      0x00\n        /* \"#utility.yul\":7752:7758   */\n      dup4\n        /* \"#utility.yul\":7747:7750   */\n      dup4\n        /* \"#utility.yul\":7743:7759   */\n      add\n        /* \"#utility.yul\":7736:7763   */\n      mstore\n        /* \"#utility.yul\":7623:7769   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7775:8198   */\n    tag_237:\n        /* \"#utility.yul\":7852:7857   */\n      0x00\n        /* \"#utility.yul\":7877:7942   */\n      tag_351\n        /* \"#utility.yul\":7893:7941   */\n      tag_352\n        /* \"#utility.yul\":7934:7940   */\n      dup5\n        /* \"#utility.yul\":7893:7941   */\n      tag_235\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":7877:7942   */\n      tag_229\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":7868:7942   */\n      swap1\n      pop\n        /* \"#utility.yul\":7965:7971   */\n      dup3\n        /* \"#utility.yul\":7958:7963   */\n      dup2\n        /* \"#utility.yul\":7951:7972   */\n      mstore\n        /* \"#utility.yul\":8003:8007   */\n      0x20\n        /* \"#utility.yul\":7996:8001   */\n      dup2\n        /* \"#utility.yul\":7992:8008   */\n      add\n        /* \"#utility.yul\":8041:8044   */\n      dup5\n        /* \"#utility.yul\":8032:8038   */\n      dup5\n        /* \"#utility.yul\":8027:8030   */\n      dup5\n        /* \"#utility.yul\":8023:8039   */\n      add\n        /* \"#utility.yul\":8020:8045   */\n      gt\n        /* \"#utility.yul\":8017:8129   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":8048:8127   */\n      tag_354\n      tag_234\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":8017:8129   */\n    tag_353:\n        /* \"#utility.yul\":8138:8192   */\n      tag_355\n        /* \"#utility.yul\":8185:8191   */\n      dup5\n        /* \"#utility.yul\":8180:8183   */\n      dup3\n        /* \"#utility.yul\":8175:8178   */\n      dup6\n        /* \"#utility.yul\":8138:8192   */\n      tag_236\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":7858:8198   */\n      pop\n        /* \"#utility.yul\":7775:8198   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8217:8555   */\n    tag_238:\n        /* \"#utility.yul\":8272:8277   */\n      0x00\n        /* \"#utility.yul\":8321:8324   */\n      dup3\n        /* \"#utility.yul\":8314:8318   */\n      0x1f\n        /* \"#utility.yul\":8306:8312   */\n      dup4\n        /* \"#utility.yul\":8302:8319   */\n      add\n        /* \"#utility.yul\":8298:8325   */\n      slt\n        /* \"#utility.yul\":8288:8410   */\n      tag_357\n      jumpi\n        /* \"#utility.yul\":8329:8408   */\n      tag_358\n      tag_227\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":8288:8410   */\n    tag_357:\n        /* \"#utility.yul\":8446:8452   */\n      dup2\n        /* \"#utility.yul\":8433:8453   */\n      calldataload\n        /* \"#utility.yul\":8471:8549   */\n      tag_359\n        /* \"#utility.yul\":8545:8548   */\n      dup5\n        /* \"#utility.yul\":8537:8543   */\n      dup3\n        /* \"#utility.yul\":8530:8534   */\n      0x20\n        /* \"#utility.yul\":8522:8528   */\n      dup7\n        /* \"#utility.yul\":8518:8535   */\n      add\n        /* \"#utility.yul\":8471:8549   */\n      tag_237\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":8462:8549   */\n      swap2\n      pop\n        /* \"#utility.yul\":8278:8555   */\n      pop\n        /* \"#utility.yul\":8217:8555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8561:10070   */\n    tag_32:\n        /* \"#utility.yul\":8715:8721   */\n      0x00\n        /* \"#utility.yul\":8723:8729   */\n      dup1\n        /* \"#utility.yul\":8731:8737   */\n      0x00\n        /* \"#utility.yul\":8739:8745   */\n      dup1\n        /* \"#utility.yul\":8747:8753   */\n      0x00\n        /* \"#utility.yul\":8796:8799   */\n      0xa0\n        /* \"#utility.yul\":8784:8793   */\n      dup7\n        /* \"#utility.yul\":8775:8782   */\n      dup9\n        /* \"#utility.yul\":8771:8794   */\n      sub\n        /* \"#utility.yul\":8767:8800   */\n      slt\n        /* \"#utility.yul\":8764:8884   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":8803:8882   */\n      tag_362\n      tag_207\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":8764:8884   */\n    tag_361:\n        /* \"#utility.yul\":8923:8924   */\n      0x00\n        /* \"#utility.yul\":8948:9001   */\n      tag_363\n        /* \"#utility.yul\":8993:9000   */\n      dup9\n        /* \"#utility.yul\":8984:8990   */\n      dup3\n        /* \"#utility.yul\":8973:8982   */\n      dup10\n        /* \"#utility.yul\":8969:8991   */\n      add\n        /* \"#utility.yul\":8948:9001   */\n      tag_212\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":8938:9001   */\n      swap6\n      pop\n        /* \"#utility.yul\":8894:9011   */\n      pop\n        /* \"#utility.yul\":9050:9052   */\n      0x20\n        /* \"#utility.yul\":9076:9129   */\n      tag_364\n        /* \"#utility.yul\":9121:9128   */\n      dup9\n        /* \"#utility.yul\":9112:9118   */\n      dup3\n        /* \"#utility.yul\":9101:9110   */\n      dup10\n        /* \"#utility.yul\":9097:9119   */\n      add\n        /* \"#utility.yul\":9076:9129   */\n      tag_212\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":9066:9129   */\n      swap5\n      pop\n        /* \"#utility.yul\":9021:9139   */\n      pop\n        /* \"#utility.yul\":9206:9208   */\n      0x40\n        /* \"#utility.yul\":9195:9204   */\n      dup7\n        /* \"#utility.yul\":9191:9209   */\n      add\n        /* \"#utility.yul\":9178:9210   */\n      calldataload\n        /* \"#utility.yul\":9237:9255   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9229:9235   */\n      dup2\n        /* \"#utility.yul\":9226:9256   */\n      gt\n        /* \"#utility.yul\":9223:9340   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":9259:9338   */\n      tag_366\n      tag_208\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":9223:9340   */\n    tag_365:\n        /* \"#utility.yul\":9364:9442   */\n      tag_367\n        /* \"#utility.yul\":9434:9441   */\n      dup9\n        /* \"#utility.yul\":9425:9431   */\n      dup3\n        /* \"#utility.yul\":9414:9423   */\n      dup10\n        /* \"#utility.yul\":9410:9432   */\n      add\n        /* \"#utility.yul\":9364:9442   */\n      tag_233\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":9354:9442   */\n      swap4\n      pop\n        /* \"#utility.yul\":9149:9452   */\n      pop\n        /* \"#utility.yul\":9519:9521   */\n      0x60\n        /* \"#utility.yul\":9508:9517   */\n      dup7\n        /* \"#utility.yul\":9504:9522   */\n      add\n        /* \"#utility.yul\":9491:9523   */\n      calldataload\n        /* \"#utility.yul\":9550:9568   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9542:9548   */\n      dup2\n        /* \"#utility.yul\":9539:9569   */\n      gt\n        /* \"#utility.yul\":9536:9653   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":9572:9651   */\n      tag_369\n      tag_208\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":9536:9653   */\n    tag_368:\n        /* \"#utility.yul\":9677:9755   */\n      tag_370\n        /* \"#utility.yul\":9747:9754   */\n      dup9\n        /* \"#utility.yul\":9738:9744   */\n      dup3\n        /* \"#utility.yul\":9727:9736   */\n      dup10\n        /* \"#utility.yul\":9723:9745   */\n      add\n        /* \"#utility.yul\":9677:9755   */\n      tag_233\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":9667:9755   */\n      swap3\n      pop\n        /* \"#utility.yul\":9462:9765   */\n      pop\n        /* \"#utility.yul\":9832:9835   */\n      0x80\n        /* \"#utility.yul\":9821:9830   */\n      dup7\n        /* \"#utility.yul\":9817:9836   */\n      add\n        /* \"#utility.yul\":9804:9837   */\n      calldataload\n        /* \"#utility.yul\":9864:9882   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9856:9862   */\n      dup2\n        /* \"#utility.yul\":9853:9883   */\n      gt\n        /* \"#utility.yul\":9850:9967   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":9886:9965   */\n      tag_372\n      tag_208\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":9850:9967   */\n    tag_371:\n        /* \"#utility.yul\":9991:10053   */\n      tag_373\n        /* \"#utility.yul\":10045:10052   */\n      dup9\n        /* \"#utility.yul\":10036:10042   */\n      dup3\n        /* \"#utility.yul\":10025:10034   */\n      dup10\n        /* \"#utility.yul\":10021:10043   */\n      add\n        /* \"#utility.yul\":9991:10053   */\n      tag_238\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":9981:10053   */\n      swap2\n      pop\n        /* \"#utility.yul\":9775:10063   */\n      pop\n        /* \"#utility.yul\":8561:10070   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10076:10387   */\n    tag_239:\n        /* \"#utility.yul\":10153:10157   */\n      0x00\n        /* \"#utility.yul\":10243:10261   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10235:10241   */\n      dup3\n        /* \"#utility.yul\":10232:10262   */\n      gt\n        /* \"#utility.yul\":10229:10285   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":10265:10283   */\n      tag_376\n      tag_82\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":10229:10285   */\n    tag_375:\n        /* \"#utility.yul\":10315:10319   */\n      0x20\n        /* \"#utility.yul\":10307:10313   */\n      dup3\n        /* \"#utility.yul\":10303:10320   */\n      mul\n        /* \"#utility.yul\":10295:10320   */\n      swap1\n      pop\n        /* \"#utility.yul\":10375:10379   */\n      0x20\n        /* \"#utility.yul\":10369:10373   */\n      dup2\n        /* \"#utility.yul\":10365:10380   */\n      add\n        /* \"#utility.yul\":10357:10380   */\n      swap1\n      pop\n        /* \"#utility.yul\":10076:10387   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10410:11120   */\n    tag_240:\n        /* \"#utility.yul\":10506:10511   */\n      0x00\n        /* \"#utility.yul\":10531:10612   */\n      tag_378\n        /* \"#utility.yul\":10547:10611   */\n      tag_379\n        /* \"#utility.yul\":10604:10610   */\n      dup5\n        /* \"#utility.yul\":10547:10611   */\n      tag_239\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":10531:10612   */\n      tag_229\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":10522:10612   */\n      swap1\n      pop\n        /* \"#utility.yul\":10632:10637   */\n      dup1\n        /* \"#utility.yul\":10661:10667   */\n      dup4\n        /* \"#utility.yul\":10654:10659   */\n      dup3\n        /* \"#utility.yul\":10647:10668   */\n      mstore\n        /* \"#utility.yul\":10695:10699   */\n      0x20\n        /* \"#utility.yul\":10688:10693   */\n      dup3\n        /* \"#utility.yul\":10684:10700   */\n      add\n        /* \"#utility.yul\":10677:10700   */\n      swap1\n      pop\n        /* \"#utility.yul\":10748:10752   */\n      0x20\n        /* \"#utility.yul\":10740:10746   */\n      dup5\n        /* \"#utility.yul\":10736:10753   */\n      mul\n        /* \"#utility.yul\":10728:10734   */\n      dup4\n        /* \"#utility.yul\":10724:10754   */\n      add\n        /* \"#utility.yul\":10777:10780   */\n      dup6\n        /* \"#utility.yul\":10769:10775   */\n      dup2\n        /* \"#utility.yul\":10766:10781   */\n      gt\n        /* \"#utility.yul\":10763:10885   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":10796:10875   */\n      tag_381\n      tag_231\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":10763:10885   */\n    tag_380:\n        /* \"#utility.yul\":10911:10917   */\n      dup4\n        /* \"#utility.yul\":10894:11114   */\n    tag_382:\n        /* \"#utility.yul\":10928:10934   */\n      dup2\n        /* \"#utility.yul\":10923:10926   */\n      dup2\n        /* \"#utility.yul\":10920:10935   */\n      lt\n        /* \"#utility.yul\":10894:11114   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":11003:11006   */\n      dup1\n        /* \"#utility.yul\":11032:11069   */\n      tag_385\n        /* \"#utility.yul\":11065:11068   */\n      dup9\n        /* \"#utility.yul\":11053:11063   */\n      dup3\n        /* \"#utility.yul\":11032:11069   */\n      tag_212\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":11027:11030   */\n      dup5\n        /* \"#utility.yul\":11020:11070   */\n      mstore\n        /* \"#utility.yul\":11099:11103   */\n      0x20\n        /* \"#utility.yul\":11094:11097   */\n      dup5\n        /* \"#utility.yul\":11090:11104   */\n      add\n        /* \"#utility.yul\":11083:11104   */\n      swap4\n      pop\n        /* \"#utility.yul\":10970:11114   */\n      pop\n        /* \"#utility.yul\":10954:10958   */\n      0x20\n        /* \"#utility.yul\":10949:10952   */\n      dup2\n        /* \"#utility.yul\":10945:10959   */\n      add\n        /* \"#utility.yul\":10938:10959   */\n      swap1\n      pop\n        /* \"#utility.yul\":10894:11114   */\n      jump(tag_382)\n    tag_384:\n        /* \"#utility.yul\":10898:10919   */\n      pop\n        /* \"#utility.yul\":10512:11120   */\n      pop\n      pop\n        /* \"#utility.yul\":10410:11120   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11143:11513   */\n    tag_241:\n        /* \"#utility.yul\":11214:11219   */\n      0x00\n        /* \"#utility.yul\":11263:11266   */\n      dup3\n        /* \"#utility.yul\":11256:11260   */\n      0x1f\n        /* \"#utility.yul\":11248:11254   */\n      dup4\n        /* \"#utility.yul\":11244:11261   */\n      add\n        /* \"#utility.yul\":11240:11267   */\n      slt\n        /* \"#utility.yul\":11230:11352   */\n      tag_387\n      jumpi\n        /* \"#utility.yul\":11271:11350   */\n      tag_388\n      tag_227\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":11230:11352   */\n    tag_387:\n        /* \"#utility.yul\":11388:11394   */\n      dup2\n        /* \"#utility.yul\":11375:11395   */\n      calldataload\n        /* \"#utility.yul\":11413:11507   */\n      tag_389\n        /* \"#utility.yul\":11503:11506   */\n      dup5\n        /* \"#utility.yul\":11495:11501   */\n      dup3\n        /* \"#utility.yul\":11488:11492   */\n      0x20\n        /* \"#utility.yul\":11480:11486   */\n      dup7\n        /* \"#utility.yul\":11476:11493   */\n      add\n        /* \"#utility.yul\":11413:11507   */\n      tag_240\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":11404:11507   */\n      swap2\n      pop\n        /* \"#utility.yul\":11220:11513   */\n      pop\n        /* \"#utility.yul\":11143:11513   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11519:12413   */\n    tag_36:\n        /* \"#utility.yul\":11637:11643   */\n      0x00\n        /* \"#utility.yul\":11645:11651   */\n      dup1\n        /* \"#utility.yul\":11694:11696   */\n      0x40\n        /* \"#utility.yul\":11682:11691   */\n      dup4\n        /* \"#utility.yul\":11673:11680   */\n      dup6\n        /* \"#utility.yul\":11669:11692   */\n      sub\n        /* \"#utility.yul\":11665:11697   */\n      slt\n        /* \"#utility.yul\":11662:11781   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":11700:11779   */\n      tag_392\n      tag_207\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":11662:11781   */\n    tag_391:\n        /* \"#utility.yul\":11848:11849   */\n      0x00\n        /* \"#utility.yul\":11837:11846   */\n      dup4\n        /* \"#utility.yul\":11833:11850   */\n      add\n        /* \"#utility.yul\":11820:11851   */\n      calldataload\n        /* \"#utility.yul\":11878:11896   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11870:11876   */\n      dup2\n        /* \"#utility.yul\":11867:11897   */\n      gt\n        /* \"#utility.yul\":11864:11981   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":11900:11979   */\n      tag_394\n      tag_208\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":11864:11981   */\n    tag_393:\n        /* \"#utility.yul\":12005:12083   */\n      tag_395\n        /* \"#utility.yul\":12075:12082   */\n      dup6\n        /* \"#utility.yul\":12066:12072   */\n      dup3\n        /* \"#utility.yul\":12055:12064   */\n      dup7\n        /* \"#utility.yul\":12051:12073   */\n      add\n        /* \"#utility.yul\":12005:12083   */\n      tag_241\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":11995:12083   */\n      swap3\n      pop\n        /* \"#utility.yul\":11791:12093   */\n      pop\n        /* \"#utility.yul\":12160:12162   */\n      0x20\n        /* \"#utility.yul\":12149:12158   */\n      dup4\n        /* \"#utility.yul\":12145:12163   */\n      add\n        /* \"#utility.yul\":12132:12164   */\n      calldataload\n        /* \"#utility.yul\":12191:12209   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12183:12189   */\n      dup2\n        /* \"#utility.yul\":12180:12210   */\n      gt\n        /* \"#utility.yul\":12177:12294   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":12213:12292   */\n      tag_397\n      tag_208\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":12177:12294   */\n    tag_396:\n        /* \"#utility.yul\":12318:12396   */\n      tag_398\n        /* \"#utility.yul\":12388:12395   */\n      dup6\n        /* \"#utility.yul\":12379:12385   */\n      dup3\n        /* \"#utility.yul\":12368:12377   */\n      dup7\n        /* \"#utility.yul\":12364:12386   */\n      add\n        /* \"#utility.yul\":12318:12396   */\n      tag_233\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":12308:12396   */\n      swap2\n      pop\n        /* \"#utility.yul\":12103:12406   */\n      pop\n        /* \"#utility.yul\":11519:12413   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12419:12533   */\n    tag_242:\n        /* \"#utility.yul\":12486:12492   */\n      0x00\n        /* \"#utility.yul\":12520:12525   */\n      dup2\n        /* \"#utility.yul\":12514:12526   */\n      mload\n        /* \"#utility.yul\":12504:12526   */\n      swap1\n      pop\n        /* \"#utility.yul\":12419:12533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12539:12723   */\n    tag_243:\n        /* \"#utility.yul\":12638:12649   */\n      0x00\n        /* \"#utility.yul\":12672:12678   */\n      dup3\n        /* \"#utility.yul\":12667:12670   */\n      dup3\n        /* \"#utility.yul\":12660:12679   */\n      mstore\n        /* \"#utility.yul\":12712:12716   */\n      0x20\n        /* \"#utility.yul\":12707:12710   */\n      dup3\n        /* \"#utility.yul\":12703:12717   */\n      add\n        /* \"#utility.yul\":12688:12717   */\n      swap1\n      pop\n        /* \"#utility.yul\":12539:12723   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12729:12861   */\n    tag_244:\n        /* \"#utility.yul\":12796:12800   */\n      0x00\n        /* \"#utility.yul\":12819:12822   */\n      dup2\n        /* \"#utility.yul\":12811:12822   */\n      swap1\n      pop\n        /* \"#utility.yul\":12849:12853   */\n      0x20\n        /* \"#utility.yul\":12844:12847   */\n      dup3\n        /* \"#utility.yul\":12840:12854   */\n      add\n        /* \"#utility.yul\":12832:12854   */\n      swap1\n      pop\n        /* \"#utility.yul\":12729:12861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12867:12975   */\n    tag_245:\n        /* \"#utility.yul\":12944:12968   */\n      tag_403\n        /* \"#utility.yul\":12962:12967   */\n      dup2\n        /* \"#utility.yul\":12944:12968   */\n      tag_213\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":12939:12942   */\n      dup3\n        /* \"#utility.yul\":12932:12969   */\n      mstore\n        /* \"#utility.yul\":12867:12975   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12981:13160   */\n    tag_246:\n        /* \"#utility.yul\":13050:13060   */\n      0x00\n        /* \"#utility.yul\":13071:13117   */\n      tag_405\n        /* \"#utility.yul\":13113:13116   */\n      dup4\n        /* \"#utility.yul\":13105:13111   */\n      dup4\n        /* \"#utility.yul\":13071:13117   */\n      tag_245\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":13149:13153   */\n      0x20\n        /* \"#utility.yul\":13144:13147   */\n      dup4\n        /* \"#utility.yul\":13140:13154   */\n      add\n        /* \"#utility.yul\":13126:13154   */\n      swap1\n      pop\n        /* \"#utility.yul\":12981:13160   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13166:13279   */\n    tag_247:\n        /* \"#utility.yul\":13236:13240   */\n      0x00\n        /* \"#utility.yul\":13268:13272   */\n      0x20\n        /* \"#utility.yul\":13263:13266   */\n      dup3\n        /* \"#utility.yul\":13259:13273   */\n      add\n        /* \"#utility.yul\":13251:13273   */\n      swap1\n      pop\n        /* \"#utility.yul\":13166:13279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13315:14047   */\n    tag_248:\n        /* \"#utility.yul\":13434:13437   */\n      0x00\n        /* \"#utility.yul\":13463:13517   */\n      tag_408\n        /* \"#utility.yul\":13511:13516   */\n      dup3\n        /* \"#utility.yul\":13463:13517   */\n      tag_242\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":13533:13619   */\n      tag_409\n        /* \"#utility.yul\":13612:13618   */\n      dup2\n        /* \"#utility.yul\":13607:13610   */\n      dup6\n        /* \"#utility.yul\":13533:13619   */\n      tag_243\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":13526:13619   */\n      swap4\n      pop\n        /* \"#utility.yul\":13643:13699   */\n      tag_410\n        /* \"#utility.yul\":13693:13698   */\n      dup4\n        /* \"#utility.yul\":13643:13699   */\n      tag_244\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":13722:13729   */\n      dup1\n        /* \"#utility.yul\":13753:13754   */\n      0x00\n        /* \"#utility.yul\":13738:14022   */\n    tag_411:\n        /* \"#utility.yul\":13763:13769   */\n      dup4\n        /* \"#utility.yul\":13760:13761   */\n      dup2\n        /* \"#utility.yul\":13757:13770   */\n      lt\n        /* \"#utility.yul\":13738:14022   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":13839:13845   */\n      dup2\n        /* \"#utility.yul\":13833:13846   */\n      mload\n        /* \"#utility.yul\":13866:13929   */\n      tag_414\n        /* \"#utility.yul\":13925:13928   */\n      dup9\n        /* \"#utility.yul\":13910:13923   */\n      dup3\n        /* \"#utility.yul\":13866:13929   */\n      tag_246\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":13859:13929   */\n      swap8\n      pop\n        /* \"#utility.yul\":13952:14012   */\n      tag_415\n        /* \"#utility.yul\":14005:14011   */\n      dup4\n        /* \"#utility.yul\":13952:14012   */\n      tag_247\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":13942:14012   */\n      swap3\n      pop\n        /* \"#utility.yul\":13798:14022   */\n      pop\n        /* \"#utility.yul\":13785:13786   */\n      0x01\n        /* \"#utility.yul\":13782:13783   */\n      dup2\n        /* \"#utility.yul\":13778:13787   */\n      add\n        /* \"#utility.yul\":13773:13787   */\n      swap1\n      pop\n        /* \"#utility.yul\":13738:14022   */\n      jump(tag_411)\n    tag_413:\n        /* \"#utility.yul\":13742:13756   */\n      pop\n        /* \"#utility.yul\":14038:14041   */\n      dup6\n        /* \"#utility.yul\":14031:14041   */\n      swap4\n      pop\n        /* \"#utility.yul\":13439:14047   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13315:14047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14053:14426   */\n    tag_39:\n        /* \"#utility.yul\":14196:14200   */\n      0x00\n        /* \"#utility.yul\":14234:14236   */\n      0x20\n        /* \"#utility.yul\":14223:14232   */\n      dup3\n        /* \"#utility.yul\":14219:14237   */\n      add\n        /* \"#utility.yul\":14211:14237   */\n      swap1\n      pop\n        /* \"#utility.yul\":14283:14292   */\n      dup2\n        /* \"#utility.yul\":14277:14281   */\n      dup2\n        /* \"#utility.yul\":14273:14293   */\n      sub\n        /* \"#utility.yul\":14269:14270   */\n      0x00\n        /* \"#utility.yul\":14258:14267   */\n      dup4\n        /* \"#utility.yul\":14254:14271   */\n      add\n        /* \"#utility.yul\":14247:14294   */\n      mstore\n        /* \"#utility.yul\":14311:14419   */\n      tag_417\n        /* \"#utility.yul\":14414:14418   */\n      dup2\n        /* \"#utility.yul\":14405:14411   */\n      dup5\n        /* \"#utility.yul\":14311:14419   */\n      tag_248\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":14303:14419   */\n      swap1\n      pop\n        /* \"#utility.yul\":14053:14426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14432:14548   */\n    tag_249:\n        /* \"#utility.yul\":14502:14523   */\n      tag_419\n        /* \"#utility.yul\":14517:14522   */\n      dup2\n        /* \"#utility.yul\":14502:14523   */\n      tag_220\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":14495:14500   */\n      dup2\n        /* \"#utility.yul\":14492:14524   */\n      eq\n        /* \"#utility.yul\":14482:14542   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":14538:14539   */\n      0x00\n        /* \"#utility.yul\":14535:14536   */\n      dup1\n        /* \"#utility.yul\":14528:14540   */\n      revert\n        /* \"#utility.yul\":14482:14542   */\n    tag_420:\n        /* \"#utility.yul\":14432:14548   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14554:14687   */\n    tag_250:\n        /* \"#utility.yul\":14597:14602   */\n      0x00\n        /* \"#utility.yul\":14635:14641   */\n      dup2\n        /* \"#utility.yul\":14622:14642   */\n      calldataload\n        /* \"#utility.yul\":14613:14642   */\n      swap1\n      pop\n        /* \"#utility.yul\":14651:14681   */\n      tag_422\n        /* \"#utility.yul\":14675:14680   */\n      dup2\n        /* \"#utility.yul\":14651:14681   */\n      tag_249\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":14554:14687   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14693:15161   */\n    tag_42:\n        /* \"#utility.yul\":14758:14764   */\n      0x00\n        /* \"#utility.yul\":14766:14772   */\n      dup1\n        /* \"#utility.yul\":14815:14817   */\n      0x40\n        /* \"#utility.yul\":14803:14812   */\n      dup4\n        /* \"#utility.yul\":14794:14801   */\n      dup6\n        /* \"#utility.yul\":14790:14813   */\n      sub\n        /* \"#utility.yul\":14786:14818   */\n      slt\n        /* \"#utility.yul\":14783:14902   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":14821:14900   */\n      tag_425\n      tag_207\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":14783:14902   */\n    tag_424:\n        /* \"#utility.yul\":14941:14942   */\n      0x00\n        /* \"#utility.yul\":14966:15019   */\n      tag_426\n        /* \"#utility.yul\":15011:15018   */\n      dup6\n        /* \"#utility.yul\":15002:15008   */\n      dup3\n        /* \"#utility.yul\":14991:15000   */\n      dup7\n        /* \"#utility.yul\":14987:15009   */\n      add\n        /* \"#utility.yul\":14966:15019   */\n      tag_212\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":14956:15019   */\n      swap3\n      pop\n        /* \"#utility.yul\":14912:15029   */\n      pop\n        /* \"#utility.yul\":15068:15070   */\n      0x20\n        /* \"#utility.yul\":15094:15144   */\n      tag_427\n        /* \"#utility.yul\":15136:15143   */\n      dup6\n        /* \"#utility.yul\":15127:15133   */\n      dup3\n        /* \"#utility.yul\":15116:15125   */\n      dup7\n        /* \"#utility.yul\":15112:15134   */\n      add\n        /* \"#utility.yul\":15094:15144   */\n      tag_250\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":15084:15144   */\n      swap2\n      pop\n        /* \"#utility.yul\":15039:15154   */\n      pop\n        /* \"#utility.yul\":14693:15161   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15167:15641   */\n    tag_46:\n        /* \"#utility.yul\":15235:15241   */\n      0x00\n        /* \"#utility.yul\":15243:15249   */\n      dup1\n        /* \"#utility.yul\":15292:15294   */\n      0x40\n        /* \"#utility.yul\":15280:15289   */\n      dup4\n        /* \"#utility.yul\":15271:15278   */\n      dup6\n        /* \"#utility.yul\":15267:15290   */\n      sub\n        /* \"#utility.yul\":15263:15295   */\n      slt\n        /* \"#utility.yul\":15260:15379   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":15298:15377   */\n      tag_430\n      tag_207\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":15260:15379   */\n    tag_429:\n        /* \"#utility.yul\":15418:15419   */\n      0x00\n        /* \"#utility.yul\":15443:15496   */\n      tag_431\n        /* \"#utility.yul\":15488:15495   */\n      dup6\n        /* \"#utility.yul\":15479:15485   */\n      dup3\n        /* \"#utility.yul\":15468:15477   */\n      dup7\n        /* \"#utility.yul\":15464:15486   */\n      add\n        /* \"#utility.yul\":15443:15496   */\n      tag_212\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":15433:15496   */\n      swap3\n      pop\n        /* \"#utility.yul\":15389:15506   */\n      pop\n        /* \"#utility.yul\":15545:15547   */\n      0x20\n        /* \"#utility.yul\":15571:15624   */\n      tag_432\n        /* \"#utility.yul\":15616:15623   */\n      dup6\n        /* \"#utility.yul\":15607:15613   */\n      dup3\n        /* \"#utility.yul\":15596:15605   */\n      dup7\n        /* \"#utility.yul\":15592:15614   */\n      add\n        /* \"#utility.yul\":15571:15624   */\n      tag_212\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":15561:15624   */\n      swap2\n      pop\n        /* \"#utility.yul\":15516:15634   */\n      pop\n        /* \"#utility.yul\":15167:15641   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15647:16736   */\n    tag_51:\n        /* \"#utility.yul\":15751:15757   */\n      0x00\n        /* \"#utility.yul\":15759:15765   */\n      dup1\n        /* \"#utility.yul\":15767:15773   */\n      0x00\n        /* \"#utility.yul\":15775:15781   */\n      dup1\n        /* \"#utility.yul\":15783:15789   */\n      0x00\n        /* \"#utility.yul\":15832:15835   */\n      0xa0\n        /* \"#utility.yul\":15820:15829   */\n      dup7\n        /* \"#utility.yul\":15811:15818   */\n      dup9\n        /* \"#utility.yul\":15807:15830   */\n      sub\n        /* \"#utility.yul\":15803:15836   */\n      slt\n        /* \"#utility.yul\":15800:15920   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":15839:15918   */\n      tag_435\n      tag_207\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":15800:15920   */\n    tag_434:\n        /* \"#utility.yul\":15959:15960   */\n      0x00\n        /* \"#utility.yul\":15984:16037   */\n      tag_436\n        /* \"#utility.yul\":16029:16036   */\n      dup9\n        /* \"#utility.yul\":16020:16026   */\n      dup3\n        /* \"#utility.yul\":16009:16018   */\n      dup10\n        /* \"#utility.yul\":16005:16027   */\n      add\n        /* \"#utility.yul\":15984:16037   */\n      tag_212\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":15974:16037   */\n      swap6\n      pop\n        /* \"#utility.yul\":15930:16047   */\n      pop\n        /* \"#utility.yul\":16086:16088   */\n      0x20\n        /* \"#utility.yul\":16112:16165   */\n      tag_437\n        /* \"#utility.yul\":16157:16164   */\n      dup9\n        /* \"#utility.yul\":16148:16154   */\n      dup3\n        /* \"#utility.yul\":16137:16146   */\n      dup10\n        /* \"#utility.yul\":16133:16155   */\n      add\n        /* \"#utility.yul\":16112:16165   */\n      tag_212\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":16102:16165   */\n      swap5\n      pop\n        /* \"#utility.yul\":16057:16175   */\n      pop\n        /* \"#utility.yul\":16214:16216   */\n      0x40\n        /* \"#utility.yul\":16240:16293   */\n      tag_438\n        /* \"#utility.yul\":16285:16292   */\n      dup9\n        /* \"#utility.yul\":16276:16282   */\n      dup3\n        /* \"#utility.yul\":16265:16274   */\n      dup10\n        /* \"#utility.yul\":16261:16283   */\n      add\n        /* \"#utility.yul\":16240:16293   */\n      tag_215\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":16230:16293   */\n      swap4\n      pop\n        /* \"#utility.yul\":16185:16303   */\n      pop\n        /* \"#utility.yul\":16342:16344   */\n      0x60\n        /* \"#utility.yul\":16368:16421   */\n      tag_439\n        /* \"#utility.yul\":16413:16420   */\n      dup9\n        /* \"#utility.yul\":16404:16410   */\n      dup3\n        /* \"#utility.yul\":16393:16402   */\n      dup10\n        /* \"#utility.yul\":16389:16411   */\n      add\n        /* \"#utility.yul\":16368:16421   */\n      tag_215\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":16358:16421   */\n      swap3\n      pop\n        /* \"#utility.yul\":16313:16431   */\n      pop\n        /* \"#utility.yul\":16498:16501   */\n      0x80\n        /* \"#utility.yul\":16487:16496   */\n      dup7\n        /* \"#utility.yul\":16483:16502   */\n      add\n        /* \"#utility.yul\":16470:16503   */\n      calldataload\n        /* \"#utility.yul\":16530:16548   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16522:16528   */\n      dup2\n        /* \"#utility.yul\":16519:16549   */\n      gt\n        /* \"#utility.yul\":16516:16633   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":16552:16631   */\n      tag_441\n      tag_208\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":16516:16633   */\n    tag_440:\n        /* \"#utility.yul\":16657:16719   */\n      tag_442\n        /* \"#utility.yul\":16711:16718   */\n      dup9\n        /* \"#utility.yul\":16702:16708   */\n      dup3\n        /* \"#utility.yul\":16691:16700   */\n      dup10\n        /* \"#utility.yul\":16687:16709   */\n      add\n        /* \"#utility.yul\":16657:16719   */\n      tag_238\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":16647:16719   */\n      swap2\n      pop\n        /* \"#utility.yul\":16441:16729   */\n      pop\n        /* \"#utility.yul\":15647:16736   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16742:16922   */\n    tag_251:\n        /* \"#utility.yul\":16790:16867   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16787:16788   */\n      0x00\n        /* \"#utility.yul\":16780:16868   */\n      mstore\n        /* \"#utility.yul\":16887:16891   */\n      0x22\n        /* \"#utility.yul\":16884:16885   */\n      0x04\n        /* \"#utility.yul\":16877:16892   */\n      mstore\n        /* \"#utility.yul\":16911:16915   */\n      0x24\n        /* \"#utility.yul\":16908:16909   */\n      0x00\n        /* \"#utility.yul\":16901:16916   */\n      revert\n        /* \"#utility.yul\":16928:17248   */\n    tag_61:\n        /* \"#utility.yul\":16972:16978   */\n      0x00\n        /* \"#utility.yul\":17009:17010   */\n      0x02\n        /* \"#utility.yul\":17003:17007   */\n      dup3\n        /* \"#utility.yul\":16999:17011   */\n      div\n        /* \"#utility.yul\":16989:17011   */\n      swap1\n      pop\n        /* \"#utility.yul\":17056:17057   */\n      0x01\n        /* \"#utility.yul\":17050:17054   */\n      dup3\n        /* \"#utility.yul\":17046:17058   */\n      and\n        /* \"#utility.yul\":17077:17095   */\n      dup1\n        /* \"#utility.yul\":17067:17148   */\n      tag_445\n      jumpi\n        /* \"#utility.yul\":17133:17137   */\n      0x7f\n        /* \"#utility.yul\":17125:17131   */\n      dup3\n        /* \"#utility.yul\":17121:17138   */\n      and\n        /* \"#utility.yul\":17111:17138   */\n      swap2\n      pop\n        /* \"#utility.yul\":17067:17148   */\n    tag_445:\n        /* \"#utility.yul\":17195:17197   */\n      0x20\n        /* \"#utility.yul\":17187:17193   */\n      dup3\n        /* \"#utility.yul\":17184:17198   */\n      lt\n        /* \"#utility.yul\":17164:17182   */\n      dup2\n        /* \"#utility.yul\":17161:17199   */\n      sub\n        /* \"#utility.yul\":17158:17242   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":17214:17232   */\n      tag_447\n      tag_251\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":17158:17242   */\n    tag_446:\n        /* \"#utility.yul\":16979:17248   */\n      pop\n        /* \"#utility.yul\":16928:17248   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17254:17372   */\n    tag_252:\n        /* \"#utility.yul\":17341:17365   */\n      tag_449\n        /* \"#utility.yul\":17359:17364   */\n      dup2\n        /* \"#utility.yul\":17341:17365   */\n      tag_210\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":17336:17339   */\n      dup3\n        /* \"#utility.yul\":17329:17366   */\n      mstore\n        /* \"#utility.yul\":17254:17372   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17378:17710   */\n    tag_73:\n        /* \"#utility.yul\":17499:17503   */\n      0x00\n        /* \"#utility.yul\":17537:17539   */\n      0x40\n        /* \"#utility.yul\":17526:17535   */\n      dup3\n        /* \"#utility.yul\":17522:17540   */\n      add\n        /* \"#utility.yul\":17514:17540   */\n      swap1\n      pop\n        /* \"#utility.yul\":17550:17621   */\n      tag_451\n        /* \"#utility.yul\":17618:17619   */\n      0x00\n        /* \"#utility.yul\":17607:17616   */\n      dup4\n        /* \"#utility.yul\":17603:17620   */\n      add\n        /* \"#utility.yul\":17594:17600   */\n      dup6\n        /* \"#utility.yul\":17550:17621   */\n      tag_252\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":17631:17703   */\n      tag_452\n        /* \"#utility.yul\":17699:17701   */\n      0x20\n        /* \"#utility.yul\":17688:17697   */\n      dup4\n        /* \"#utility.yul\":17684:17702   */\n      add\n        /* \"#utility.yul\":17675:17681   */\n      dup5\n        /* \"#utility.yul\":17631:17703   */\n      tag_252\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":17378:17710   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17716:18048   */\n    tag_79:\n        /* \"#utility.yul\":17837:17841   */\n      0x00\n        /* \"#utility.yul\":17875:17877   */\n      0x40\n        /* \"#utility.yul\":17864:17873   */\n      dup3\n        /* \"#utility.yul\":17860:17878   */\n      add\n        /* \"#utility.yul\":17852:17878   */\n      swap1\n      pop\n        /* \"#utility.yul\":17888:17959   */\n      tag_454\n        /* \"#utility.yul\":17956:17957   */\n      0x00\n        /* \"#utility.yul\":17945:17954   */\n      dup4\n        /* \"#utility.yul\":17941:17958   */\n      add\n        /* \"#utility.yul\":17932:17938   */\n      dup6\n        /* \"#utility.yul\":17888:17959   */\n      tag_216\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":17969:18041   */\n      tag_455\n        /* \"#utility.yul\":18037:18039   */\n      0x20\n        /* \"#utility.yul\":18026:18035   */\n      dup4\n        /* \"#utility.yul\":18022:18040   */\n      add\n        /* \"#utility.yul\":18013:18019   */\n      dup5\n        /* \"#utility.yul\":17969:18041   */\n      tag_216\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":17716:18048   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18054:18234   */\n    tag_94:\n        /* \"#utility.yul\":18102:18179   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18099:18100   */\n      0x00\n        /* \"#utility.yul\":18092:18180   */\n      mstore\n        /* \"#utility.yul\":18199:18203   */\n      0x32\n        /* \"#utility.yul\":18196:18197   */\n      0x04\n        /* \"#utility.yul\":18189:18204   */\n      mstore\n        /* \"#utility.yul\":18223:18227   */\n      0x24\n        /* \"#utility.yul\":18220:18221   */\n      0x00\n        /* \"#utility.yul\":18213:18228   */\n      revert\n        /* \"#utility.yul\":18240:18462   */\n    tag_113:\n        /* \"#utility.yul\":18333:18337   */\n      0x00\n        /* \"#utility.yul\":18371:18373   */\n      0x20\n        /* \"#utility.yul\":18360:18369   */\n      dup3\n        /* \"#utility.yul\":18356:18374   */\n      add\n        /* \"#utility.yul\":18348:18374   */\n      swap1\n      pop\n        /* \"#utility.yul\":18384:18455   */\n      tag_458\n        /* \"#utility.yul\":18452:18453   */\n      0x00\n        /* \"#utility.yul\":18441:18450   */\n      dup4\n        /* \"#utility.yul\":18437:18454   */\n      add\n        /* \"#utility.yul\":18428:18434   */\n      dup5\n        /* \"#utility.yul\":18384:18455   */\n      tag_252\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":18240:18462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18468:19021   */\n    tag_158:\n        /* \"#utility.yul\":18645:18649   */\n      0x00\n        /* \"#utility.yul\":18683:18686   */\n      0x80\n        /* \"#utility.yul\":18672:18681   */\n      dup3\n        /* \"#utility.yul\":18668:18687   */\n      add\n        /* \"#utility.yul\":18660:18687   */\n      swap1\n      pop\n        /* \"#utility.yul\":18697:18768   */\n      tag_460\n        /* \"#utility.yul\":18765:18766   */\n      0x00\n        /* \"#utility.yul\":18754:18763   */\n      dup4\n        /* \"#utility.yul\":18750:18767   */\n      add\n        /* \"#utility.yul\":18741:18747   */\n      dup8\n        /* \"#utility.yul\":18697:18768   */\n      tag_252\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":18778:18850   */\n      tag_461\n        /* \"#utility.yul\":18846:18848   */\n      0x20\n        /* \"#utility.yul\":18835:18844   */\n      dup4\n        /* \"#utility.yul\":18831:18849   */\n      add\n        /* \"#utility.yul\":18822:18828   */\n      dup7\n        /* \"#utility.yul\":18778:18850   */\n      tag_216\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":18860:18932   */\n      tag_462\n        /* \"#utility.yul\":18928:18930   */\n      0x40\n        /* \"#utility.yul\":18917:18926   */\n      dup4\n        /* \"#utility.yul\":18913:18931   */\n      add\n        /* \"#utility.yul\":18904:18910   */\n      dup6\n        /* \"#utility.yul\":18860:18932   */\n      tag_216\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":18942:19014   */\n      tag_463\n        /* \"#utility.yul\":19010:19012   */\n      0x60\n        /* \"#utility.yul\":18999:19008   */\n      dup4\n        /* \"#utility.yul\":18995:19013   */\n      add\n        /* \"#utility.yul\":18986:18992   */\n      dup5\n        /* \"#utility.yul\":18942:19014   */\n      tag_216\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":18468:19021   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19027:19207   */\n    tag_253:\n        /* \"#utility.yul\":19075:19152   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19072:19073   */\n      0x00\n        /* \"#utility.yul\":19065:19153   */\n      mstore\n        /* \"#utility.yul\":19172:19176   */\n      0x11\n        /* \"#utility.yul\":19169:19170   */\n      0x04\n        /* \"#utility.yul\":19162:19177   */\n      mstore\n        /* \"#utility.yul\":19196:19200   */\n      0x24\n        /* \"#utility.yul\":19193:19194   */\n      0x00\n        /* \"#utility.yul\":19186:19201   */\n      revert\n        /* \"#utility.yul\":19213:19404   */\n    tag_161:\n        /* \"#utility.yul\":19253:19256   */\n      0x00\n        /* \"#utility.yul\":19272:19292   */\n      tag_466\n        /* \"#utility.yul\":19290:19291   */\n      dup3\n        /* \"#utility.yul\":19272:19292   */\n      tag_213\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":19267:19292   */\n      swap2\n      pop\n        /* \"#utility.yul\":19306:19326   */\n      tag_467\n        /* \"#utility.yul\":19324:19325   */\n      dup4\n        /* \"#utility.yul\":19306:19326   */\n      tag_213\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":19301:19326   */\n      swap3\n      pop\n        /* \"#utility.yul\":19349:19350   */\n      dup3\n        /* \"#utility.yul\":19346:19347   */\n      dup3\n        /* \"#utility.yul\":19342:19351   */\n      add\n        /* \"#utility.yul\":19335:19351   */\n      swap1\n      pop\n        /* \"#utility.yul\":19370:19373   */\n      dup1\n        /* \"#utility.yul\":19367:19368   */\n      dup3\n        /* \"#utility.yul\":19364:19374   */\n      gt\n        /* \"#utility.yul\":19361:19397   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":19377:19395   */\n      tag_469\n      tag_253\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":19361:19397   */\n    tag_468:\n        /* \"#utility.yul\":19213:19404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19410:20044   */\n    tag_168:\n        /* \"#utility.yul\":19631:19635   */\n      0x00\n        /* \"#utility.yul\":19669:19671   */\n      0x40\n        /* \"#utility.yul\":19658:19667   */\n      dup3\n        /* \"#utility.yul\":19654:19672   */\n      add\n        /* \"#utility.yul\":19646:19672   */\n      swap1\n      pop\n        /* \"#utility.yul\":19718:19727   */\n      dup2\n        /* \"#utility.yul\":19712:19716   */\n      dup2\n        /* \"#utility.yul\":19708:19728   */\n      sub\n        /* \"#utility.yul\":19704:19705   */\n      0x00\n        /* \"#utility.yul\":19693:19702   */\n      dup4\n        /* \"#utility.yul\":19689:19706   */\n      add\n        /* \"#utility.yul\":19682:19729   */\n      mstore\n        /* \"#utility.yul\":19746:19854   */\n      tag_471\n        /* \"#utility.yul\":19849:19853   */\n      dup2\n        /* \"#utility.yul\":19840:19846   */\n      dup6\n        /* \"#utility.yul\":19746:19854   */\n      tag_248\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":19738:19854   */\n      swap1\n      pop\n        /* \"#utility.yul\":19901:19910   */\n      dup2\n        /* \"#utility.yul\":19895:19899   */\n      dup2\n        /* \"#utility.yul\":19891:19911   */\n      sub\n        /* \"#utility.yul\":19886:19888   */\n      0x20\n        /* \"#utility.yul\":19875:19884   */\n      dup4\n        /* \"#utility.yul\":19871:19889   */\n      add\n        /* \"#utility.yul\":19864:19912   */\n      mstore\n        /* \"#utility.yul\":19929:20037   */\n      tag_472\n        /* \"#utility.yul\":20032:20036   */\n      dup2\n        /* \"#utility.yul\":20023:20029   */\n      dup5\n        /* \"#utility.yul\":19929:20037   */\n      tag_248\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":19921:20037   */\n      swap1\n      pop\n        /* \"#utility.yul\":19410:20044   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20050:20148   */\n    tag_254:\n        /* \"#utility.yul\":20101:20107   */\n      0x00\n        /* \"#utility.yul\":20135:20140   */\n      dup2\n        /* \"#utility.yul\":20129:20141   */\n      mload\n        /* \"#utility.yul\":20119:20141   */\n      swap1\n      pop\n        /* \"#utility.yul\":20050:20148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20154:20322   */\n    tag_255:\n        /* \"#utility.yul\":20237:20248   */\n      0x00\n        /* \"#utility.yul\":20271:20277   */\n      dup3\n        /* \"#utility.yul\":20266:20269   */\n      dup3\n        /* \"#utility.yul\":20259:20278   */\n      mstore\n        /* \"#utility.yul\":20311:20315   */\n      0x20\n        /* \"#utility.yul\":20306:20309   */\n      dup3\n        /* \"#utility.yul\":20302:20316   */\n      add\n        /* \"#utility.yul\":20287:20316   */\n      swap1\n      pop\n        /* \"#utility.yul\":20154:20322   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20328:20701   */\n    tag_256:\n        /* \"#utility.yul\":20414:20417   */\n      0x00\n        /* \"#utility.yul\":20442:20480   */\n      tag_476\n        /* \"#utility.yul\":20474:20479   */\n      dup3\n        /* \"#utility.yul\":20442:20480   */\n      tag_254\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":20496:20566   */\n      tag_477\n        /* \"#utility.yul\":20559:20565   */\n      dup2\n        /* \"#utility.yul\":20554:20557   */\n      dup6\n        /* \"#utility.yul\":20496:20566   */\n      tag_255\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":20489:20566   */\n      swap4\n      pop\n        /* \"#utility.yul\":20575:20640   */\n      tag_478\n        /* \"#utility.yul\":20633:20639   */\n      dup2\n        /* \"#utility.yul\":20628:20631   */\n      dup6\n        /* \"#utility.yul\":20621:20625   */\n      0x20\n        /* \"#utility.yul\":20614:20619   */\n      dup7\n        /* \"#utility.yul\":20610:20626   */\n      add\n        /* \"#utility.yul\":20575:20640   */\n      tag_224\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":20665:20694   */\n      tag_479\n        /* \"#utility.yul\":20687:20693   */\n      dup2\n        /* \"#utility.yul\":20665:20694   */\n      tag_225\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":20660:20663   */\n      dup5\n        /* \"#utility.yul\":20656:20695   */\n      add\n        /* \"#utility.yul\":20649:20695   */\n      swap2\n      pop\n        /* \"#utility.yul\":20418:20701   */\n      pop\n        /* \"#utility.yul\":20328:20701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20707:21458   */\n    tag_172:\n        /* \"#utility.yul\":20930:20934   */\n      0x00\n        /* \"#utility.yul\":20968:20971   */\n      0xa0\n        /* \"#utility.yul\":20957:20966   */\n      dup3\n        /* \"#utility.yul\":20953:20972   */\n      add\n        /* \"#utility.yul\":20945:20972   */\n      swap1\n      pop\n        /* \"#utility.yul\":20982:21053   */\n      tag_481\n        /* \"#utility.yul\":21050:21051   */\n      0x00\n        /* \"#utility.yul\":21039:21048   */\n      dup4\n        /* \"#utility.yul\":21035:21052   */\n      add\n        /* \"#utility.yul\":21026:21032   */\n      dup9\n        /* \"#utility.yul\":20982:21053   */\n      tag_252\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":21063:21135   */\n      tag_482\n        /* \"#utility.yul\":21131:21133   */\n      0x20\n        /* \"#utility.yul\":21120:21129   */\n      dup4\n        /* \"#utility.yul\":21116:21134   */\n      add\n        /* \"#utility.yul\":21107:21113   */\n      dup8\n        /* \"#utility.yul\":21063:21135   */\n      tag_252\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":21145:21217   */\n      tag_483\n        /* \"#utility.yul\":21213:21215   */\n      0x40\n        /* \"#utility.yul\":21202:21211   */\n      dup4\n        /* \"#utility.yul\":21198:21216   */\n      add\n        /* \"#utility.yul\":21189:21195   */\n      dup7\n        /* \"#utility.yul\":21145:21217   */\n      tag_216\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":21227:21299   */\n      tag_484\n        /* \"#utility.yul\":21295:21297   */\n      0x60\n        /* \"#utility.yul\":21284:21293   */\n      dup4\n        /* \"#utility.yul\":21280:21298   */\n      add\n        /* \"#utility.yul\":21271:21277   */\n      dup6\n        /* \"#utility.yul\":21227:21299   */\n      tag_216\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":21347:21356   */\n      dup2\n        /* \"#utility.yul\":21341:21345   */\n      dup2\n        /* \"#utility.yul\":21337:21357   */\n      sub\n        /* \"#utility.yul\":21331:21334   */\n      0x80\n        /* \"#utility.yul\":21320:21329   */\n      dup4\n        /* \"#utility.yul\":21316:21335   */\n      add\n        /* \"#utility.yul\":21309:21358   */\n      mstore\n        /* \"#utility.yul\":21375:21451   */\n      tag_485\n        /* \"#utility.yul\":21446:21450   */\n      dup2\n        /* \"#utility.yul\":21437:21443   */\n      dup5\n        /* \"#utility.yul\":21375:21451   */\n      tag_256\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":21367:21451   */\n      swap1\n      pop\n        /* \"#utility.yul\":20707:21458   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21464:21605   */\n    tag_257:\n        /* \"#utility.yul\":21520:21525   */\n      0x00\n        /* \"#utility.yul\":21551:21557   */\n      dup2\n        /* \"#utility.yul\":21545:21558   */\n      mload\n        /* \"#utility.yul\":21536:21558   */\n      swap1\n      pop\n        /* \"#utility.yul\":21567:21599   */\n      tag_487\n        /* \"#utility.yul\":21593:21598   */\n      dup2\n        /* \"#utility.yul\":21567:21599   */\n      tag_218\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":21464:21605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21611:21960   */\n    tag_175:\n        /* \"#utility.yul\":21680:21686   */\n      0x00\n        /* \"#utility.yul\":21729:21731   */\n      0x20\n        /* \"#utility.yul\":21717:21726   */\n      dup3\n        /* \"#utility.yul\":21708:21715   */\n      dup5\n        /* \"#utility.yul\":21704:21727   */\n      sub\n        /* \"#utility.yul\":21700:21732   */\n      slt\n        /* \"#utility.yul\":21697:21816   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":21735:21814   */\n      tag_490\n      tag_207\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":21697:21816   */\n    tag_489:\n        /* \"#utility.yul\":21855:21856   */\n      0x00\n        /* \"#utility.yul\":21880:21943   */\n      tag_491\n        /* \"#utility.yul\":21935:21942   */\n      dup5\n        /* \"#utility.yul\":21926:21932   */\n      dup3\n        /* \"#utility.yul\":21915:21924   */\n      dup6\n        /* \"#utility.yul\":21911:21933   */\n      add\n        /* \"#utility.yul\":21880:21943   */\n      tag_257\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":21870:21943   */\n      swap2\n      pop\n        /* \"#utility.yul\":21826:21953   */\n      pop\n        /* \"#utility.yul\":21611:21960   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21966:23019   */\n    tag_191:\n        /* \"#utility.yul\":22289:22293   */\n      0x00\n        /* \"#utility.yul\":22327:22330   */\n      0xa0\n        /* \"#utility.yul\":22316:22325   */\n      dup3\n        /* \"#utility.yul\":22312:22331   */\n      add\n        /* \"#utility.yul\":22304:22331   */\n      swap1\n      pop\n        /* \"#utility.yul\":22341:22412   */\n      tag_493\n        /* \"#utility.yul\":22409:22410   */\n      0x00\n        /* \"#utility.yul\":22398:22407   */\n      dup4\n        /* \"#utility.yul\":22394:22411   */\n      add\n        /* \"#utility.yul\":22385:22391   */\n      dup9\n        /* \"#utility.yul\":22341:22412   */\n      tag_252\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":22422:22494   */\n      tag_494\n        /* \"#utility.yul\":22490:22492   */\n      0x20\n        /* \"#utility.yul\":22479:22488   */\n      dup4\n        /* \"#utility.yul\":22475:22493   */\n      add\n        /* \"#utility.yul\":22466:22472   */\n      dup8\n        /* \"#utility.yul\":22422:22494   */\n      tag_252\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":22541:22550   */\n      dup2\n        /* \"#utility.yul\":22535:22539   */\n      dup2\n        /* \"#utility.yul\":22531:22551   */\n      sub\n        /* \"#utility.yul\":22526:22528   */\n      0x40\n        /* \"#utility.yul\":22515:22524   */\n      dup4\n        /* \"#utility.yul\":22511:22529   */\n      add\n        /* \"#utility.yul\":22504:22552   */\n      mstore\n        /* \"#utility.yul\":22569:22677   */\n      tag_495\n        /* \"#utility.yul\":22672:22676   */\n      dup2\n        /* \"#utility.yul\":22663:22669   */\n      dup7\n        /* \"#utility.yul\":22569:22677   */\n      tag_248\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":22561:22677   */\n      swap1\n      pop\n        /* \"#utility.yul\":22724:22733   */\n      dup2\n        /* \"#utility.yul\":22718:22722   */\n      dup2\n        /* \"#utility.yul\":22714:22734   */\n      sub\n        /* \"#utility.yul\":22709:22711   */\n      0x60\n        /* \"#utility.yul\":22698:22707   */\n      dup4\n        /* \"#utility.yul\":22694:22712   */\n      add\n        /* \"#utility.yul\":22687:22735   */\n      mstore\n        /* \"#utility.yul\":22752:22860   */\n      tag_496\n        /* \"#utility.yul\":22855:22859   */\n      dup2\n        /* \"#utility.yul\":22846:22852   */\n      dup6\n        /* \"#utility.yul\":22752:22860   */\n      tag_248\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":22744:22860   */\n      swap1\n      pop\n        /* \"#utility.yul\":22908:22917   */\n      dup2\n        /* \"#utility.yul\":22902:22906   */\n      dup2\n        /* \"#utility.yul\":22898:22918   */\n      sub\n        /* \"#utility.yul\":22892:22895   */\n      0x80\n        /* \"#utility.yul\":22881:22890   */\n      dup4\n        /* \"#utility.yul\":22877:22896   */\n      add\n        /* \"#utility.yul\":22870:22919   */\n      mstore\n        /* \"#utility.yul\":22936:23012   */\n      tag_497\n        /* \"#utility.yul\":23007:23011   */\n      dup2\n        /* \"#utility.yul\":22998:23004   */\n      dup5\n        /* \"#utility.yul\":22936:23012   */\n      tag_256\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":22928:23012   */\n      swap1\n      pop\n        /* \"#utility.yul\":21966:23019   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a0afe434d9ad0377b4047847bdcc2af6fe13956f49c7645634c99e373f58e7b464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_197": {
									"entryPoint": null,
									"id": 197,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_2793": {
									"entryPoint": null,
									"id": 2793,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_asSingletonArrays_1186": {
									"entryPoint": 292,
									"id": 1186,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_doSafeBatchTransferAcceptanceCheck_1170": {
									"entryPoint": 1969,
									"id": 1170,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1100": {
									"entryPoint": 1523,
									"id": 1100,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_862": {
									"entryPoint": 124,
									"id": 862,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1563": {
									"entryPoint": 1497,
									"id": 1563,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setURI_810": {
									"entryPoint": 103,
									"id": 810,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_678": {
									"entryPoint": 340,
									"id": 678,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_602": {
									"entryPoint": 551,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@unsafeMemoryAccess_1537": {
									"entryPoint": 1504,
									"id": 1537,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 4161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 3645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 3927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 3628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4231,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3991,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3409,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3786,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3366,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 3853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2876,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 3286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 3027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3869,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3484,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2470,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2425,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4089,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2612,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2763,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2806,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13438:12",
										"nodeType": "YulBlock",
										"src": "0:13438:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:12",
													"nodeType": "YulBlock",
													"src": "66:40:12",
													"statements": [
														{
															"nativeSrc": "77:22:12",
															"nodeType": "YulAssignment",
															"src": "77:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:12"
																},
																"nativeSrc": "87:12:12",
																"nodeType": "YulFunctionCall",
																"src": "87:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:12",
														"nodeType": "YulTypedName",
														"src": "49:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:12",
														"nodeType": "YulTypedName",
														"src": "59:6:12",
														"type": ""
													}
												],
												"src": "7:99:12"
											},
											{
												"body": {
													"nativeSrc": "140:152:12",
													"nodeType": "YulBlock",
													"src": "140:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:12",
																		"nodeType": "YulLiteral",
																		"src": "157:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:12",
																		"nodeType": "YulLiteral",
																		"src": "160:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:12"
																},
																"nativeSrc": "150:88:12",
																"nodeType": "YulFunctionCall",
																"src": "150:88:12"
															},
															"nativeSrc": "150:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:12",
																		"nodeType": "YulLiteral",
																		"src": "254:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:12",
																		"nodeType": "YulLiteral",
																		"src": "257:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:12"
																},
																"nativeSrc": "247:15:12",
																"nodeType": "YulFunctionCall",
																"src": "247:15:12"
															},
															"nativeSrc": "247:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:12",
																		"nodeType": "YulLiteral",
																		"src": "278:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:12",
																		"nodeType": "YulLiteral",
																		"src": "281:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:12"
																},
																"nativeSrc": "271:15:12",
																"nodeType": "YulFunctionCall",
																"src": "271:15:12"
															},
															"nativeSrc": "271:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:12"
											},
											{
												"body": {
													"nativeSrc": "326:152:12",
													"nodeType": "YulBlock",
													"src": "326:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:12",
																		"nodeType": "YulLiteral",
																		"src": "343:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:12",
																		"nodeType": "YulLiteral",
																		"src": "346:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:12"
																},
																"nativeSrc": "336:88:12",
																"nodeType": "YulFunctionCall",
																"src": "336:88:12"
															},
															"nativeSrc": "336:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:12",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:12",
																		"nodeType": "YulLiteral",
																		"src": "443:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nativeSrc": "433:15:12",
																"nodeType": "YulFunctionCall",
																"src": "433:15:12"
															},
															"nativeSrc": "433:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:12",
																		"nodeType": "YulLiteral",
																		"src": "464:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:12",
																		"nodeType": "YulLiteral",
																		"src": "467:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:12"
																},
																"nativeSrc": "457:15:12",
																"nodeType": "YulFunctionCall",
																"src": "457:15:12"
															},
															"nativeSrc": "457:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:12"
											},
											{
												"body": {
													"nativeSrc": "535:269:12",
													"nodeType": "YulBlock",
													"src": "535:269:12",
													"statements": [
														{
															"nativeSrc": "545:22:12",
															"nodeType": "YulAssignment",
															"src": "545:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:12",
																		"nodeType": "YulLiteral",
																		"src": "565:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:12"
																},
																"nativeSrc": "555:12:12",
																"nodeType": "YulFunctionCall",
																"src": "555:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:12"
																}
															]
														},
														{
															"nativeSrc": "576:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:12",
																		"nodeType": "YulLiteral",
																		"src": "612:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:12"
																},
																"nativeSrc": "602:12:12",
																"nodeType": "YulFunctionCall",
																"src": "602:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:12",
																	"nodeType": "YulTypedName",
																	"src": "580:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:12",
																"nodeType": "YulBlock",
																"src": "653:51:12",
																"statements": [
																	{
																		"nativeSrc": "667:27:12",
																		"nodeType": "YulAssignment",
																		"src": "667:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:12",
																					"nodeType": "YulLiteral",
																					"src": "689:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:12"
																			},
																			"nativeSrc": "677:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:12"
																},
																"nativeSrc": "626:26:12",
																"nodeType": "YulFunctionCall",
																"src": "626:26:12"
															},
															"nativeSrc": "623:81:12",
															"nodeType": "YulIf",
															"src": "623:81:12"
														},
														{
															"body": {
																"nativeSrc": "756:42:12",
																"nodeType": "YulBlock",
																"src": "756:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:12"
																			},
																			"nativeSrc": "770:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:12"
																		},
																		"nativeSrc": "770:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:12",
																				"nodeType": "YulLiteral",
																				"src": "751:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:12"
																		},
																		"nativeSrc": "740:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:12"
																},
																"nativeSrc": "717:38:12",
																"nodeType": "YulFunctionCall",
																"src": "717:38:12"
															},
															"nativeSrc": "714:84:12",
															"nodeType": "YulIf",
															"src": "714:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:12",
														"nodeType": "YulTypedName",
														"src": "519:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:12",
														"nodeType": "YulTypedName",
														"src": "528:6:12",
														"type": ""
													}
												],
												"src": "484:320:12"
											},
											{
												"body": {
													"nativeSrc": "864:87:12",
													"nodeType": "YulBlock",
													"src": "864:87:12",
													"statements": [
														{
															"nativeSrc": "874:11:12",
															"nodeType": "YulAssignment",
															"src": "874:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:12",
																"nodeType": "YulIdentifier",
																"src": "882:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:12",
																		"nodeType": "YulLiteral",
																		"src": "902:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:12"
																},
																"nativeSrc": "895:14:12",
																"nodeType": "YulFunctionCall",
																"src": "895:14:12"
															},
															"nativeSrc": "895:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:12"
														},
														{
															"nativeSrc": "918:26:12",
															"nodeType": "YulAssignment",
															"src": "918:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:12",
																		"nodeType": "YulLiteral",
																		"src": "936:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:12",
																		"nodeType": "YulLiteral",
																		"src": "939:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:12"
																},
																"nativeSrc": "926:18:12",
																"nodeType": "YulFunctionCall",
																"src": "926:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:12",
														"nodeType": "YulTypedName",
														"src": "851:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:12",
														"nodeType": "YulTypedName",
														"src": "859:4:12",
														"type": ""
													}
												],
												"src": "810:141:12"
											},
											{
												"body": {
													"nativeSrc": "1001:49:12",
													"nodeType": "YulBlock",
													"src": "1001:49:12",
													"statements": [
														{
															"nativeSrc": "1011:33:12",
															"nodeType": "YulAssignment",
															"src": "1011:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:12"
																		},
																		"nativeSrc": "1025:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:12"
																},
																"nativeSrc": "1021:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:12",
														"nodeType": "YulTypedName",
														"src": "984:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:12",
														"nodeType": "YulTypedName",
														"src": "994:6:12",
														"type": ""
													}
												],
												"src": "957:93:12"
											},
											{
												"body": {
													"nativeSrc": "1109:54:12",
													"nodeType": "YulBlock",
													"src": "1109:54:12",
													"statements": [
														{
															"nativeSrc": "1119:37:12",
															"nodeType": "YulAssignment",
															"src": "1119:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:12"
																},
																"nativeSrc": "1140:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:12",
														"nodeType": "YulTypedName",
														"src": "1084:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:12",
														"nodeType": "YulTypedName",
														"src": "1090:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:12",
														"nodeType": "YulTypedName",
														"src": "1100:8:12",
														"type": ""
													}
												],
												"src": "1056:107:12"
											},
											{
												"body": {
													"nativeSrc": "1245:317:12",
													"nodeType": "YulBlock",
													"src": "1245:317:12",
													"statements": [
														{
															"nativeSrc": "1255:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:12"
																},
																"nativeSrc": "1272:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:12",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:12",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:12"
																},
																"nativeSrc": "1311:97:12",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:12",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:12",
															"nodeType": "YulAssignment",
															"src": "1417:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:12"
																},
																"nativeSrc": "1429:39:12",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:12"
																}
															]
														},
														{
															"nativeSrc": "1477:30:12",
															"nodeType": "YulAssignment",
															"src": "1477:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:12"
																		},
																		"nativeSrc": "1497:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:12"
																},
																"nativeSrc": "1486:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:12"
																}
															]
														},
														{
															"nativeSrc": "1516:40:12",
															"nodeType": "YulAssignment",
															"src": "1516:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:12"
																		},
																		"nativeSrc": "1536:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:12"
																},
																"nativeSrc": "1526:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:12",
														"nodeType": "YulTypedName",
														"src": "1206:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:12",
														"nodeType": "YulTypedName",
														"src": "1213:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:12",
														"nodeType": "YulTypedName",
														"src": "1225:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:12",
														"nodeType": "YulTypedName",
														"src": "1238:6:12",
														"type": ""
													}
												],
												"src": "1169:393:12"
											},
											{
												"body": {
													"nativeSrc": "1613:32:12",
													"nodeType": "YulBlock",
													"src": "1613:32:12",
													"statements": [
														{
															"nativeSrc": "1623:16:12",
															"nodeType": "YulAssignment",
															"src": "1623:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:12",
																"nodeType": "YulIdentifier",
																"src": "1634:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:12",
														"nodeType": "YulTypedName",
														"src": "1595:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:12",
														"nodeType": "YulTypedName",
														"src": "1605:7:12",
														"type": ""
													}
												],
												"src": "1568:77:12"
											},
											{
												"body": {
													"nativeSrc": "1683:28:12",
													"nodeType": "YulBlock",
													"src": "1683:28:12",
													"statements": [
														{
															"nativeSrc": "1693:12:12",
															"nodeType": "YulAssignment",
															"src": "1693:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:12",
																"nodeType": "YulIdentifier",
																"src": "1700:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:12",
														"nodeType": "YulTypedName",
														"src": "1669:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:12",
														"nodeType": "YulTypedName",
														"src": "1679:3:12",
														"type": ""
													}
												],
												"src": "1651:60:12"
											},
											{
												"body": {
													"nativeSrc": "1777:82:12",
													"nodeType": "YulBlock",
													"src": "1777:82:12",
													"statements": [
														{
															"nativeSrc": "1787:66:12",
															"nodeType": "YulAssignment",
															"src": "1787:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:12"
																				},
																				"nativeSrc": "1827:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:12"
																		},
																		"nativeSrc": "1818:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:12"
																},
																"nativeSrc": "1800:53:12",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:12",
														"nodeType": "YulTypedName",
														"src": "1757:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:12",
														"nodeType": "YulTypedName",
														"src": "1767:9:12",
														"type": ""
													}
												],
												"src": "1717:142:12"
											},
											{
												"body": {
													"nativeSrc": "1912:28:12",
													"nodeType": "YulBlock",
													"src": "1912:28:12",
													"statements": [
														{
															"nativeSrc": "1922:12:12",
															"nodeType": "YulAssignment",
															"src": "1922:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:12",
																"nodeType": "YulIdentifier",
																"src": "1929:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:12",
														"nodeType": "YulTypedName",
														"src": "1898:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:12",
														"nodeType": "YulTypedName",
														"src": "1908:3:12",
														"type": ""
													}
												],
												"src": "1865:75:12"
											},
											{
												"body": {
													"nativeSrc": "2022:193:12",
													"nodeType": "YulBlock",
													"src": "2022:193:12",
													"statements": [
														{
															"nativeSrc": "2032:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:12"
																},
																"nativeSrc": "2056:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:12",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:12"
																				},
																				"nativeSrc": "2145:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:12"
																				},
																				"nativeSrc": "2166:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:12"
																		},
																		"nativeSrc": "2117:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:12"
																},
																"nativeSrc": "2104:105:12",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:12"
															},
															"nativeSrc": "2104:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:12",
														"nodeType": "YulTypedName",
														"src": "1999:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:12",
														"nodeType": "YulTypedName",
														"src": "2005:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:12",
														"nodeType": "YulTypedName",
														"src": "2013:7:12",
														"type": ""
													}
												],
												"src": "1946:269:12"
											},
											{
												"body": {
													"nativeSrc": "2270:24:12",
													"nodeType": "YulBlock",
													"src": "2270:24:12",
													"statements": [
														{
															"nativeSrc": "2280:8:12",
															"nodeType": "YulAssignment",
															"src": "2280:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:12",
																"nodeType": "YulLiteral",
																"src": "2287:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:12",
														"nodeType": "YulTypedName",
														"src": "2266:3:12",
														"type": ""
													}
												],
												"src": "2221:73:12"
											},
											{
												"body": {
													"nativeSrc": "2353:136:12",
													"nodeType": "YulBlock",
													"src": "2353:136:12",
													"statements": [
														{
															"nativeSrc": "2363:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:12"
																},
																"nativeSrc": "2377:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:12"
																},
																"nativeSrc": "2418:65:12",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:12"
															},
															"nativeSrc": "2418:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:12",
														"nodeType": "YulTypedName",
														"src": "2339:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:12",
														"nodeType": "YulTypedName",
														"src": "2345:6:12",
														"type": ""
													}
												],
												"src": "2300:189:12"
											},
											{
												"body": {
													"nativeSrc": "2545:136:12",
													"nodeType": "YulBlock",
													"src": "2545:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:12",
																"nodeType": "YulBlock",
																"src": "2612:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:12"
																			},
																			"nativeSrc": "2626:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:12"
																		},
																		"nativeSrc": "2626:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:12"
																},
																"nativeSrc": "2562:14:12",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:12"
															},
															"nativeSrc": "2555:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:12",
																"nodeType": "YulBlock",
																"src": "2577:26:12",
																"statements": [
																	{
																		"nativeSrc": "2579:22:12",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:12"
																			},
																			"nativeSrc": "2588:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:12",
																"nodeType": "YulBlock",
																"src": "2559:2:12",
																"statements": []
															},
															"src": "2555:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:12",
														"nodeType": "YulTypedName",
														"src": "2533:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:12",
														"nodeType": "YulTypedName",
														"src": "2540:3:12",
														"type": ""
													}
												],
												"src": "2495:186:12"
											},
											{
												"body": {
													"nativeSrc": "2766:464:12",
													"nodeType": "YulBlock",
													"src": "2766:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:12",
																"nodeType": "YulBlock",
																"src": "2792:431:12",
																"statements": [
																	{
																		"nativeSrc": "2806:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:12"
																			},
																			"nativeSrc": "2822:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:12",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:12"
																					},
																					"nativeSrc": "2906:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:12"
																			},
																			"nativeSrc": "2892:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:12",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:12",
																			"nodeType": "YulBlock",
																			"src": "3093:27:12",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:12",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:12",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:12"
																			},
																			"nativeSrc": "3074:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:12"
																		},
																		"nativeSrc": "3071:49:12",
																		"nodeType": "YulIf",
																		"src": "3071:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:12"
																							},
																							"nativeSrc": "3189:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:12"
																					},
																					"nativeSrc": "3175:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:12"
																			},
																			"nativeSrc": "3133:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:12"
																		},
																		"nativeSrc": "3133:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:12"
																},
																"nativeSrc": "2780:11:12",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:12"
															},
															"nativeSrc": "2777:446:12",
															"nodeType": "YulIf",
															"src": "2777:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:12",
														"nodeType": "YulTypedName",
														"src": "2742:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:12",
														"nodeType": "YulTypedName",
														"src": "2749:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:12",
														"nodeType": "YulTypedName",
														"src": "2754:10:12",
														"type": ""
													}
												],
												"src": "2687:543:12"
											},
											{
												"body": {
													"nativeSrc": "3299:54:12",
													"nodeType": "YulBlock",
													"src": "3299:54:12",
													"statements": [
														{
															"nativeSrc": "3309:37:12",
															"nodeType": "YulAssignment",
															"src": "3309:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:12"
																},
																"nativeSrc": "3330:16:12",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:12",
														"nodeType": "YulTypedName",
														"src": "3274:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:12",
														"nodeType": "YulTypedName",
														"src": "3280:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:12",
														"nodeType": "YulTypedName",
														"src": "3290:8:12",
														"type": ""
													}
												],
												"src": "3236:117:12"
											},
											{
												"body": {
													"nativeSrc": "3410:118:12",
													"nodeType": "YulBlock",
													"src": "3410:118:12",
													"statements": [
														{
															"nativeSrc": "3420:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:12"
																				},
																				"nativeSrc": "3465:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:12"
																				},
																				"nativeSrc": "3480:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:12"
																		},
																		"nativeSrc": "3436:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:12"
																},
																"nativeSrc": "3432:56:12",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:12",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:12",
															"nodeType": "YulAssignment",
															"src": "3497:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:12"
																},
																"nativeSrc": "3507:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:12",
														"nodeType": "YulTypedName",
														"src": "3387:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:12",
														"nodeType": "YulTypedName",
														"src": "3393:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:12",
														"nodeType": "YulTypedName",
														"src": "3403:6:12",
														"type": ""
													}
												],
												"src": "3359:169:12"
											},
											{
												"body": {
													"nativeSrc": "3614:214:12",
													"nodeType": "YulBlock",
													"src": "3614:214:12",
													"statements": [
														{
															"nativeSrc": "3747:37:12",
															"nodeType": "YulAssignment",
															"src": "3747:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:12"
																},
																"nativeSrc": "3755:29:12",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:12"
																}
															]
														},
														{
															"nativeSrc": "3793:29:12",
															"nodeType": "YulAssignment",
															"src": "3793:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:12"
																		},
																		"nativeSrc": "3810:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:12"
																},
																"nativeSrc": "3801:21:12",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:12",
														"nodeType": "YulTypedName",
														"src": "3595:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:12",
														"nodeType": "YulTypedName",
														"src": "3601:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:12",
														"nodeType": "YulTypedName",
														"src": "3609:4:12",
														"type": ""
													}
												],
												"src": "3533:295:12"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:12",
													"nodeType": "YulBlock",
													"src": "3925:1303:12",
													"statements": [
														{
															"nativeSrc": "3936:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:12"
																},
																"nativeSrc": "3950:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:12",
																"nodeType": "YulBlock",
																"src": "4072:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:12"
																			},
																			"nativeSrc": "4074:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:12"
																		},
																		"nativeSrc": "4074:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:12",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:12"
																},
																"nativeSrc": "4041:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:12"
															},
															"nativeSrc": "4038:56:12",
															"nodeType": "YulIf",
															"src": "4038:56:12"
														},
														{
															"nativeSrc": "4104:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:12"
																		},
																		"nativeSrc": "4144:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:12"
																},
																"nativeSrc": "4118:38:12",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:12"
																},
																"nativeSrc": "4203:67:12",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:12"
															},
															"nativeSrc": "4203:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:12"
														},
														{
															"nativeSrc": "4280:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:12",
																"nodeType": "YulLiteral",
																"src": "4297:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:12",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:12",
															"nodeType": "YulAssignment",
															"src": "4308:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:12",
																"nodeType": "YulLiteral",
																"src": "4321:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:12",
																		"nodeType": "YulBlock",
																		"src": "4372:611:12",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:12",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:12"
																							},
																							"nativeSrc": "4413:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:12"
																					},
																					"nativeSrc": "4401:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:12",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:12"
																					},
																					"nativeSrc": "4451:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:12",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:12",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:12",
																					"nodeType": "YulBlock",
																					"src": "4569:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:12"
																												},
																												"nativeSrc": "4608:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:12"
																										},
																										"nativeSrc": "4602:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:12"
																								},
																								"nativeSrc": "4587:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:12"
																							},
																							"nativeSrc": "4587:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:12"
																						},
																						{
																							"nativeSrc": "4646:24:12",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:12",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:12"
																								},
																								"nativeSrc": "4656:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:12",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:12",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:12"
																								},
																								"nativeSrc": "4700:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:12"
																					},
																					"nativeSrc": "4532:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:12"
																				},
																				"nativeSrc": "4524:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:12",
																					"nodeType": "YulBlock",
																					"src": "4547:21:12",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:12",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:12",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:12"
																								},
																								"nativeSrc": "4554:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:12",
																					"nodeType": "YulBlock",
																					"src": "4528:3:12",
																					"statements": []
																				},
																				"src": "4524:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:12",
																					"nodeType": "YulBlock",
																					"src": "4768:156:12",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:12"
																										},
																										"nativeSrc": "4809:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:12"
																								},
																								"nativeSrc": "4803:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:12",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:12",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:12"
																												},
																												"nativeSrc": "4891:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:12"
																										},
																										"nativeSrc": "4861:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:12"
																								},
																								"nativeSrc": "4846:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:12"
																							},
																							"nativeSrc": "4846:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:12"
																					},
																					"nativeSrc": "4748:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:12"
																				},
																				"nativeSrc": "4745:179:12",
																				"nodeType": "YulIf",
																				"src": "4745:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:12",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:12"
																									},
																									"nativeSrc": "4954:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:12",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:12"
																							},
																							"nativeSrc": "4950:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:12"
																					},
																					"nativeSrc": "4937:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:12"
																				},
																				"nativeSrc": "4937:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:12"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:12",
																	"nodeType": "YulCase",
																	"src": "4365:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:12",
																		"nodeType": "YulBlock",
																		"src": "5000:222:12",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:12",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:12",
																					"nodeType": "YulBlock",
																					"src": "5051:67:12",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:12",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:12"
																										},
																										"nativeSrc": "5084:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:12"
																								},
																								"nativeSrc": "5078:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:12"
																				},
																				"nativeSrc": "5041:77:12",
																				"nodeType": "YulIf",
																				"src": "5041:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:12"
																							},
																							"nativeSrc": "5144:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:12"
																					},
																					"nativeSrc": "5131:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:12"
																				},
																				"nativeSrc": "5131:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:12"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:12",
																	"nodeType": "YulCase",
																	"src": "4992:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:12"
																},
																"nativeSrc": "4342:14:12",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:12"
															},
															"nativeSrc": "4335:887:12",
															"nodeType": "YulSwitch",
															"src": "4335:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:12",
														"nodeType": "YulTypedName",
														"src": "3914:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:12",
														"nodeType": "YulTypedName",
														"src": "3920:3:12",
														"type": ""
													}
												],
												"src": "3833:1395:12"
											},
											{
												"body": {
													"nativeSrc": "5279:81:12",
													"nodeType": "YulBlock",
													"src": "5279:81:12",
													"statements": [
														{
															"nativeSrc": "5289:65:12",
															"nodeType": "YulAssignment",
															"src": "5289:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:12",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:12"
																},
																"nativeSrc": "5300:54:12",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:12",
														"nodeType": "YulTypedName",
														"src": "5261:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:12",
														"nodeType": "YulTypedName",
														"src": "5271:7:12",
														"type": ""
													}
												],
												"src": "5234:126:12"
											},
											{
												"body": {
													"nativeSrc": "5411:51:12",
													"nodeType": "YulBlock",
													"src": "5411:51:12",
													"statements": [
														{
															"nativeSrc": "5421:35:12",
															"nodeType": "YulAssignment",
															"src": "5421:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:12"
																},
																"nativeSrc": "5432:24:12",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:12",
														"nodeType": "YulTypedName",
														"src": "5393:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:12",
														"nodeType": "YulTypedName",
														"src": "5403:7:12",
														"type": ""
													}
												],
												"src": "5366:96:12"
											},
											{
												"body": {
													"nativeSrc": "5533:53:12",
													"nodeType": "YulBlock",
													"src": "5533:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:12"
																		},
																		"nativeSrc": "5555:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:12"
																},
																"nativeSrc": "5543:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:12"
															},
															"nativeSrc": "5543:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:12",
														"nodeType": "YulTypedName",
														"src": "5521:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:12",
														"nodeType": "YulTypedName",
														"src": "5528:3:12",
														"type": ""
													}
												],
												"src": "5468:118:12"
											},
											{
												"body": {
													"nativeSrc": "5690:124:12",
													"nodeType": "YulBlock",
													"src": "5690:124:12",
													"statements": [
														{
															"nativeSrc": "5700:26:12",
															"nodeType": "YulAssignment",
															"src": "5700:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:12"
																},
																"nativeSrc": "5708:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:12"
																		},
																		"nativeSrc": "5789:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:12"
																},
																"nativeSrc": "5736:71:12",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:12"
															},
															"nativeSrc": "5736:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:12",
														"nodeType": "YulTypedName",
														"src": "5662:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:12",
														"nodeType": "YulTypedName",
														"src": "5674:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:12",
														"nodeType": "YulTypedName",
														"src": "5685:4:12",
														"type": ""
													}
												],
												"src": "5592:222:12"
											},
											{
												"body": {
													"nativeSrc": "5885:53:12",
													"nodeType": "YulBlock",
													"src": "5885:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5902:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5902:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5925:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5925:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5907:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5907:17:12"
																		},
																		"nativeSrc": "5907:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5907:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5895:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5895:6:12"
																},
																"nativeSrc": "5895:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5895:37:12"
															},
															"nativeSrc": "5895:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5895:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5820:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5873:5:12",
														"nodeType": "YulTypedName",
														"src": "5873:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5880:3:12",
														"nodeType": "YulTypedName",
														"src": "5880:3:12",
														"type": ""
													}
												],
												"src": "5820:118:12"
											},
											{
												"body": {
													"nativeSrc": "6070:206:12",
													"nodeType": "YulBlock",
													"src": "6070:206:12",
													"statements": [
														{
															"nativeSrc": "6080:26:12",
															"nodeType": "YulAssignment",
															"src": "6080:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6092:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6092:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6103:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6103:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6088:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6088:3:12"
																},
																"nativeSrc": "6088:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6088:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6080:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6080:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6160:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6160:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6173:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6173:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6184:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6184:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6169:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6169:3:12"
																		},
																		"nativeSrc": "6169:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6169:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6116:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6116:43:12"
																},
																"nativeSrc": "6116:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6116:71:12"
															},
															"nativeSrc": "6116:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6116:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6241:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6241:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6254:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6254:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6265:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6265:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6250:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6250:3:12"
																		},
																		"nativeSrc": "6250:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6250:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6197:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6197:43:12"
																},
																"nativeSrc": "6197:72:12",
																"nodeType": "YulFunctionCall",
																"src": "6197:72:12"
															},
															"nativeSrc": "6197:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "6197:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5944:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6034:9:12",
														"nodeType": "YulTypedName",
														"src": "6034:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6046:6:12",
														"nodeType": "YulTypedName",
														"src": "6046:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6054:6:12",
														"nodeType": "YulTypedName",
														"src": "6054:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6065:4:12",
														"nodeType": "YulTypedName",
														"src": "6065:4:12",
														"type": ""
													}
												],
												"src": "5944:332:12"
											},
											{
												"body": {
													"nativeSrc": "6464:371:12",
													"nodeType": "YulBlock",
													"src": "6464:371:12",
													"statements": [
														{
															"nativeSrc": "6474:27:12",
															"nodeType": "YulAssignment",
															"src": "6474:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6486:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6486:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6497:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6497:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6482:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6482:3:12"
																},
																"nativeSrc": "6482:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6482:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6474:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6474:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6555:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6555:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6568:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6568:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6579:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6579:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6564:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6564:3:12"
																		},
																		"nativeSrc": "6564:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6564:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6511:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6511:43:12"
																},
																"nativeSrc": "6511:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6511:71:12"
															},
															"nativeSrc": "6511:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6511:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6636:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6636:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6649:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6649:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6660:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6660:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6645:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6645:3:12"
																		},
																		"nativeSrc": "6645:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6645:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6592:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6592:43:12"
																},
																"nativeSrc": "6592:72:12",
																"nodeType": "YulFunctionCall",
																"src": "6592:72:12"
															},
															"nativeSrc": "6592:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "6592:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6718:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6718:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6731:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6731:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6742:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6742:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6727:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6727:3:12"
																		},
																		"nativeSrc": "6727:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6727:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6674:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6674:43:12"
																},
																"nativeSrc": "6674:72:12",
																"nodeType": "YulFunctionCall",
																"src": "6674:72:12"
															},
															"nativeSrc": "6674:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "6674:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6800:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6800:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6813:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6813:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6824:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6824:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6809:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6809:3:12"
																		},
																		"nativeSrc": "6809:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6809:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6756:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6756:43:12"
																},
																"nativeSrc": "6756:72:12",
																"nodeType": "YulFunctionCall",
																"src": "6756:72:12"
															},
															"nativeSrc": "6756:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "6756:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6282:553:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6412:9:12",
														"nodeType": "YulTypedName",
														"src": "6412:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6424:6:12",
														"nodeType": "YulTypedName",
														"src": "6424:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6432:6:12",
														"nodeType": "YulTypedName",
														"src": "6432:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6440:6:12",
														"nodeType": "YulTypedName",
														"src": "6440:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6448:6:12",
														"nodeType": "YulTypedName",
														"src": "6448:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6459:4:12",
														"nodeType": "YulTypedName",
														"src": "6459:4:12",
														"type": ""
													}
												],
												"src": "6282:553:12"
											},
											{
												"body": {
													"nativeSrc": "6869:152:12",
													"nodeType": "YulBlock",
													"src": "6869:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6886:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6886:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6889:77:12",
																		"nodeType": "YulLiteral",
																		"src": "6889:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6879:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6879:6:12"
																},
																"nativeSrc": "6879:88:12",
																"nodeType": "YulFunctionCall",
																"src": "6879:88:12"
															},
															"nativeSrc": "6879:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "6879:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6983:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6983:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6986:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6986:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6976:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6976:6:12"
																},
																"nativeSrc": "6976:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6976:15:12"
															},
															"nativeSrc": "6976:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "6976:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7007:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7007:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7010:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7010:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7000:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7000:6:12"
																},
																"nativeSrc": "7000:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7000:15:12"
															},
															"nativeSrc": "7000:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "7000:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6841:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "6841:180:12"
											},
											{
												"body": {
													"nativeSrc": "7071:147:12",
													"nodeType": "YulBlock",
													"src": "7071:147:12",
													"statements": [
														{
															"nativeSrc": "7081:25:12",
															"nodeType": "YulAssignment",
															"src": "7081:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7104:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7104:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7086:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "7086:17:12"
																},
																"nativeSrc": "7086:20:12",
																"nodeType": "YulFunctionCall",
																"src": "7086:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7081:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "7081:1:12"
																}
															]
														},
														{
															"nativeSrc": "7115:25:12",
															"nodeType": "YulAssignment",
															"src": "7115:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7138:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7138:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7120:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "7120:17:12"
																},
																"nativeSrc": "7120:20:12",
																"nodeType": "YulFunctionCall",
																"src": "7120:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7115:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "7115:1:12"
																}
															]
														},
														{
															"nativeSrc": "7149:16:12",
															"nodeType": "YulAssignment",
															"src": "7149:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7160:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7160:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7163:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7163:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7156:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7156:3:12"
																},
																"nativeSrc": "7156:9:12",
																"nodeType": "YulFunctionCall",
																"src": "7156:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7149:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7149:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7189:22:12",
																"nodeType": "YulBlock",
																"src": "7189:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7191:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "7191:16:12"
																			},
																			"nativeSrc": "7191:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7191:18:12"
																		},
																		"nativeSrc": "7191:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7191:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7181:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7181:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7184:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7184:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7178:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7178:2:12"
																},
																"nativeSrc": "7178:10:12",
																"nodeType": "YulFunctionCall",
																"src": "7178:10:12"
															},
															"nativeSrc": "7175:36:12",
															"nodeType": "YulIf",
															"src": "7175:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7027:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7058:1:12",
														"nodeType": "YulTypedName",
														"src": "7058:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7061:1:12",
														"nodeType": "YulTypedName",
														"src": "7061:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7067:3:12",
														"nodeType": "YulTypedName",
														"src": "7067:3:12",
														"type": ""
													}
												],
												"src": "7027:191:12"
											},
											{
												"body": {
													"nativeSrc": "7298:40:12",
													"nodeType": "YulBlock",
													"src": "7298:40:12",
													"statements": [
														{
															"nativeSrc": "7309:22:12",
															"nodeType": "YulAssignment",
															"src": "7309:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7325:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7325:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7319:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7319:5:12"
																},
																"nativeSrc": "7319:12:12",
																"nodeType": "YulFunctionCall",
																"src": "7319:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7309:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7309:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7224:114:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7281:5:12",
														"nodeType": "YulTypedName",
														"src": "7281:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7291:6:12",
														"nodeType": "YulTypedName",
														"src": "7291:6:12",
														"type": ""
													}
												],
												"src": "7224:114:12"
											},
											{
												"body": {
													"nativeSrc": "7455:73:12",
													"nodeType": "YulBlock",
													"src": "7455:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7472:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7472:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7477:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7477:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7465:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7465:6:12"
																},
																"nativeSrc": "7465:19:12",
																"nodeType": "YulFunctionCall",
																"src": "7465:19:12"
															},
															"nativeSrc": "7465:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "7465:19:12"
														},
														{
															"nativeSrc": "7493:29:12",
															"nodeType": "YulAssignment",
															"src": "7493:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7512:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7512:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7517:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7517:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7508:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7508:3:12"
																},
																"nativeSrc": "7508:14:12",
																"nodeType": "YulFunctionCall",
																"src": "7508:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7493:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "7493:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "7344:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7427:3:12",
														"nodeType": "YulTypedName",
														"src": "7427:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7432:6:12",
														"nodeType": "YulTypedName",
														"src": "7432:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7443:11:12",
														"nodeType": "YulTypedName",
														"src": "7443:11:12",
														"type": ""
													}
												],
												"src": "7344:184:12"
											},
											{
												"body": {
													"nativeSrc": "7606:60:12",
													"nodeType": "YulBlock",
													"src": "7606:60:12",
													"statements": [
														{
															"nativeSrc": "7616:11:12",
															"nodeType": "YulAssignment",
															"src": "7616:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "7624:3:12",
																"nodeType": "YulIdentifier",
																"src": "7624:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7616:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7616:4:12"
																}
															]
														},
														{
															"nativeSrc": "7637:22:12",
															"nodeType": "YulAssignment",
															"src": "7637:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "7649:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7649:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7654:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7654:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7645:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7645:3:12"
																},
																"nativeSrc": "7645:14:12",
																"nodeType": "YulFunctionCall",
																"src": "7645:14:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7637:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7637:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7534:132:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7593:3:12",
														"nodeType": "YulTypedName",
														"src": "7593:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "7601:4:12",
														"nodeType": "YulTypedName",
														"src": "7601:4:12",
														"type": ""
													}
												],
												"src": "7534:132:12"
											},
											{
												"body": {
													"nativeSrc": "7727:53:12",
													"nodeType": "YulBlock",
													"src": "7727:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7744:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7744:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7767:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7767:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7749:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "7749:17:12"
																		},
																		"nativeSrc": "7749:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7749:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7737:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7737:6:12"
																},
																"nativeSrc": "7737:37:12",
																"nodeType": "YulFunctionCall",
																"src": "7737:37:12"
															},
															"nativeSrc": "7737:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "7737:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "7672:108:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7715:5:12",
														"nodeType": "YulTypedName",
														"src": "7715:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7722:3:12",
														"nodeType": "YulTypedName",
														"src": "7722:3:12",
														"type": ""
													}
												],
												"src": "7672:108:12"
											},
											{
												"body": {
													"nativeSrc": "7866:99:12",
													"nodeType": "YulBlock",
													"src": "7866:99:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7910:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7910:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7918:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7918:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "7876:33:12",
																	"nodeType": "YulIdentifier",
																	"src": "7876:33:12"
																},
																"nativeSrc": "7876:46:12",
																"nodeType": "YulFunctionCall",
																"src": "7876:46:12"
															},
															"nativeSrc": "7876:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "7876:46:12"
														},
														{
															"nativeSrc": "7931:28:12",
															"nodeType": "YulAssignment",
															"src": "7931:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7949:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7949:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7954:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7954:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7945:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7945:3:12"
																},
																"nativeSrc": "7945:14:12",
																"nodeType": "YulFunctionCall",
																"src": "7945:14:12"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "7931:10:12",
																	"nodeType": "YulIdentifier",
																	"src": "7931:10:12"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "7786:179:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "7839:6:12",
														"nodeType": "YulTypedName",
														"src": "7839:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7847:3:12",
														"nodeType": "YulTypedName",
														"src": "7847:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "7855:10:12",
														"nodeType": "YulTypedName",
														"src": "7855:10:12",
														"type": ""
													}
												],
												"src": "7786:179:12"
											},
											{
												"body": {
													"nativeSrc": "8046:38:12",
													"nodeType": "YulBlock",
													"src": "8046:38:12",
													"statements": [
														{
															"nativeSrc": "8056:22:12",
															"nodeType": "YulAssignment",
															"src": "8056:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "8068:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8068:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8073:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8073:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8064:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8064:3:12"
																},
																"nativeSrc": "8064:14:12",
																"nodeType": "YulFunctionCall",
																"src": "8064:14:12"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "8056:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8056:4:12"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7971:113:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8033:3:12",
														"nodeType": "YulTypedName",
														"src": "8033:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "8041:4:12",
														"nodeType": "YulTypedName",
														"src": "8041:4:12",
														"type": ""
													}
												],
												"src": "7971:113:12"
											},
											{
												"body": {
													"nativeSrc": "8244:608:12",
													"nodeType": "YulBlock",
													"src": "8244:608:12",
													"statements": [
														{
															"nativeSrc": "8254:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8254:68:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8316:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8316:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "8268:47:12",
																	"nodeType": "YulIdentifier",
																	"src": "8268:47:12"
																},
																"nativeSrc": "8268:54:12",
																"nodeType": "YulFunctionCall",
																"src": "8268:54:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8258:6:12",
																	"nodeType": "YulTypedName",
																	"src": "8258:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8331:93:12",
															"nodeType": "YulAssignment",
															"src": "8331:93:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8412:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8412:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8417:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8417:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8338:73:12",
																	"nodeType": "YulIdentifier",
																	"src": "8338:73:12"
																},
																"nativeSrc": "8338:86:12",
																"nodeType": "YulFunctionCall",
																"src": "8338:86:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8331:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8331:3:12"
																}
															]
														},
														{
															"nativeSrc": "8433:71:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8433:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8498:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8498:5:12"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "8448:49:12",
																	"nodeType": "YulIdentifier",
																	"src": "8448:49:12"
																},
																"nativeSrc": "8448:56:12",
																"nodeType": "YulFunctionCall",
																"src": "8448:56:12"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "8437:7:12",
																	"nodeType": "YulTypedName",
																	"src": "8437:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8513:21:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8513:21:12",
															"value": {
																"name": "baseRef",
																"nativeSrc": "8527:7:12",
																"nodeType": "YulIdentifier",
																"src": "8527:7:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "8517:6:12",
																	"nodeType": "YulTypedName",
																	"src": "8517:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8603:224:12",
																"nodeType": "YulBlock",
																"src": "8603:224:12",
																"statements": [
																	{
																		"nativeSrc": "8617:34:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8617:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8644:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "8644:6:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8638:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "8638:5:12"
																			},
																			"nativeSrc": "8638:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8638:13:12"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "8621:13:12",
																				"nodeType": "YulTypedName",
																				"src": "8621:13:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8664:70:12",
																		"nodeType": "YulAssignment",
																		"src": "8664:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "8715:13:12",
																					"nodeType": "YulIdentifier",
																					"src": "8715:13:12"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "8730:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8730:3:12"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "8671:43:12",
																				"nodeType": "YulIdentifier",
																				"src": "8671:43:12"
																			},
																			"nativeSrc": "8671:63:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8671:63:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "8664:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8664:3:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8747:70:12",
																		"nodeType": "YulAssignment",
																		"src": "8747:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8810:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "8810:6:12"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "8757:52:12",
																				"nodeType": "YulIdentifier",
																				"src": "8757:52:12"
																			},
																			"nativeSrc": "8757:60:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8757:60:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "8747:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8747:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "8565:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8565:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8568:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8568:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8562:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8562:2:12"
																},
																"nativeSrc": "8562:13:12",
																"nodeType": "YulFunctionCall",
																"src": "8562:13:12"
															},
															"nativeSrc": "8543:284:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8576:18:12",
																"nodeType": "YulBlock",
																"src": "8576:18:12",
																"statements": [
																	{
																		"nativeSrc": "8578:14:12",
																		"nodeType": "YulAssignment",
																		"src": "8578:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "8587:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "8587:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8590:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8590:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8583:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8583:3:12"
																			},
																			"nativeSrc": "8583:9:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8583:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "8578:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "8578:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8547:14:12",
																"nodeType": "YulBlock",
																"src": "8547:14:12",
																"statements": [
																	{
																		"nativeSrc": "8549:10:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8549:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8558:1:12",
																			"nodeType": "YulLiteral",
																			"src": "8558:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "8553:1:12",
																				"nodeType": "YulTypedName",
																				"src": "8553:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8543:284:12"
														},
														{
															"nativeSrc": "8836:10:12",
															"nodeType": "YulAssignment",
															"src": "8836:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "8843:3:12",
																"nodeType": "YulIdentifier",
																"src": "8843:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8836:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "8120:732:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8223:5:12",
														"nodeType": "YulTypedName",
														"src": "8223:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8230:3:12",
														"nodeType": "YulTypedName",
														"src": "8230:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8239:3:12",
														"nodeType": "YulTypedName",
														"src": "8239:3:12",
														"type": ""
													}
												],
												"src": "8120:732:12"
											},
											{
												"body": {
													"nativeSrc": "9084:408:12",
													"nodeType": "YulBlock",
													"src": "9084:408:12",
													"statements": [
														{
															"nativeSrc": "9094:26:12",
															"nodeType": "YulAssignment",
															"src": "9094:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9106:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9106:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9117:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9117:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9102:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9102:3:12"
																},
																"nativeSrc": "9102:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9102:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9094:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9094:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9141:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9141:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9152:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9152:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9137:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9137:3:12"
																		},
																		"nativeSrc": "9137:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9137:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9160:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "9160:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9166:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9166:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9156:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9156:3:12"
																		},
																		"nativeSrc": "9156:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9156:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9130:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9130:6:12"
																},
																"nativeSrc": "9130:47:12",
																"nodeType": "YulFunctionCall",
																"src": "9130:47:12"
															},
															"nativeSrc": "9130:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "9130:47:12"
														},
														{
															"nativeSrc": "9186:116:12",
															"nodeType": "YulAssignment",
															"src": "9186:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9288:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9288:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9297:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9297:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "9194:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "9194:93:12"
																},
																"nativeSrc": "9194:108:12",
																"nodeType": "YulFunctionCall",
																"src": "9194:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9186:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9186:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9323:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9323:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9334:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9334:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9319:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9319:3:12"
																		},
																		"nativeSrc": "9319:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9319:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9343:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "9343:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9349:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9349:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9339:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9339:3:12"
																		},
																		"nativeSrc": "9339:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9339:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9312:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9312:6:12"
																},
																"nativeSrc": "9312:48:12",
																"nodeType": "YulFunctionCall",
																"src": "9312:48:12"
															},
															"nativeSrc": "9312:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "9312:48:12"
														},
														{
															"nativeSrc": "9369:116:12",
															"nodeType": "YulAssignment",
															"src": "9369:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9471:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9471:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9480:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9480:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "9377:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "9377:93:12"
																},
																"nativeSrc": "9377:108:12",
																"nodeType": "YulFunctionCall",
																"src": "9377:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9369:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9369:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "8858:634:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9048:9:12",
														"nodeType": "YulTypedName",
														"src": "9048:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9060:6:12",
														"nodeType": "YulTypedName",
														"src": "9060:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9068:6:12",
														"nodeType": "YulTypedName",
														"src": "9068:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9079:4:12",
														"nodeType": "YulTypedName",
														"src": "9079:4:12",
														"type": ""
													}
												],
												"src": "8858:634:12"
											},
											{
												"body": {
													"nativeSrc": "9556:40:12",
													"nodeType": "YulBlock",
													"src": "9556:40:12",
													"statements": [
														{
															"nativeSrc": "9567:22:12",
															"nodeType": "YulAssignment",
															"src": "9567:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9583:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9583:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9577:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9577:5:12"
																},
																"nativeSrc": "9577:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9577:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9567:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9567:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "9498:98:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9539:5:12",
														"nodeType": "YulTypedName",
														"src": "9539:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9549:6:12",
														"nodeType": "YulTypedName",
														"src": "9549:6:12",
														"type": ""
													}
												],
												"src": "9498:98:12"
											},
											{
												"body": {
													"nativeSrc": "9697:73:12",
													"nodeType": "YulBlock",
													"src": "9697:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9714:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9714:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9719:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9719:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9707:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9707:6:12"
																},
																"nativeSrc": "9707:19:12",
																"nodeType": "YulFunctionCall",
																"src": "9707:19:12"
															},
															"nativeSrc": "9707:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "9707:19:12"
														},
														{
															"nativeSrc": "9735:29:12",
															"nodeType": "YulAssignment",
															"src": "9735:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9754:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9754:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9759:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9759:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9750:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9750:3:12"
																},
																"nativeSrc": "9750:14:12",
																"nodeType": "YulFunctionCall",
																"src": "9750:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9735:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "9735:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "9602:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9669:3:12",
														"nodeType": "YulTypedName",
														"src": "9669:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9674:6:12",
														"nodeType": "YulTypedName",
														"src": "9674:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9685:11:12",
														"nodeType": "YulTypedName",
														"src": "9685:11:12",
														"type": ""
													}
												],
												"src": "9602:168:12"
											},
											{
												"body": {
													"nativeSrc": "9838:184:12",
													"nodeType": "YulBlock",
													"src": "9838:184:12",
													"statements": [
														{
															"nativeSrc": "9848:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9848:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "9857:1:12",
																"nodeType": "YulLiteral",
																"src": "9857:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "9852:1:12",
																	"nodeType": "YulTypedName",
																	"src": "9852:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9917:63:12",
																"nodeType": "YulBlock",
																"src": "9917:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "9942:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "9942:3:12"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "9947:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "9947:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9938:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "9938:3:12"
																					},
																					"nativeSrc": "9938:11:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9938:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "9961:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "9961:3:12"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "9966:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "9966:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9957:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "9957:3:12"
																							},
																							"nativeSrc": "9957:11:12",
																							"nodeType": "YulFunctionCall",
																							"src": "9957:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "9951:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "9951:5:12"
																					},
																					"nativeSrc": "9951:18:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9951:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9931:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9931:6:12"
																			},
																			"nativeSrc": "9931:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9931:39:12"
																		},
																		"nativeSrc": "9931:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9931:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "9878:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9878:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9881:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9881:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9875:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9875:2:12"
																},
																"nativeSrc": "9875:13:12",
																"nodeType": "YulFunctionCall",
																"src": "9875:13:12"
															},
															"nativeSrc": "9867:113:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9889:19:12",
																"nodeType": "YulBlock",
																"src": "9889:19:12",
																"statements": [
																	{
																		"nativeSrc": "9891:15:12",
																		"nodeType": "YulAssignment",
																		"src": "9891:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "9900:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "9900:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9903:2:12",
																					"nodeType": "YulLiteral",
																					"src": "9903:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9896:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "9896:3:12"
																			},
																			"nativeSrc": "9896:10:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9896:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "9891:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "9891:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "9871:3:12",
																"nodeType": "YulBlock",
																"src": "9871:3:12",
																"statements": []
															},
															"src": "9867:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "10000:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "10000:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10005:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10005:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9996:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9996:3:12"
																		},
																		"nativeSrc": "9996:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9996:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10014:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10014:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9989:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9989:6:12"
																},
																"nativeSrc": "9989:27:12",
																"nodeType": "YulFunctionCall",
																"src": "9989:27:12"
															},
															"nativeSrc": "9989:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "9989:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "9776:246:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9820:3:12",
														"nodeType": "YulTypedName",
														"src": "9820:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "9825:3:12",
														"nodeType": "YulTypedName",
														"src": "9825:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9830:6:12",
														"nodeType": "YulTypedName",
														"src": "9830:6:12",
														"type": ""
													}
												],
												"src": "9776:246:12"
											},
											{
												"body": {
													"nativeSrc": "10076:54:12",
													"nodeType": "YulBlock",
													"src": "10076:54:12",
													"statements": [
														{
															"nativeSrc": "10086:38:12",
															"nodeType": "YulAssignment",
															"src": "10086:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10104:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10104:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10111:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10111:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10100:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10100:3:12"
																		},
																		"nativeSrc": "10100:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10100:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10120:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10120:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "10116:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10116:3:12"
																		},
																		"nativeSrc": "10116:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10116:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10096:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10096:3:12"
																},
																"nativeSrc": "10096:28:12",
																"nodeType": "YulFunctionCall",
																"src": "10096:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10086:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10086:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "10028:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10059:5:12",
														"nodeType": "YulTypedName",
														"src": "10059:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "10069:6:12",
														"nodeType": "YulTypedName",
														"src": "10069:6:12",
														"type": ""
													}
												],
												"src": "10028:102:12"
											},
											{
												"body": {
													"nativeSrc": "10226:283:12",
													"nodeType": "YulBlock",
													"src": "10226:283:12",
													"statements": [
														{
															"nativeSrc": "10236:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10236:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10282:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10282:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "10250:31:12",
																	"nodeType": "YulIdentifier",
																	"src": "10250:31:12"
																},
																"nativeSrc": "10250:38:12",
																"nodeType": "YulFunctionCall",
																"src": "10250:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10240:6:12",
																	"nodeType": "YulTypedName",
																	"src": "10240:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10297:77:12",
															"nodeType": "YulAssignment",
															"src": "10297:77:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10362:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10362:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10367:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10367:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "10304:57:12",
																	"nodeType": "YulIdentifier",
																	"src": "10304:57:12"
																},
																"nativeSrc": "10304:70:12",
																"nodeType": "YulFunctionCall",
																"src": "10304:70:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10297:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10297:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10422:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10422:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10429:4:12",
																				"nodeType": "YulLiteral",
																				"src": "10429:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10418:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10418:3:12"
																		},
																		"nativeSrc": "10418:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10418:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10436:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10436:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10441:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10441:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10383:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "10383:34:12"
																},
																"nativeSrc": "10383:65:12",
																"nodeType": "YulFunctionCall",
																"src": "10383:65:12"
															},
															"nativeSrc": "10383:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "10383:65:12"
														},
														{
															"nativeSrc": "10457:46:12",
															"nodeType": "YulAssignment",
															"src": "10457:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10468:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10468:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10495:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10495:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "10473:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "10473:21:12"
																		},
																		"nativeSrc": "10473:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10473:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10464:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10464:3:12"
																},
																"nativeSrc": "10464:39:12",
																"nodeType": "YulFunctionCall",
																"src": "10464:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10457:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10457:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "10136:373:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10207:5:12",
														"nodeType": "YulTypedName",
														"src": "10207:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10214:3:12",
														"nodeType": "YulTypedName",
														"src": "10214:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10222:3:12",
														"nodeType": "YulTypedName",
														"src": "10222:3:12",
														"type": ""
													}
												],
												"src": "10136:373:12"
											},
											{
												"body": {
													"nativeSrc": "10743:523:12",
													"nodeType": "YulBlock",
													"src": "10743:523:12",
													"statements": [
														{
															"nativeSrc": "10753:27:12",
															"nodeType": "YulAssignment",
															"src": "10753:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10765:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10765:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10776:3:12",
																		"nodeType": "YulLiteral",
																		"src": "10776:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10761:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10761:3:12"
																},
																"nativeSrc": "10761:19:12",
																"nodeType": "YulFunctionCall",
																"src": "10761:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10753:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10753:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10834:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10834:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10847:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10847:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10858:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10858:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10843:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10843:3:12"
																		},
																		"nativeSrc": "10843:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10843:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10790:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10790:43:12"
																},
																"nativeSrc": "10790:71:12",
																"nodeType": "YulFunctionCall",
																"src": "10790:71:12"
															},
															"nativeSrc": "10790:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "10790:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10915:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10915:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10928:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10928:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10939:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10939:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10924:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10924:3:12"
																		},
																		"nativeSrc": "10924:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10924:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10871:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10871:43:12"
																},
																"nativeSrc": "10871:72:12",
																"nodeType": "YulFunctionCall",
																"src": "10871:72:12"
															},
															"nativeSrc": "10871:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "10871:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10997:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10997:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11010:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11010:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11021:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11021:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11006:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11006:3:12"
																		},
																		"nativeSrc": "11006:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11006:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10953:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10953:43:12"
																},
																"nativeSrc": "10953:72:12",
																"nodeType": "YulFunctionCall",
																"src": "10953:72:12"
															},
															"nativeSrc": "10953:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "10953:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "11079:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11079:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11092:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11092:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11103:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11103:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11088:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11088:3:12"
																		},
																		"nativeSrc": "11088:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11088:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11035:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "11035:43:12"
																},
																"nativeSrc": "11035:72:12",
																"nodeType": "YulFunctionCall",
																"src": "11035:72:12"
															},
															"nativeSrc": "11035:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "11035:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11128:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11128:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11139:3:12",
																				"nodeType": "YulLiteral",
																				"src": "11139:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11124:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11124:3:12"
																		},
																		"nativeSrc": "11124:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11124:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11149:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11149:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11155:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11155:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11145:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11145:3:12"
																		},
																		"nativeSrc": "11145:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11145:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11117:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11117:6:12"
																},
																"nativeSrc": "11117:49:12",
																"nodeType": "YulFunctionCall",
																"src": "11117:49:12"
															},
															"nativeSrc": "11117:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "11117:49:12"
														},
														{
															"nativeSrc": "11175:84:12",
															"nodeType": "YulAssignment",
															"src": "11175:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "11245:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11245:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "11254:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11254:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "11183:61:12",
																	"nodeType": "YulIdentifier",
																	"src": "11183:61:12"
																},
																"nativeSrc": "11183:76:12",
																"nodeType": "YulFunctionCall",
																"src": "11183:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11175:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11175:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "10515:751:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10683:9:12",
														"nodeType": "YulTypedName",
														"src": "10683:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10695:6:12",
														"nodeType": "YulTypedName",
														"src": "10695:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10703:6:12",
														"nodeType": "YulTypedName",
														"src": "10703:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10711:6:12",
														"nodeType": "YulTypedName",
														"src": "10711:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10719:6:12",
														"nodeType": "YulTypedName",
														"src": "10719:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10727:6:12",
														"nodeType": "YulTypedName",
														"src": "10727:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10738:4:12",
														"nodeType": "YulTypedName",
														"src": "10738:4:12",
														"type": ""
													}
												],
												"src": "10515:751:12"
											},
											{
												"body": {
													"nativeSrc": "11312:35:12",
													"nodeType": "YulBlock",
													"src": "11312:35:12",
													"statements": [
														{
															"nativeSrc": "11322:19:12",
															"nodeType": "YulAssignment",
															"src": "11322:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11338:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11338:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11332:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "11332:5:12"
																},
																"nativeSrc": "11332:9:12",
																"nodeType": "YulFunctionCall",
																"src": "11332:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "11322:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11322:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "11272:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "11305:6:12",
														"nodeType": "YulTypedName",
														"src": "11305:6:12",
														"type": ""
													}
												],
												"src": "11272:75:12"
											},
											{
												"body": {
													"nativeSrc": "11442:28:12",
													"nodeType": "YulBlock",
													"src": "11442:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11459:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11459:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11462:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11462:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11452:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11452:6:12"
																},
																"nativeSrc": "11452:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11452:12:12"
															},
															"nativeSrc": "11452:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "11452:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "11353:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "11353:117:12"
											},
											{
												"body": {
													"nativeSrc": "11565:28:12",
													"nodeType": "YulBlock",
													"src": "11565:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11582:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11582:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11585:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11585:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11575:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11575:6:12"
																},
																"nativeSrc": "11575:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11575:12:12"
															},
															"nativeSrc": "11575:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "11575:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "11476:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "11476:117:12"
											},
											{
												"body": {
													"nativeSrc": "11643:105:12",
													"nodeType": "YulBlock",
													"src": "11643:105:12",
													"statements": [
														{
															"nativeSrc": "11653:89:12",
															"nodeType": "YulAssignment",
															"src": "11653:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11668:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "11668:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11675:66:12",
																		"nodeType": "YulLiteral",
																		"src": "11675:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11664:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11664:3:12"
																},
																"nativeSrc": "11664:78:12",
																"nodeType": "YulFunctionCall",
																"src": "11664:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11653:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "11653:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "11599:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11625:5:12",
														"nodeType": "YulTypedName",
														"src": "11625:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11635:7:12",
														"nodeType": "YulTypedName",
														"src": "11635:7:12",
														"type": ""
													}
												],
												"src": "11599:149:12"
											},
											{
												"body": {
													"nativeSrc": "11796:78:12",
													"nodeType": "YulBlock",
													"src": "11796:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "11852:16:12",
																"nodeType": "YulBlock",
																"src": "11852:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11861:1:12",
																					"nodeType": "YulLiteral",
																					"src": "11861:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11864:1:12",
																					"nodeType": "YulLiteral",
																					"src": "11864:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11854:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11854:6:12"
																			},
																			"nativeSrc": "11854:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11854:12:12"
																		},
																		"nativeSrc": "11854:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11854:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11819:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "11819:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11843:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "11843:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "11826:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "11826:16:12"
																				},
																				"nativeSrc": "11826:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11826:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11816:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "11816:2:12"
																		},
																		"nativeSrc": "11816:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11816:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11809:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11809:6:12"
																},
																"nativeSrc": "11809:42:12",
																"nodeType": "YulFunctionCall",
																"src": "11809:42:12"
															},
															"nativeSrc": "11806:62:12",
															"nodeType": "YulIf",
															"src": "11806:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "11754:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11789:5:12",
														"nodeType": "YulTypedName",
														"src": "11789:5:12",
														"type": ""
													}
												],
												"src": "11754:120:12"
											},
											{
												"body": {
													"nativeSrc": "11942:79:12",
													"nodeType": "YulBlock",
													"src": "11942:79:12",
													"statements": [
														{
															"nativeSrc": "11952:22:12",
															"nodeType": "YulAssignment",
															"src": "11952:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11967:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11967:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11961:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "11961:5:12"
																},
																"nativeSrc": "11961:13:12",
																"nodeType": "YulFunctionCall",
																"src": "11961:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11952:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "11952:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12009:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12009:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "11983:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "11983:25:12"
																},
																"nativeSrc": "11983:32:12",
																"nodeType": "YulFunctionCall",
																"src": "11983:32:12"
															},
															"nativeSrc": "11983:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "11983:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "11880:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11920:6:12",
														"nodeType": "YulTypedName",
														"src": "11920:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11928:3:12",
														"nodeType": "YulTypedName",
														"src": "11928:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11936:5:12",
														"nodeType": "YulTypedName",
														"src": "11936:5:12",
														"type": ""
													}
												],
												"src": "11880:141:12"
											},
											{
												"body": {
													"nativeSrc": "12103:273:12",
													"nodeType": "YulBlock",
													"src": "12103:273:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "12149:83:12",
																"nodeType": "YulBlock",
																"src": "12149:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12151:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "12151:77:12"
																			},
																			"nativeSrc": "12151:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12151:79:12"
																		},
																		"nativeSrc": "12151:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12151:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12124:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "12124:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12133:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12133:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12120:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12120:3:12"
																		},
																		"nativeSrc": "12120:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12120:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12145:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12145:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12116:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12116:3:12"
																},
																"nativeSrc": "12116:32:12",
																"nodeType": "YulFunctionCall",
																"src": "12116:32:12"
															},
															"nativeSrc": "12113:119:12",
															"nodeType": "YulIf",
															"src": "12113:119:12"
														},
														{
															"nativeSrc": "12242:127:12",
															"nodeType": "YulBlock",
															"src": "12242:127:12",
															"statements": [
																{
																	"nativeSrc": "12257:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12257:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12271:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12271:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12261:6:12",
																			"nodeType": "YulTypedName",
																			"src": "12261:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12286:73:12",
																	"nodeType": "YulAssignment",
																	"src": "12286:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12331:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "12331:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12342:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "12342:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12327:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12327:3:12"
																				},
																				"nativeSrc": "12327:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12327:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12351:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "12351:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "12296:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "12296:30:12"
																		},
																		"nativeSrc": "12296:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12296:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12286:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "12286:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "12027:349:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12073:9:12",
														"nodeType": "YulTypedName",
														"src": "12073:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12084:7:12",
														"nodeType": "YulTypedName",
														"src": "12084:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12096:6:12",
														"nodeType": "YulTypedName",
														"src": "12096:6:12",
														"type": ""
													}
												],
												"src": "12027:349:12"
											},
											{
												"body": {
													"nativeSrc": "12710:725:12",
													"nodeType": "YulBlock",
													"src": "12710:725:12",
													"statements": [
														{
															"nativeSrc": "12720:27:12",
															"nodeType": "YulAssignment",
															"src": "12720:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12732:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12732:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12743:3:12",
																		"nodeType": "YulLiteral",
																		"src": "12743:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12728:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12728:3:12"
																},
																"nativeSrc": "12728:19:12",
																"nodeType": "YulFunctionCall",
																"src": "12728:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12720:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12720:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12801:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12801:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12814:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12814:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12825:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12825:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12810:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12810:3:12"
																		},
																		"nativeSrc": "12810:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12810:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12757:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "12757:43:12"
																},
																"nativeSrc": "12757:71:12",
																"nodeType": "YulFunctionCall",
																"src": "12757:71:12"
															},
															"nativeSrc": "12757:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "12757:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12882:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12882:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12895:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12895:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12906:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12906:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12891:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12891:3:12"
																		},
																		"nativeSrc": "12891:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12891:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12838:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "12838:43:12"
																},
																"nativeSrc": "12838:72:12",
																"nodeType": "YulFunctionCall",
																"src": "12838:72:12"
															},
															"nativeSrc": "12838:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "12838:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12931:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12931:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12942:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12942:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12927:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12927:3:12"
																		},
																		"nativeSrc": "12927:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12927:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12951:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "12951:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12957:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12957:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12947:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12947:3:12"
																		},
																		"nativeSrc": "12947:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12947:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12920:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12920:6:12"
																},
																"nativeSrc": "12920:48:12",
																"nodeType": "YulFunctionCall",
																"src": "12920:48:12"
															},
															"nativeSrc": "12920:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "12920:48:12"
														},
														{
															"nativeSrc": "12977:116:12",
															"nodeType": "YulAssignment",
															"src": "12977:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13079:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13079:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "13088:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13088:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "12985:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "12985:93:12"
																},
																"nativeSrc": "12985:108:12",
																"nodeType": "YulFunctionCall",
																"src": "12985:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12977:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12977:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13114:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13114:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13125:2:12",
																				"nodeType": "YulLiteral",
																				"src": "13125:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13110:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13110:3:12"
																		},
																		"nativeSrc": "13110:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13110:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13134:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13134:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13140:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13140:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13130:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13130:3:12"
																		},
																		"nativeSrc": "13130:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13130:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13103:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13103:6:12"
																},
																"nativeSrc": "13103:48:12",
																"nodeType": "YulFunctionCall",
																"src": "13103:48:12"
															},
															"nativeSrc": "13103:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "13103:48:12"
														},
														{
															"nativeSrc": "13160:116:12",
															"nodeType": "YulAssignment",
															"src": "13160:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "13262:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13262:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "13271:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13271:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "13168:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "13168:93:12"
																},
																"nativeSrc": "13168:108:12",
																"nodeType": "YulFunctionCall",
																"src": "13168:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13160:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13160:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13297:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13297:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13308:3:12",
																				"nodeType": "YulLiteral",
																				"src": "13308:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13293:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13293:3:12"
																		},
																		"nativeSrc": "13293:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13293:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13318:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13318:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13324:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13324:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13314:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13314:3:12"
																		},
																		"nativeSrc": "13314:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13314:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13286:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13286:6:12"
																},
																"nativeSrc": "13286:49:12",
																"nodeType": "YulFunctionCall",
																"src": "13286:49:12"
															},
															"nativeSrc": "13286:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "13286:49:12"
														},
														{
															"nativeSrc": "13344:84:12",
															"nodeType": "YulAssignment",
															"src": "13344:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "13414:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13414:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "13423:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13423:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "13352:61:12",
																	"nodeType": "YulIdentifier",
																	"src": "13352:61:12"
																},
																"nativeSrc": "13352:76:12",
																"nodeType": "YulFunctionCall",
																"src": "13352:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13344:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13344:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "12382:1053:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12650:9:12",
														"nodeType": "YulTypedName",
														"src": "12650:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "12662:6:12",
														"nodeType": "YulTypedName",
														"src": "12662:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12670:6:12",
														"nodeType": "YulTypedName",
														"src": "12670:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12678:6:12",
														"nodeType": "YulTypedName",
														"src": "12678:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12686:6:12",
														"nodeType": "YulTypedName",
														"src": "12686:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12694:6:12",
														"nodeType": "YulTypedName",
														"src": "12694:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12705:4:12",
														"nodeType": "YulTypedName",
														"src": "12705:4:12",
														"type": ""
													}
												],
												"src": "12382:1053:12"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040518060800160405280605c815260200162002f40605c91396200003c816200006760201b60201c565b5062000061336001600a60405180602001604052805f8152506200007c60201b60201c565b620010f7565b806002908162000078919062000bd3565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603620000ef575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401620000e6919062000cfa565b60405180910390fd5b5f806200010385856200012460201b60201c565b915091506200011c5f878484876200015460201b60201c565b505050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b62000168858585856200022760201b60201c565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161462000220575f620001ad620005d960201b60201c565b9050600184510362000207575f620001cf5f86620005e060201b90919060201c565b90505f620001e75f86620005e060201b90919060201c565b9050620001ff838989858589620005f360201b60201c565b50506200021e565b6200021d818787878787620007b160201b60201c565b5b505b5050505050565b80518251146200027457815181516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016200026b92919062000d26565b60405180910390fd5b5f62000285620005d960201b60201c565b90505f5b83518110156200048e575f620002a98286620005e060201b90919060201c565b90505f620002c18386620005e060201b90919060201c565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614620003e8575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156200039457888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016200038b949392919062000d51565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146200048057805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825462000478919062000dc9565b925050819055505b505080600101905062000289565b50600183510362000551575f620004af5f85620005e060201b90919060201c565b90505f620004c75f85620005e060201b90919060201c565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516200054192919062000d26565b60405180910390a45050620005d2565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051620005c992919062000eca565b60405180910390a45b5050505050565b5f33905090565b5f60208202602084010151905092915050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115620007a9578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016200065695949392919062000f97565b6020604051808303815f875af19250505080156200069457506040513d601f19601f8201168201806040525081019062000691919062001057565b60015b6200071b573d805f8114620006c5576040519150601f19603f3d011682016040523d82523d5f602084013e620006ca565b606091505b505f8151036200071357846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016200070a919062000cfa565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614620007a757846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016200079e919062000cfa565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b111562000967578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016200081495949392919062001087565b6020604051808303815f875af19250505080156200085257506040513d601f19601f820116820180604052508101906200084f919062001057565b60015b620008d9573d805f811462000883576040519150601f19603f3d011682016040523d82523d5f602084013e62000888565b606091505b505f815103620008d157846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401620008c8919062000cfa565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146200096557846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016200095c919062000cfa565b60405180910390fd5b505b505050505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620009eb57607f821691505b60208210810362000a015762000a00620009a6565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830262000a657fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000a28565b62000a71868362000a28565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f62000abb62000ab562000aaf8462000a89565b62000a92565b62000a89565b9050919050565b5f819050919050565b62000ad68362000a9b565b62000aee62000ae58262000ac2565b84845462000a34565b825550505050565b5f90565b62000b0462000af6565b62000b1181848462000acb565b505050565b5b8181101562000b385762000b2c5f8262000afa565b60018101905062000b17565b5050565b601f82111562000b875762000b518162000a07565b62000b5c8462000a19565b8101602085101562000b6c578190505b62000b8462000b7b8562000a19565b83018262000b16565b50505b505050565b5f82821c905092915050565b5f62000ba95f198460080262000b8c565b1980831691505092915050565b5f62000bc3838362000b98565b9150826002028217905092915050565b62000bde826200096f565b67ffffffffffffffff81111562000bfa5762000bf962000979565b5b62000c068254620009d3565b62000c1382828562000b3c565b5f60209050601f83116001811462000c49575f841562000c34578287015190505b62000c40858262000bb6565b86555062000caf565b601f19841662000c598662000a07565b5f5b8281101562000c825784890151825560018201915060208501945060208101905062000c5b565b8683101562000ca2578489015162000c9e601f89168262000b98565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000ce28262000cb7565b9050919050565b62000cf48162000cd6565b82525050565b5f60208201905062000d0f5f83018462000ce9565b92915050565b62000d208162000a89565b82525050565b5f60408201905062000d3b5f83018562000d15565b62000d4a602083018462000d15565b9392505050565b5f60808201905062000d665f83018762000ce9565b62000d75602083018662000d15565b62000d84604083018562000d15565b62000d93606083018462000d15565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f62000dd58262000a89565b915062000de28362000a89565b925082820190508082111562000dfd5762000dfc62000d9c565b5b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b62000e378162000a89565b82525050565b5f62000e4a838362000e2c565b60208301905092915050565b5f602082019050919050565b5f62000e6e8262000e03565b62000e7a818562000e0d565b935062000e878362000e1d565b805f5b8381101562000ebd57815162000ea1888262000e3d565b975062000eae8362000e56565b92505060018101905062000e8a565b5085935050505092915050565b5f6040820190508181035f83015262000ee4818562000e62565b9050818103602083015262000efa818462000e62565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101562000f3c57808201518184015260208101905062000f1f565b5f8484015250505050565b5f601f19601f8301169050919050565b5f62000f638262000f03565b62000f6f818562000f0d565b935062000f8181856020860162000f1d565b62000f8c8162000f47565b840191505092915050565b5f60a08201905062000fac5f83018862000ce9565b62000fbb602083018762000ce9565b62000fca604083018662000d15565b62000fd9606083018562000d15565b818103608083015262000fed818462000f57565b90509695505050505050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b620010338162000ffd565b81146200103e575f80fd5b50565b5f81519050620010518162001028565b92915050565b5f602082840312156200106f576200106e62000ff9565b5b5f6200107e8482850162001041565b91505092915050565b5f60a0820190506200109c5f83018862000ce9565b620010ab602083018762000ce9565b8181036040830152620010bf818662000e62565b90508181036060830152620010d5818562000e62565b90508181036080830152620010eb818462000f57565b90509695505050505050565b611e3b80620011055f395ff3fe608060405234801561000f575f80fd5b5060043610610085575f3560e01c80634e1273f4116100595780634e1273f414610135578063a22cb46514610165578063e985e9c514610181578063f242432a146101b157610085565b8062fdd58e1461008957806301ffc9a7146100b95780630e89341c146100e95780632eb2c2d614610119575b5f80fd5b6100a3600480360381019061009e91906112ef565b6101cd565b6040516100b0919061133c565b60405180910390f35b6100d360048036038101906100ce91906113aa565b610222565b6040516100e091906113ef565b60405180910390f35b61010360048036038101906100fe9190611408565b610303565b60405161011091906114bd565b60405180910390f35b610133600480360381019061012e91906116cd565b610395565b005b61014f600480360381019061014a9190611858565b61043c565b60405161015c9190611985565b60405180910390f35b61017f600480360381019061017a91906119cf565b610543565b005b61019b60048036038101906101969190611a0d565b610559565b6040516101a891906113ef565b60405180910390f35b6101cb60048036038101906101c69190611a4b565b6105e7565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102ec57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806102fc57506102fb8261068e565b5b9050919050565b60606002805461031290611b0b565b80601f016020809104026020016040519081016040528092919081815260200182805461033e90611b0b565b80156103895780601f1061036057610100808354040283529160200191610389565b820191905f5260205f20905b81548152906001019060200180831161036c57829003601f168201915b50505050509050919050565b5f61039e6106f7565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156103e357506103e18682610559565b155b156104275780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161041e929190611b4a565b60405180910390fd5b61043486868686866106fe565b505050505050565b6060815183511461048857815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161047f929190611b71565b60405180910390fd5b5f835167ffffffffffffffff8111156104a4576104a36114e1565b5b6040519080825280602002602001820160405280156104d25781602001602082028036833780820191505090505b5090505f5b84518110156105385761050e6104f682876107f290919063ffffffff16565b610509838761080590919063ffffffff16565b6101cd565b82828151811061052157610520611b98565b5b6020026020010181815250508060010190506104d7565b508091505092915050565b61055561054e6106f7565b8383610818565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f6105f06106f7565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561063557506106338682610559565b155b156106795780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610670929190611b4a565b60405180910390fd5b6106868686868686610981565b505050505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361076e575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016107659190611bc5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036107de575f6040517f01a835140000000000000000000000000000000000000000000000000000000081526004016107d59190611bc5565b60405180910390fd5b6107eb8585858585610a87565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610888575f6040517fced3e10000000000000000000000000000000000000000000000000000000000815260040161087f9190611bc5565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161097491906113ef565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109f1575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016109e89190611bc5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610a61575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610a589190611bc5565b60405180910390fd5b5f80610a6d8585610b33565b91509150610a7e8787848487610a87565b50505050505050565b610a9385858585610b63565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610b2c575f610acf6106f7565b90506001845103610b1b575f610aee5f8661080590919063ffffffff16565b90505f610b045f8661080590919063ffffffff16565b9050610b14838989858589610ef3565b5050610b2a565b610b298187878787876110a2565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b8051825114610bad57815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610ba4929190611b71565b60405180910390fd5b5f610bb66106f7565b90505f5b8351811015610db2575f610bd7828661080590919063ffffffff16565b90505f610bed838661080590919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610d10575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610cbc57888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401610cb39493929190611bde565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610da557805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d9d9190611c4e565b925050819055505b5050806001019050610bba565b506001835103610e6d575f610dd05f8561080590919063ffffffff16565b90505f610de65f8561080590919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610e5e929190611b71565b60405180910390a45050610eec565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610ee3929190611c81565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b111561109a578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401610f53959493929190611d08565b6020604051808303815f875af1925050508015610f8e57506040513d601f19601f82011682018060405250810190610f8b9190611d74565b60015b61100f573d805f8114610fbc576040519150601f19603f3d011682016040523d82523d5f602084013e610fc1565b606091505b505f81510361100757846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610ffe9190611bc5565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461109857846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161108f9190611bc5565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611249578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611102959493929190611d9f565b6020604051808303815f875af192505050801561113d57506040513d601f19601f8201168201806040525081019061113a9190611d74565b60015b6111be573d805f811461116b576040519150601f19603f3d011682016040523d82523d5f602084013e611170565b606091505b505f8151036111b657846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111ad9190611bc5565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461124757846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161123e9190611bc5565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61128b82611262565b9050919050565b61129b81611281565b81146112a5575f80fd5b50565b5f813590506112b681611292565b92915050565b5f819050919050565b6112ce816112bc565b81146112d8575f80fd5b50565b5f813590506112e9816112c5565b92915050565b5f80604083850312156113055761130461125a565b5b5f611312858286016112a8565b9250506020611323858286016112db565b9150509250929050565b611336816112bc565b82525050565b5f60208201905061134f5f83018461132d565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61138981611355565b8114611393575f80fd5b50565b5f813590506113a481611380565b92915050565b5f602082840312156113bf576113be61125a565b5b5f6113cc84828501611396565b91505092915050565b5f8115159050919050565b6113e9816113d5565b82525050565b5f6020820190506114025f8301846113e0565b92915050565b5f6020828403121561141d5761141c61125a565b5b5f61142a848285016112db565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561146a57808201518184015260208101905061144f565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61148f82611433565b611499818561143d565b93506114a981856020860161144d565b6114b281611475565b840191505092915050565b5f6020820190508181035f8301526114d58184611485565b905092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61151782611475565b810181811067ffffffffffffffff82111715611536576115356114e1565b5b80604052505050565b5f611548611251565b9050611554828261150e565b919050565b5f67ffffffffffffffff821115611573576115726114e1565b5b602082029050602081019050919050565b5f80fd5b5f61159a61159584611559565b61153f565b905080838252602082019050602084028301858111156115bd576115bc611584565b5b835b818110156115e657806115d288826112db565b8452602084019350506020810190506115bf565b5050509392505050565b5f82601f830112611604576116036114dd565b5b8135611614848260208601611588565b91505092915050565b5f80fd5b5f67ffffffffffffffff82111561163b5761163a6114e1565b5b61164482611475565b9050602081019050919050565b828183375f83830152505050565b5f61167161166c84611621565b61153f565b90508281526020810184848401111561168d5761168c61161d565b5b611698848285611651565b509392505050565b5f82601f8301126116b4576116b36114dd565b5b81356116c484826020860161165f565b91505092915050565b5f805f805f60a086880312156116e6576116e561125a565b5b5f6116f3888289016112a8565b9550506020611704888289016112a8565b945050604086013567ffffffffffffffff8111156117255761172461125e565b5b611731888289016115f0565b935050606086013567ffffffffffffffff8111156117525761175161125e565b5b61175e888289016115f0565b925050608086013567ffffffffffffffff81111561177f5761177e61125e565b5b61178b888289016116a0565b9150509295509295909350565b5f67ffffffffffffffff8211156117b2576117b16114e1565b5b602082029050602081019050919050565b5f6117d56117d084611798565b61153f565b905080838252602082019050602084028301858111156117f8576117f7611584565b5b835b81811015611821578061180d88826112a8565b8452602084019350506020810190506117fa565b5050509392505050565b5f82601f83011261183f5761183e6114dd565b5b813561184f8482602086016117c3565b91505092915050565b5f806040838503121561186e5761186d61125a565b5b5f83013567ffffffffffffffff81111561188b5761188a61125e565b5b6118978582860161182b565b925050602083013567ffffffffffffffff8111156118b8576118b761125e565b5b6118c4858286016115f0565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611900816112bc565b82525050565b5f61191183836118f7565b60208301905092915050565b5f602082019050919050565b5f611933826118ce565b61193d81856118d8565b9350611948836118e8565b805f5b8381101561197857815161195f8882611906565b975061196a8361191d565b92505060018101905061194b565b5085935050505092915050565b5f6020820190508181035f83015261199d8184611929565b905092915050565b6119ae816113d5565b81146119b8575f80fd5b50565b5f813590506119c9816119a5565b92915050565b5f80604083850312156119e5576119e461125a565b5b5f6119f2858286016112a8565b9250506020611a03858286016119bb565b9150509250929050565b5f8060408385031215611a2357611a2261125a565b5b5f611a30858286016112a8565b9250506020611a41858286016112a8565b9150509250929050565b5f805f805f60a08688031215611a6457611a6361125a565b5b5f611a71888289016112a8565b9550506020611a82888289016112a8565b9450506040611a93888289016112db565b9350506060611aa4888289016112db565b925050608086013567ffffffffffffffff811115611ac557611ac461125e565b5b611ad1888289016116a0565b9150509295509295909350565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611b2257607f821691505b602082108103611b3557611b34611ade565b5b50919050565b611b4481611281565b82525050565b5f604082019050611b5d5f830185611b3b565b611b6a6020830184611b3b565b9392505050565b5f604082019050611b845f83018561132d565b611b91602083018461132d565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f602082019050611bd85f830184611b3b565b92915050565b5f608082019050611bf15f830187611b3b565b611bfe602083018661132d565b611c0b604083018561132d565b611c18606083018461132d565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c58826112bc565b9150611c63836112bc565b9250828201905080821115611c7b57611c7a611c21565b5b92915050565b5f6040820190508181035f830152611c998185611929565b90508181036020830152611cad8184611929565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f611cda82611cb6565b611ce48185611cc0565b9350611cf481856020860161144d565b611cfd81611475565b840191505092915050565b5f60a082019050611d1b5f830188611b3b565b611d286020830187611b3b565b611d35604083018661132d565b611d42606083018561132d565b8181036080830152611d548184611cd0565b90509695505050505050565b5f81519050611d6e81611380565b92915050565b5f60208284031215611d8957611d8861125a565b5b5f611d9684828501611d60565b91505092915050565b5f60a082019050611db25f830188611b3b565b611dbf6020830187611b3b565b8181036040830152611dd18186611929565b90508181036060830152611de58185611929565b90508181036080830152611df98184611cd0565b9050969550505050505056fea2646970667358221220a0afe434d9ad0377b4047847bdcc2af6fe13956f49c7645634c99e373f58e7b464736f6c6343000816003368747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f576f726170616b6f726e4a6172757369726970686f742f4d795f4e46545f576f726b73686f702f6d61696e2f574f4a415f4865726f2e6a736f6e",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5C DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2F40 PUSH1 0x5C SWAP2 CODECOPY PUSH3 0x3C DUP2 PUSH3 0x67 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x61 CALLER PUSH1 0x1 PUSH1 0xA PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH3 0x7C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x10F7 JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x78 SWAP2 SWAP1 PUSH3 0xBD3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xEF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xE6 SWAP2 SWAP1 PUSH3 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH3 0x103 DUP6 DUP6 PUSH3 0x124 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH3 0x11C PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH3 0x154 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x168 DUP6 DUP6 DUP6 DUP6 PUSH3 0x227 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x220 JUMPI PUSH0 PUSH3 0x1AD PUSH3 0x5D9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH3 0x207 JUMPI PUSH0 PUSH3 0x1CF PUSH0 DUP7 PUSH3 0x5E0 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH0 PUSH3 0x1E7 PUSH0 DUP7 PUSH3 0x5E0 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x1FF DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH3 0x5F3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x21E JUMP JUMPDEST PUSH3 0x21D DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH3 0x7B1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH3 0x274 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x26B SWAP3 SWAP2 SWAP1 PUSH3 0xD26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH3 0x285 PUSH3 0x5D9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH3 0x48E JUMPI PUSH0 PUSH3 0x2A9 DUP3 DUP7 PUSH3 0x5E0 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH0 PUSH3 0x2C1 DUP4 DUP7 PUSH3 0x5E0 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x3E8 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x394 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x38B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xD51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x480 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x478 SWAP2 SWAP1 PUSH3 0xDC9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH3 0x289 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH3 0x551 JUMPI PUSH0 PUSH3 0x4AF PUSH0 DUP6 PUSH3 0x5E0 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH0 PUSH3 0x4C7 PUSH0 DUP6 PUSH3 0x5E0 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH3 0x541 SWAP3 SWAP2 SWAP1 PUSH3 0xD26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH3 0x5D2 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH3 0x5C9 SWAP3 SWAP2 SWAP1 PUSH3 0xECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH3 0x7A9 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x656 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xF97 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x694 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x691 SWAP2 SWAP1 PUSH3 0x1057 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x71B JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH3 0x6C5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x6CA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH3 0x713 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x70A SWAP2 SWAP1 PUSH3 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH3 0x7A7 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x79E SWAP2 SWAP1 PUSH3 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH3 0x967 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x814 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1087 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x852 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x84F SWAP2 SWAP1 PUSH3 0x1057 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x8D9 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH3 0x883 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x888 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH3 0x8D1 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x8C8 SWAP2 SWAP1 PUSH3 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH3 0x965 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x95C SWAP2 SWAP1 PUSH3 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x9EB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xA01 JUMPI PUSH3 0xA00 PUSH3 0x9A6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0xA65 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0xA28 JUMP JUMPDEST PUSH3 0xA71 DUP7 DUP4 PUSH3 0xA28 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xABB PUSH3 0xAB5 PUSH3 0xAAF DUP5 PUSH3 0xA89 JUMP JUMPDEST PUSH3 0xA92 JUMP JUMPDEST PUSH3 0xA89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xAD6 DUP4 PUSH3 0xA9B JUMP JUMPDEST PUSH3 0xAEE PUSH3 0xAE5 DUP3 PUSH3 0xAC2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0xA34 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0xB04 PUSH3 0xAF6 JUMP JUMPDEST PUSH3 0xB11 DUP2 DUP5 DUP5 PUSH3 0xACB JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xB38 JUMPI PUSH3 0xB2C PUSH0 DUP3 PUSH3 0xAFA JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xB17 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xB87 JUMPI PUSH3 0xB51 DUP2 PUSH3 0xA07 JUMP JUMPDEST PUSH3 0xB5C DUP5 PUSH3 0xA19 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xB6C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xB84 PUSH3 0xB7B DUP6 PUSH3 0xA19 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0xB16 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xBA9 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xB8C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xBC3 DUP4 DUP4 PUSH3 0xB98 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xBDE DUP3 PUSH3 0x96F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xBFA JUMPI PUSH3 0xBF9 PUSH3 0x979 JUMP JUMPDEST JUMPDEST PUSH3 0xC06 DUP3 SLOAD PUSH3 0x9D3 JUMP JUMPDEST PUSH3 0xC13 DUP3 DUP3 DUP6 PUSH3 0xB3C JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xC49 JUMPI PUSH0 DUP5 ISZERO PUSH3 0xC34 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xC40 DUP6 DUP3 PUSH3 0xBB6 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xCAF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xC59 DUP7 PUSH3 0xA07 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xC82 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xC5B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xCA2 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xC9E PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xB98 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xCE2 DUP3 PUSH3 0xCB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xCF4 DUP2 PUSH3 0xCD6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xD0F PUSH0 DUP4 ADD DUP5 PUSH3 0xCE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xD20 DUP2 PUSH3 0xA89 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0xD3B PUSH0 DUP4 ADD DUP6 PUSH3 0xD15 JUMP JUMPDEST PUSH3 0xD4A PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0xD15 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0xD66 PUSH0 DUP4 ADD DUP8 PUSH3 0xCE9 JUMP JUMPDEST PUSH3 0xD75 PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0xD15 JUMP JUMPDEST PUSH3 0xD84 PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0xD15 JUMP JUMPDEST PUSH3 0xD93 PUSH1 0x60 DUP4 ADD DUP5 PUSH3 0xD15 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0xDD5 DUP3 PUSH3 0xA89 JUMP JUMPDEST SWAP2 POP PUSH3 0xDE2 DUP4 PUSH3 0xA89 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xDFD JUMPI PUSH3 0xDFC PUSH3 0xD9C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xE37 DUP2 PUSH3 0xA89 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH3 0xE4A DUP4 DUP4 PUSH3 0xE2C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xE6E DUP3 PUSH3 0xE03 JUMP JUMPDEST PUSH3 0xE7A DUP2 DUP6 PUSH3 0xE0D JUMP JUMPDEST SWAP4 POP PUSH3 0xE87 DUP4 PUSH3 0xE1D JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xEBD JUMPI DUP2 MLOAD PUSH3 0xEA1 DUP9 DUP3 PUSH3 0xE3D JUMP JUMPDEST SWAP8 POP PUSH3 0xEAE DUP4 PUSH3 0xE56 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xE8A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0xEE4 DUP2 DUP6 PUSH3 0xE62 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0xEFA DUP2 DUP5 PUSH3 0xE62 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xF3C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xF1F JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xF63 DUP3 PUSH3 0xF03 JUMP JUMPDEST PUSH3 0xF6F DUP2 DUP6 PUSH3 0xF0D JUMP JUMPDEST SWAP4 POP PUSH3 0xF81 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xF1D JUMP JUMPDEST PUSH3 0xF8C DUP2 PUSH3 0xF47 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0xFAC PUSH0 DUP4 ADD DUP9 PUSH3 0xCE9 JUMP JUMPDEST PUSH3 0xFBB PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0xCE9 JUMP JUMPDEST PUSH3 0xFCA PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0xD15 JUMP JUMPDEST PUSH3 0xFD9 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0xD15 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH3 0xFED DUP2 DUP5 PUSH3 0xF57 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1033 DUP2 PUSH3 0xFFD JUMP JUMPDEST DUP2 EQ PUSH3 0x103E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x1051 DUP2 PUSH3 0x1028 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x106F JUMPI PUSH3 0x106E PUSH3 0xFF9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x107E DUP5 DUP3 DUP6 ADD PUSH3 0x1041 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x109C PUSH0 DUP4 ADD DUP9 PUSH3 0xCE9 JUMP JUMPDEST PUSH3 0x10AB PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0xCE9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH3 0x10BF DUP2 DUP7 PUSH3 0xE62 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0x10D5 DUP2 DUP6 PUSH3 0xE62 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH3 0x10EB DUP2 DUP5 PUSH3 0xF57 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E3B DUP1 PUSH3 0x1105 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B1 JUMPI PUSH2 0x85 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x119 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x12EF JUMP JUMPDEST PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x13AA JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x13EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH2 0x395 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1985 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x19CF JUMP JUMPDEST PUSH2 0x543 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x13EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1A4B JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2EC JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x2FC JUMPI POP PUSH2 0x2FB DUP3 PUSH2 0x68E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x312 SWAP1 PUSH2 0x1B0B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x33E SWAP1 PUSH2 0x1B0B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x360 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x389 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x36C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x39E PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3E3 JUMPI POP PUSH2 0x3E1 DUP7 DUP3 PUSH2 0x559 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x427 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41E SWAP3 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x434 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x6FE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x488 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47F SWAP3 SWAP2 SWAP1 PUSH2 0x1B71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A4 JUMPI PUSH2 0x4A3 PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4D2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x538 JUMPI PUSH2 0x50E PUSH2 0x4F6 DUP3 DUP8 PUSH2 0x7F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x509 DUP4 DUP8 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CD JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x521 JUMPI PUSH2 0x520 PUSH2 0x1B98 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x4D7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x555 PUSH2 0x54E PUSH2 0x6F7 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x818 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5F0 PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x635 JUMPI POP PUSH2 0x633 DUP7 DUP3 PUSH2 0x559 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x679 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x670 SWAP3 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x686 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x981 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x76E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D5 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7EB DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xA87 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x888 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87F SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x974 SWAP2 SWAP1 PUSH2 0x13EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA61 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA58 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xA6D DUP6 DUP6 PUSH2 0xB33 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xA7E DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xA87 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA93 DUP6 DUP6 DUP6 DUP6 PUSH2 0xB63 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB2C JUMPI PUSH0 PUSH2 0xACF PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0xB1B JUMPI PUSH0 PUSH2 0xAEE PUSH0 DUP7 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xB04 PUSH0 DUP7 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB14 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xEF3 JUMP JUMPDEST POP POP PUSH2 0xB2A JUMP JUMPDEST PUSH2 0xB29 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x10A2 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xBAD JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xBB6 PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xDB2 JUMPI PUSH0 PUSH2 0xBD7 DUP3 DUP7 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xBED DUP4 DUP7 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD10 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCBC JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA5 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD9D SWAP2 SWAP1 PUSH2 0x1C4E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xBBA JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0xE6D JUMPI PUSH0 PUSH2 0xDD0 PUSH0 DUP6 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xDE6 PUSH0 DUP6 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xE5E SWAP3 SWAP2 SWAP1 PUSH2 0x1B71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0xEEC JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xEE3 SWAP3 SWAP2 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x109A JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF53 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D08 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF8E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF8B SWAP2 SWAP1 PUSH2 0x1D74 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x100F JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xFBC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFC1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1007 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFE SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1098 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108F SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1249 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1102 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x113D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x113A SWAP2 SWAP1 PUSH2 0x1D74 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11BE JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x116B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1170 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x11B6 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AD SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1247 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123E SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x128B DUP3 PUSH2 0x1262 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x129B DUP2 PUSH2 0x1281 JUMP JUMPDEST DUP2 EQ PUSH2 0x12A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12B6 DUP2 PUSH2 0x1292 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12CE DUP2 PUSH2 0x12BC JUMP JUMPDEST DUP2 EQ PUSH2 0x12D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12E9 DUP2 PUSH2 0x12C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1305 JUMPI PUSH2 0x1304 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1312 DUP6 DUP3 DUP7 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1323 DUP6 DUP3 DUP7 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1336 DUP2 PUSH2 0x12BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x134F PUSH0 DUP4 ADD DUP5 PUSH2 0x132D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1389 DUP2 PUSH2 0x1355 JUMP JUMPDEST DUP2 EQ PUSH2 0x1393 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13A4 DUP2 PUSH2 0x1380 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13BF JUMPI PUSH2 0x13BE PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13CC DUP5 DUP3 DUP6 ADD PUSH2 0x1396 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E9 DUP2 PUSH2 0x13D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1402 PUSH0 DUP4 ADD DUP5 PUSH2 0x13E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x141D JUMPI PUSH2 0x141C PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x142A DUP5 DUP3 DUP6 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x146A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x144F JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x148F DUP3 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x1499 DUP2 DUP6 PUSH2 0x143D JUMP JUMPDEST SWAP4 POP PUSH2 0x14A9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144D JUMP JUMPDEST PUSH2 0x14B2 DUP2 PUSH2 0x1475 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14D5 DUP2 DUP5 PUSH2 0x1485 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1517 DUP3 PUSH2 0x1475 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1536 JUMPI PUSH2 0x1535 PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1548 PUSH2 0x1251 JUMP JUMPDEST SWAP1 POP PUSH2 0x1554 DUP3 DUP3 PUSH2 0x150E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1573 JUMPI PUSH2 0x1572 PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x159A PUSH2 0x1595 DUP5 PUSH2 0x1559 JUMP JUMPDEST PUSH2 0x153F JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x15BD JUMPI PUSH2 0x15BC PUSH2 0x1584 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15E6 JUMPI DUP1 PUSH2 0x15D2 DUP9 DUP3 PUSH2 0x12DB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15BF JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1604 JUMPI PUSH2 0x1603 PUSH2 0x14DD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1614 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x163B JUMPI PUSH2 0x163A PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST PUSH2 0x1644 DUP3 PUSH2 0x1475 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1671 PUSH2 0x166C DUP5 PUSH2 0x1621 JUMP JUMPDEST PUSH2 0x153F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x168D JUMPI PUSH2 0x168C PUSH2 0x161D JUMP JUMPDEST JUMPDEST PUSH2 0x1698 DUP5 DUP3 DUP6 PUSH2 0x1651 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16B4 JUMPI PUSH2 0x16B3 PUSH2 0x14DD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16C4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x165F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x16E6 JUMPI PUSH2 0x16E5 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16F3 DUP9 DUP3 DUP10 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1704 DUP9 DUP3 DUP10 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1725 JUMPI PUSH2 0x1724 PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x1731 DUP9 DUP3 DUP10 ADD PUSH2 0x15F0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1752 JUMPI PUSH2 0x1751 PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x175E DUP9 DUP3 DUP10 ADD PUSH2 0x15F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x177F JUMPI PUSH2 0x177E PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x178B DUP9 DUP3 DUP10 ADD PUSH2 0x16A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17B2 JUMPI PUSH2 0x17B1 PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17D5 PUSH2 0x17D0 DUP5 PUSH2 0x1798 JUMP JUMPDEST PUSH2 0x153F JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x17F8 JUMPI PUSH2 0x17F7 PUSH2 0x1584 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1821 JUMPI DUP1 PUSH2 0x180D DUP9 DUP3 PUSH2 0x12A8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17FA JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x183F JUMPI PUSH2 0x183E PUSH2 0x14DD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x184F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x186E JUMPI PUSH2 0x186D PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x188B JUMPI PUSH2 0x188A PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x1897 DUP6 DUP3 DUP7 ADD PUSH2 0x182B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18B8 JUMPI PUSH2 0x18B7 PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x18C4 DUP6 DUP3 DUP7 ADD PUSH2 0x15F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1900 DUP2 PUSH2 0x12BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1911 DUP4 DUP4 PUSH2 0x18F7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1933 DUP3 PUSH2 0x18CE JUMP JUMPDEST PUSH2 0x193D DUP2 DUP6 PUSH2 0x18D8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1948 DUP4 PUSH2 0x18E8 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1978 JUMPI DUP2 MLOAD PUSH2 0x195F DUP9 DUP3 PUSH2 0x1906 JUMP JUMPDEST SWAP8 POP PUSH2 0x196A DUP4 PUSH2 0x191D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x194B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x199D DUP2 DUP5 PUSH2 0x1929 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19AE DUP2 PUSH2 0x13D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x19B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19C9 DUP2 PUSH2 0x19A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19E5 JUMPI PUSH2 0x19E4 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19F2 DUP6 DUP3 DUP7 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A03 DUP6 DUP3 DUP7 ADD PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A23 JUMPI PUSH2 0x1A22 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A30 DUP6 DUP3 DUP7 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A41 DUP6 DUP3 DUP7 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A64 JUMPI PUSH2 0x1A63 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A71 DUP9 DUP3 DUP10 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1A82 DUP9 DUP3 DUP10 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1A93 DUP9 DUP3 DUP10 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1AA4 DUP9 DUP3 DUP10 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AC5 JUMPI PUSH2 0x1AC4 PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x1AD1 DUP9 DUP3 DUP10 ADD PUSH2 0x16A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1B22 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B35 JUMPI PUSH2 0x1B34 PUSH2 0x1ADE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B44 DUP2 PUSH2 0x1281 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B5D PUSH0 DUP4 ADD DUP6 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x1B6A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B3B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B84 PUSH0 DUP4 ADD DUP6 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x1B91 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x132D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BD8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1BF1 PUSH0 DUP4 ADD DUP8 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x1BFE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x1C0B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x1C18 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x132D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C58 DUP3 PUSH2 0x12BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1C63 DUP4 PUSH2 0x12BC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C7B JUMPI PUSH2 0x1C7A PUSH2 0x1C21 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C99 DUP2 DUP6 PUSH2 0x1929 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1CAD DUP2 DUP5 PUSH2 0x1929 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CDA DUP3 PUSH2 0x1CB6 JUMP JUMPDEST PUSH2 0x1CE4 DUP2 DUP6 PUSH2 0x1CC0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CF4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144D JUMP JUMPDEST PUSH2 0x1CFD DUP2 PUSH2 0x1475 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1D1B PUSH0 DUP4 ADD DUP9 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x1D28 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x1D35 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x1D42 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x132D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1D54 DUP2 DUP5 PUSH2 0x1CD0 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D6E DUP2 PUSH2 0x1380 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D89 JUMPI PUSH2 0x1D88 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D96 DUP5 DUP3 DUP6 ADD PUSH2 0x1D60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1DB2 PUSH0 DUP4 ADD DUP9 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x1DBF PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1B3B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1DD1 DUP2 DUP7 PUSH2 0x1929 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1DE5 DUP2 DUP6 PUSH2 0x1929 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1DF9 DUP2 DUP5 PUSH2 0x1CD0 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xAF 0xE4 CALLVALUE 0xD9 0xAD SUB PUSH24 0xB4047847BDCC2AF6FE13956F49C7645634C99E373F58E7B4 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER PUSH9 0x747470733A2F2F7261 PUSH24 0x2E67697468756275736572636F6E74656E742E636F6D2F57 PUSH16 0x726170616B6F726E4A61727573697269 PUSH17 0x686F742F4D795F4E46545F576F726B7368 PUSH16 0x702F6D61696E2F574F4A415F4865726F 0x2E PUSH11 0x736F6E0000000000000000 ",
							"sourceMap": "130:215:11:-:0;;;167:175;;;;;;;;;;1251:62:1;;;;;;;;;;;;;;;;;1293:13;1301:4;1293:7;;;:13;;:::i;:::-;1251:62;306:28:11::1;312:10;324:1;327:2;306:28;;;;;;;;;;;::::0;:5:::1;;;:28;;:::i;:::-;130:215:::0;;10282:86:1;10355:6;10348:4;:13;;;;;;:::i;:::-;;10282:86;:::o;10746:346::-;10856:1;10842:16;;:2;:16;;;10838:88;;10912:1;10881:34;;;;;;;;;;;:::i;:::-;;;;;;;;10838:88;10936:20;10958:23;10985:29;11004:2;11008:5;10985:18;;;:29;;:::i;:::-;10935:79;;;;11024:61;11059:1;11063:2;11067:3;11072:6;11080:4;11024:26;;;:61;;:::i;:::-;10828:264;;10746:346;;;;:::o;16080:849::-;16188:23;16213;16374:4;16368:11;16358:21;;16444:1;16436:6;16429:17;16582:8;16575:4;16567:6;16563:17;16556:35;16704:4;16696:6;16692:17;16682:27;;16737:1;16729:6;16722:17;16778:8;16771:4;16763:6;16759:17;16752:35;16907:4;16899:6;16895:17;16889:4;16882:31;16080:849;;;;;:::o;7004:690::-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;;;:30;;:::i;:::-;7263:1;7249:16;;:2;:16;;;7245:443;;7281:16;7300:12;:10;;;:12;;:::i;:::-;7281:31;;7344:1;7330:3;:10;:15;7326:352;;7365:10;7378:25;7401:1;7378:3;:22;;;;:25;;;;:::i;:::-;7365:38;;7421:13;7437:28;7463:1;7437:6;:25;;;;:28;;;;:::i;:::-;7421:44;;7483:67;7514:8;7524:4;7530:2;7534;7538:5;7545:4;7483:30;;;:67;;:::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;;;:74;;:::i;:::-;7326:352;7267:421;7245:443;7004:690;;;;;:::o;5144:1281::-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:3;:10;5353:6;:13;5315:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5261:117;5388:16;5407:12;:10;;;:12;;:::i;:::-;5388:31;;5435:9;5430:691;5454:3;:10;5450:1;:14;5430:691;;;5485:10;5498:25;5521:1;5498:3;:22;;;;:25;;;;:::i;:::-;5485:38;;5537:13;5553:28;5579:1;5553:6;:25;;;;:28;;;;:::i;:::-;5537:44;;5616:1;5600:18;;:4;:18;;;5596:420;;5638:19;5660:9;:13;5670:2;5660:13;;;;;;;;;;;:19;5674:4;5660:19;;;;;;;;;;;;;;;;5638:41;;5715:5;5701:11;:19;5697:129;;;5778:4;5784:11;5797:5;5804:2;5751:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5697:129;5978:5;5964:11;:19;5942:9;:13;5952:2;5942:13;;;;;;;;;;;:19;5956:4;5942:19;;;;;;;;;;;;;;;:41;;;;5620:396;5596:420;6048:1;6034:16;;:2;:16;;;6030:81;;6091:5;6070:9;:13;6080:2;6070:13;;;;;;;;;;;:17;6084:2;6070:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6030:81;5471:650;;5466:3;;;;;5430:691;;;;6149:1;6135:3;:10;:15;6131:288;;6166:10;6179:25;6202:1;6179:3;:22;;;;:25;;;;:::i;:::-;6166:38;;6218:13;6234:28;6260:1;6234:6;:25;;;;:28;;;;:::i;:::-;6218:44;;6312:2;6281:45;;6306:4;6281:45;;6296:8;6281:45;;;6316:2;6320:5;6281:45;;;;;;;:::i;:::-;;;;;;;;6152:185;;6131:288;;;6392:2;6362:46;;6386:4;6362:46;;6376:8;6362:46;;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;6131:288;5251:1174;5144:1281;;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;4204:197:5:-;4290:11;4378:4;4373:3;4369:14;4362:4;4357:3;4353:14;4349:35;4343:42;4336:49;;4204:197;;;;:::o;13761:974:1:-;13984:1;13967:2;:14;;;:18;13963:766;;;14022:2;14005:38;;;14044:8;14054:4;14060:2;14064:5;14071:4;14005:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14377:1;14360:6;:13;:18;14356:349;;14487:2;14464:26;;;;;;;;;;;:::i;:::-;;;;;;;;14356:349;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;14137:43;;;14125:55;;;:8;:55;;;;14121:174;;14273:2;14250:26;;;;;;;;;;;:::i;:::-;;;;;;;;14121:174;14077:232;13963:766;13761:974;;;;;;:::o;14923:1041::-;15171:1;15154:2;:14;;;:18;15150:808;;;15209:2;15192:43;;;15236:8;15246:4;15252:3;15257:6;15265:4;15192:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15606:1;15589:6;:13;:18;15585:349;;15716:2;15693:26;;;;;;;;;;;:::i;:::-;;;;;;;;15585:349;15886:6;15880:13;15871:6;15867:2;15863:15;15856:38;15188:760;15361:48;;;15349:60;;;:8;:60;;;;15345:179;;15502:2;15479:26;;;;;;;;;;;:::i;:::-;;;;;;;;15345:179;15271:267;15150:808;14923:1041;;;;;;:::o;7:99:12:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:118::-;5907:24;5925:5;5907:24;:::i;:::-;5902:3;5895:37;5820:118;;:::o;5944:332::-;6065:4;6103:2;6092:9;6088:18;6080:26;;6116:71;6184:1;6173:9;6169:17;6160:6;6116:71;:::i;:::-;6197:72;6265:2;6254:9;6250:18;6241:6;6197:72;:::i;:::-;5944:332;;;;;:::o;6282:553::-;6459:4;6497:3;6486:9;6482:19;6474:27;;6511:71;6579:1;6568:9;6564:17;6555:6;6511:71;:::i;:::-;6592:72;6660:2;6649:9;6645:18;6636:6;6592:72;:::i;:::-;6674;6742:2;6731:9;6727:18;6718:6;6674:72;:::i;:::-;6756;6824:2;6813:9;6809:18;6800:6;6756:72;:::i;:::-;6282:553;;;;;;;:::o;6841:180::-;6889:77;6886:1;6879:88;6986:4;6983:1;6976:15;7010:4;7007:1;7000:15;7027:191;7067:3;7086:20;7104:1;7086:20;:::i;:::-;7081:25;;7120:20;7138:1;7120:20;:::i;:::-;7115:25;;7163:1;7160;7156:9;7149:16;;7184:3;7181:1;7178:10;7175:36;;;7191:18;;:::i;:::-;7175:36;7027:191;;;;:::o;7224:114::-;7291:6;7325:5;7319:12;7309:22;;7224:114;;;:::o;7344:184::-;7443:11;7477:6;7472:3;7465:19;7517:4;7512:3;7508:14;7493:29;;7344:184;;;;:::o;7534:132::-;7601:4;7624:3;7616:11;;7654:4;7649:3;7645:14;7637:22;;7534:132;;;:::o;7672:108::-;7749:24;7767:5;7749:24;:::i;:::-;7744:3;7737:37;7672:108;;:::o;7786:179::-;7855:10;7876:46;7918:3;7910:6;7876:46;:::i;:::-;7954:4;7949:3;7945:14;7931:28;;7786:179;;;;:::o;7971:113::-;8041:4;8073;8068:3;8064:14;8056:22;;7971:113;;;:::o;8120:732::-;8239:3;8268:54;8316:5;8268:54;:::i;:::-;8338:86;8417:6;8412:3;8338:86;:::i;:::-;8331:93;;8448:56;8498:5;8448:56;:::i;:::-;8527:7;8558:1;8543:284;8568:6;8565:1;8562:13;8543:284;;;8644:6;8638:13;8671:63;8730:3;8715:13;8671:63;:::i;:::-;8664:70;;8757:60;8810:6;8757:60;:::i;:::-;8747:70;;8603:224;8590:1;8587;8583:9;8578:14;;8543:284;;;8547:14;8843:3;8836:10;;8244:608;;;8120:732;;;;:::o;8858:634::-;9079:4;9117:2;9106:9;9102:18;9094:26;;9166:9;9160:4;9156:20;9152:1;9141:9;9137:17;9130:47;9194:108;9297:4;9288:6;9194:108;:::i;:::-;9186:116;;9349:9;9343:4;9339:20;9334:2;9323:9;9319:18;9312:48;9377:108;9480:4;9471:6;9377:108;:::i;:::-;9369:116;;8858:634;;;;;:::o;9498:98::-;9549:6;9583:5;9577:12;9567:22;;9498:98;;;:::o;9602:168::-;9685:11;9719:6;9714:3;9707:19;9759:4;9754:3;9750:14;9735:29;;9602:168;;;;:::o;9776:246::-;9857:1;9867:113;9881:6;9878:1;9875:13;9867:113;;;9966:1;9961:3;9957:11;9951:18;9947:1;9942:3;9938:11;9931:39;9903:2;9900:1;9896:10;9891:15;;9867:113;;;10014:1;10005:6;10000:3;9996:16;9989:27;9838:184;9776:246;;;:::o;10028:102::-;10069:6;10120:2;10116:7;10111:2;10104:5;10100:14;10096:28;10086:38;;10028:102;;;:::o;10136:373::-;10222:3;10250:38;10282:5;10250:38;:::i;:::-;10304:70;10367:6;10362:3;10304:70;:::i;:::-;10297:77;;10383:65;10441:6;10436:3;10429:4;10422:5;10418:16;10383:65;:::i;:::-;10473:29;10495:6;10473:29;:::i;:::-;10468:3;10464:39;10457:46;;10226:283;10136:373;;;;:::o;10515:751::-;10738:4;10776:3;10765:9;10761:19;10753:27;;10790:71;10858:1;10847:9;10843:17;10834:6;10790:71;:::i;:::-;10871:72;10939:2;10928:9;10924:18;10915:6;10871:72;:::i;:::-;10953;11021:2;11010:9;11006:18;10997:6;10953:72;:::i;:::-;11035;11103:2;11092:9;11088:18;11079:6;11035:72;:::i;:::-;11155:9;11149:4;11145:20;11139:3;11128:9;11124:19;11117:49;11183:76;11254:4;11245:6;11183:76;:::i;:::-;11175:84;;10515:751;;;;;;;;:::o;11353:117::-;11462:1;11459;11452:12;11599:149;11635:7;11675:66;11668:5;11664:78;11653:89;;11599:149;;;:::o;11754:120::-;11826:23;11843:5;11826:23;:::i;:::-;11819:5;11816:34;11806:62;;11864:1;11861;11854:12;11806:62;11754:120;:::o;11880:141::-;11936:5;11967:6;11961:13;11952:22;;11983:32;12009:5;11983:32;:::i;:::-;11880:141;;;;:::o;12027:349::-;12096:6;12145:2;12133:9;12124:7;12120:23;12116:32;12113:119;;;12151:79;;:::i;:::-;12113:119;12271:1;12296:63;12351:7;12342:6;12331:9;12327:22;12296:63;:::i;:::-;12286:73;;12242:127;12027:349;;;;:::o;12382:1053::-;12705:4;12743:3;12732:9;12728:19;12720:27;;12757:71;12825:1;12814:9;12810:17;12801:6;12757:71;:::i;:::-;12838:72;12906:2;12895:9;12891:18;12882:6;12838:72;:::i;:::-;12957:9;12951:4;12947:20;12942:2;12931:9;12927:18;12920:48;12985:108;13088:4;13079:6;12985:108;:::i;:::-;12977:116;;13140:9;13134:4;13130:20;13125:2;13114:9;13110:18;13103:48;13168:108;13271:4;13262:6;13168:108;:::i;:::-;13160:116;;13324:9;13318:4;13314:20;13308:3;13297:9;13293:19;13286:49;13352:76;13423:4;13414:6;13352:76;:::i;:::-;13344:84;;12382:1053;;;;;;;;:::o;130:215:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArrays_1186": {
									"entryPoint": 2867,
									"id": 1186,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_doSafeBatchTransferAcceptanceCheck_1170": {
									"entryPoint": 4258,
									"id": 1170,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1100": {
									"entryPoint": 3827,
									"id": 1100,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1563": {
									"entryPoint": 1783,
									"id": 1563,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_799": {
									"entryPoint": 1790,
									"id": 799,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_744": {
									"entryPoint": 2433,
									"id": 744,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1032": {
									"entryPoint": 2072,
									"id": 1032,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_678": {
									"entryPoint": 2695,
									"id": 678,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_602": {
									"entryPoint": 2915,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@balanceOfBatch_326": {
									"entryPoint": 1084,
									"id": 326,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_256": {
									"entryPoint": 461,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_359": {
									"entryPoint": 1369,
									"id": 359,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_449": {
									"entryPoint": 917,
									"id": 449,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_403": {
									"entryPoint": 1511,
									"id": 403,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_342": {
									"entryPoint": 1347,
									"id": 342,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1706": {
									"entryPoint": 1678,
									"id": 1706,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_228": {
									"entryPoint": 546,
									"id": 228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1537": {
									"entryPoint": 2053,
									"id": 1537,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1550": {
									"entryPoint": 2034,
									"id": 1550,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uri_239": {
									"entryPoint": 771,
									"id": 239,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6083,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5512,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5727,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 7520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 5792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 6731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 7540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 6986,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7583,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7432,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7134,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7297,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7025,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4689,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 5713,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5197,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 7201,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6878,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7064,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5345,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5341,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5508,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5661,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4702,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4698,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:23022:12",
										"nodeType": "YulBlock",
										"src": "0:23022:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "611:79:12",
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:12",
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:12",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nativeSrc": "670:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nativeSrc": "670:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nativeSrc": "641:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nativeSrc": "631:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nativeSrc": "624:43:12",
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nativeSrc": "621:63:12",
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nativeSrc": "748:87:12",
													"nodeType": "YulBlock",
													"src": "748:87:12",
													"statements": [
														{
															"nativeSrc": "758:29:12",
															"nodeType": "YulAssignment",
															"src": "758:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:12"
																},
																"nativeSrc": "767:20:12",
																"nodeType": "YulFunctionCall",
																"src": "767:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:12"
																},
																"nativeSrc": "796:33:12",
																"nodeType": "YulFunctionCall",
																"src": "796:33:12"
															},
															"nativeSrc": "796:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:12",
														"nodeType": "YulTypedName",
														"src": "726:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:12",
														"nodeType": "YulTypedName",
														"src": "734:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:12",
														"nodeType": "YulTypedName",
														"src": "742:5:12",
														"type": ""
													}
												],
												"src": "696:139:12"
											},
											{
												"body": {
													"nativeSrc": "886:32:12",
													"nodeType": "YulBlock",
													"src": "886:32:12",
													"statements": [
														{
															"nativeSrc": "896:16:12",
															"nodeType": "YulAssignment",
															"src": "896:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:12",
																"nodeType": "YulIdentifier",
																"src": "907:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:12",
														"nodeType": "YulTypedName",
														"src": "868:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:12",
														"nodeType": "YulTypedName",
														"src": "878:7:12",
														"type": ""
													}
												],
												"src": "841:77:12"
											},
											{
												"body": {
													"nativeSrc": "967:79:12",
													"nodeType": "YulBlock",
													"src": "967:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:12",
																"nodeType": "YulBlock",
																"src": "1024:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:12"
																			},
																			"nativeSrc": "1026:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:12"
																		},
																		"nativeSrc": "1026:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:12"
																				},
																				"nativeSrc": "997:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:12"
																		},
																		"nativeSrc": "987:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:12"
																},
																"nativeSrc": "980:43:12",
																"nodeType": "YulFunctionCall",
																"src": "980:43:12"
															},
															"nativeSrc": "977:63:12",
															"nodeType": "YulIf",
															"src": "977:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:12",
														"nodeType": "YulTypedName",
														"src": "960:5:12",
														"type": ""
													}
												],
												"src": "924:122:12"
											},
											{
												"body": {
													"nativeSrc": "1104:87:12",
													"nodeType": "YulBlock",
													"src": "1104:87:12",
													"statements": [
														{
															"nativeSrc": "1114:29:12",
															"nodeType": "YulAssignment",
															"src": "1114:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:12"
																},
																"nativeSrc": "1123:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:12"
																},
																"nativeSrc": "1152:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:12"
															},
															"nativeSrc": "1152:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:12",
														"nodeType": "YulTypedName",
														"src": "1082:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:12",
														"nodeType": "YulTypedName",
														"src": "1090:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:12",
														"nodeType": "YulTypedName",
														"src": "1098:5:12",
														"type": ""
													}
												],
												"src": "1052:139:12"
											},
											{
												"body": {
													"nativeSrc": "1280:391:12",
													"nodeType": "YulBlock",
													"src": "1280:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:12",
																"nodeType": "YulBlock",
																"src": "1326:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:12"
																			},
																			"nativeSrc": "1328:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:12"
																		},
																		"nativeSrc": "1328:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:12"
																		},
																		"nativeSrc": "1297:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:12"
																},
																"nativeSrc": "1293:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:12"
															},
															"nativeSrc": "1290:119:12",
															"nodeType": "YulIf",
															"src": "1290:119:12"
														},
														{
															"nativeSrc": "1419:117:12",
															"nodeType": "YulBlock",
															"src": "1419:117:12",
															"statements": [
																{
																	"nativeSrc": "1434:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:12",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:12"
																				},
																				"nativeSrc": "1494:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:12"
																		},
																		"nativeSrc": "1473:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:12",
															"nodeType": "YulBlock",
															"src": "1546:118:12",
															"statements": [
																{
																	"nativeSrc": "1561:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:12",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:12"
																				},
																				"nativeSrc": "1622:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:12"
																		},
																		"nativeSrc": "1601:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:12",
														"nodeType": "YulTypedName",
														"src": "1242:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:12",
														"nodeType": "YulTypedName",
														"src": "1253:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:12",
														"nodeType": "YulTypedName",
														"src": "1265:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:12",
														"nodeType": "YulTypedName",
														"src": "1273:6:12",
														"type": ""
													}
												],
												"src": "1197:474:12"
											},
											{
												"body": {
													"nativeSrc": "1742:53:12",
													"nodeType": "YulBlock",
													"src": "1742:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1759:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1782:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1764:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:12"
																		},
																		"nativeSrc": "1764:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1752:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:12"
																},
																"nativeSrc": "1752:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1752:37:12"
															},
															"nativeSrc": "1752:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1677:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1730:5:12",
														"nodeType": "YulTypedName",
														"src": "1730:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1737:3:12",
														"nodeType": "YulTypedName",
														"src": "1737:3:12",
														"type": ""
													}
												],
												"src": "1677:118:12"
											},
											{
												"body": {
													"nativeSrc": "1899:124:12",
													"nodeType": "YulBlock",
													"src": "1899:124:12",
													"statements": [
														{
															"nativeSrc": "1909:26:12",
															"nodeType": "YulAssignment",
															"src": "1909:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1921:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1932:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1917:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:12"
																},
																"nativeSrc": "1917:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1917:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1909:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1989:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2002:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2013:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1998:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:12"
																		},
																		"nativeSrc": "1998:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1945:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:12"
																},
																"nativeSrc": "1945:71:12",
																"nodeType": "YulFunctionCall",
																"src": "1945:71:12"
															},
															"nativeSrc": "1945:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1801:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1871:9:12",
														"nodeType": "YulTypedName",
														"src": "1871:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1883:6:12",
														"nodeType": "YulTypedName",
														"src": "1883:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1894:4:12",
														"nodeType": "YulTypedName",
														"src": "1894:4:12",
														"type": ""
													}
												],
												"src": "1801:222:12"
											},
											{
												"body": {
													"nativeSrc": "2073:105:12",
													"nodeType": "YulBlock",
													"src": "2073:105:12",
													"statements": [
														{
															"nativeSrc": "2083:89:12",
															"nodeType": "YulAssignment",
															"src": "2083:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2098:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2105:66:12",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2094:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:12"
																},
																"nativeSrc": "2094:78:12",
																"nodeType": "YulFunctionCall",
																"src": "2094:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2083:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "2029:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2055:5:12",
														"nodeType": "YulTypedName",
														"src": "2055:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2065:7:12",
														"nodeType": "YulTypedName",
														"src": "2065:7:12",
														"type": ""
													}
												],
												"src": "2029:149:12"
											},
											{
												"body": {
													"nativeSrc": "2226:78:12",
													"nodeType": "YulBlock",
													"src": "2226:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2282:16:12",
																"nodeType": "YulBlock",
																"src": "2282:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2291:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2294:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2284:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:12"
																			},
																			"nativeSrc": "2284:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:12"
																		},
																		"nativeSrc": "2284:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2249:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2273:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "2256:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:12"
																				},
																				"nativeSrc": "2256:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2246:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:12"
																		},
																		"nativeSrc": "2246:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2239:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:12"
																},
																"nativeSrc": "2239:42:12",
																"nodeType": "YulFunctionCall",
																"src": "2239:42:12"
															},
															"nativeSrc": "2236:62:12",
															"nodeType": "YulIf",
															"src": "2236:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "2184:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2219:5:12",
														"nodeType": "YulTypedName",
														"src": "2219:5:12",
														"type": ""
													}
												],
												"src": "2184:120:12"
											},
											{
												"body": {
													"nativeSrc": "2361:86:12",
													"nodeType": "YulBlock",
													"src": "2361:86:12",
													"statements": [
														{
															"nativeSrc": "2371:29:12",
															"nodeType": "YulAssignment",
															"src": "2371:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2393:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2380:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:12"
																},
																"nativeSrc": "2380:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2380:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2371:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2435:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "2409:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:12"
																},
																"nativeSrc": "2409:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2409:32:12"
															},
															"nativeSrc": "2409:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "2310:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2339:6:12",
														"nodeType": "YulTypedName",
														"src": "2339:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2347:3:12",
														"nodeType": "YulTypedName",
														"src": "2347:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2355:5:12",
														"nodeType": "YulTypedName",
														"src": "2355:5:12",
														"type": ""
													}
												],
												"src": "2310:137:12"
											},
											{
												"body": {
													"nativeSrc": "2518:262:12",
													"nodeType": "YulBlock",
													"src": "2518:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2564:83:12",
																"nodeType": "YulBlock",
																"src": "2564:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2566:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:12"
																			},
																			"nativeSrc": "2566:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:12"
																		},
																		"nativeSrc": "2566:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2539:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2548:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2535:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:12"
																		},
																		"nativeSrc": "2535:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2560:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2531:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:12"
																},
																"nativeSrc": "2531:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2531:32:12"
															},
															"nativeSrc": "2528:119:12",
															"nodeType": "YulIf",
															"src": "2528:119:12"
														},
														{
															"nativeSrc": "2657:116:12",
															"nodeType": "YulBlock",
															"src": "2657:116:12",
															"statements": [
																{
																	"nativeSrc": "2672:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2686:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2676:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2701:62:12",
																	"nodeType": "YulAssignment",
																	"src": "2701:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2735:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2746:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2731:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:12"
																				},
																				"nativeSrc": "2731:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2755:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "2711:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:12"
																		},
																		"nativeSrc": "2711:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2701:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "2453:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2488:9:12",
														"nodeType": "YulTypedName",
														"src": "2488:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2499:7:12",
														"nodeType": "YulTypedName",
														"src": "2499:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2511:6:12",
														"nodeType": "YulTypedName",
														"src": "2511:6:12",
														"type": ""
													}
												],
												"src": "2453:327:12"
											},
											{
												"body": {
													"nativeSrc": "2828:48:12",
													"nodeType": "YulBlock",
													"src": "2828:48:12",
													"statements": [
														{
															"nativeSrc": "2838:32:12",
															"nodeType": "YulAssignment",
															"src": "2838:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2863:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2856:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:12"
																		},
																		"nativeSrc": "2856:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2849:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:12"
																},
																"nativeSrc": "2849:21:12",
																"nodeType": "YulFunctionCall",
																"src": "2849:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2838:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2786:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2810:5:12",
														"nodeType": "YulTypedName",
														"src": "2810:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2820:7:12",
														"nodeType": "YulTypedName",
														"src": "2820:7:12",
														"type": ""
													}
												],
												"src": "2786:90:12"
											},
											{
												"body": {
													"nativeSrc": "2941:50:12",
													"nodeType": "YulBlock",
													"src": "2941:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2958:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2978:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2963:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:12"
																		},
																		"nativeSrc": "2963:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2951:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:12"
																},
																"nativeSrc": "2951:34:12",
																"nodeType": "YulFunctionCall",
																"src": "2951:34:12"
															},
															"nativeSrc": "2951:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2882:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2929:5:12",
														"nodeType": "YulTypedName",
														"src": "2929:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2936:3:12",
														"nodeType": "YulTypedName",
														"src": "2936:3:12",
														"type": ""
													}
												],
												"src": "2882:109:12"
											},
											{
												"body": {
													"nativeSrc": "3089:118:12",
													"nodeType": "YulBlock",
													"src": "3089:118:12",
													"statements": [
														{
															"nativeSrc": "3099:26:12",
															"nodeType": "YulAssignment",
															"src": "3099:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3111:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3122:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3107:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:12"
																},
																"nativeSrc": "3107:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3107:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3099:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3173:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3186:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3197:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3182:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:12"
																		},
																		"nativeSrc": "3182:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3135:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:12"
																},
																"nativeSrc": "3135:65:12",
																"nodeType": "YulFunctionCall",
																"src": "3135:65:12"
															},
															"nativeSrc": "3135:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2997:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3061:9:12",
														"nodeType": "YulTypedName",
														"src": "3061:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3073:6:12",
														"nodeType": "YulTypedName",
														"src": "3073:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3084:4:12",
														"nodeType": "YulTypedName",
														"src": "3084:4:12",
														"type": ""
													}
												],
												"src": "2997:210:12"
											},
											{
												"body": {
													"nativeSrc": "3279:263:12",
													"nodeType": "YulBlock",
													"src": "3279:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3325:83:12",
																"nodeType": "YulBlock",
																"src": "3325:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3327:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3327:77:12"
																			},
																			"nativeSrc": "3327:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3327:79:12"
																		},
																		"nativeSrc": "3327:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3327:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3300:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3300:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3309:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3296:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:12"
																		},
																		"nativeSrc": "3296:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3296:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3321:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3292:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:12"
																},
																"nativeSrc": "3292:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3292:32:12"
															},
															"nativeSrc": "3289:119:12",
															"nodeType": "YulIf",
															"src": "3289:119:12"
														},
														{
															"nativeSrc": "3418:117:12",
															"nodeType": "YulBlock",
															"src": "3418:117:12",
															"statements": [
																{
																	"nativeSrc": "3433:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3433:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3447:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3447:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3437:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3437:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3462:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3462:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3497:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3508:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3493:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:12"
																				},
																				"nativeSrc": "3493:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3517:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3472:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:12"
																		},
																		"nativeSrc": "3472:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3462:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3213:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3249:9:12",
														"nodeType": "YulTypedName",
														"src": "3249:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3260:7:12",
														"nodeType": "YulTypedName",
														"src": "3260:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3272:6:12",
														"nodeType": "YulTypedName",
														"src": "3272:6:12",
														"type": ""
													}
												],
												"src": "3213:329:12"
											},
											{
												"body": {
													"nativeSrc": "3607:40:12",
													"nodeType": "YulBlock",
													"src": "3607:40:12",
													"statements": [
														{
															"nativeSrc": "3618:22:12",
															"nodeType": "YulAssignment",
															"src": "3618:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3634:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3634:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3628:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3628:5:12"
																},
																"nativeSrc": "3628:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3628:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3618:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3548:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3590:5:12",
														"nodeType": "YulTypedName",
														"src": "3590:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3600:6:12",
														"nodeType": "YulTypedName",
														"src": "3600:6:12",
														"type": ""
													}
												],
												"src": "3548:99:12"
											},
											{
												"body": {
													"nativeSrc": "3749:73:12",
													"nodeType": "YulBlock",
													"src": "3749:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3766:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3766:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3771:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3771:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3759:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:12"
																},
																"nativeSrc": "3759:19:12",
																"nodeType": "YulFunctionCall",
																"src": "3759:19:12"
															},
															"nativeSrc": "3759:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "3759:19:12"
														},
														{
															"nativeSrc": "3787:29:12",
															"nodeType": "YulAssignment",
															"src": "3787:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3806:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3806:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3811:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3811:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3802:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3802:3:12"
																},
																"nativeSrc": "3802:14:12",
																"nodeType": "YulFunctionCall",
																"src": "3802:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3787:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "3787:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3653:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3721:3:12",
														"nodeType": "YulTypedName",
														"src": "3721:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3726:6:12",
														"nodeType": "YulTypedName",
														"src": "3726:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3737:11:12",
														"nodeType": "YulTypedName",
														"src": "3737:11:12",
														"type": ""
													}
												],
												"src": "3653:169:12"
											},
											{
												"body": {
													"nativeSrc": "3890:184:12",
													"nodeType": "YulBlock",
													"src": "3890:184:12",
													"statements": [
														{
															"nativeSrc": "3900:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3900:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3909:1:12",
																"nodeType": "YulLiteral",
																"src": "3909:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "3904:1:12",
																	"nodeType": "YulTypedName",
																	"src": "3904:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3969:63:12",
																"nodeType": "YulBlock",
																"src": "3969:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "3994:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "3994:3:12"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "3999:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "3999:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3990:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3990:3:12"
																					},
																					"nativeSrc": "3990:11:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3990:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "4013:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4013:3:12"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "4018:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "4018:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4009:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "4009:3:12"
																							},
																							"nativeSrc": "4009:11:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4009:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4003:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4003:5:12"
																					},
																					"nativeSrc": "4003:18:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4003:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3983:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3983:6:12"
																			},
																			"nativeSrc": "3983:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3983:39:12"
																		},
																		"nativeSrc": "3983:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3983:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3930:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "3930:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3933:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3933:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3927:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3927:2:12"
																},
																"nativeSrc": "3927:13:12",
																"nodeType": "YulFunctionCall",
																"src": "3927:13:12"
															},
															"nativeSrc": "3919:113:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3941:19:12",
																"nodeType": "YulBlock",
																"src": "3941:19:12",
																"statements": [
																	{
																		"nativeSrc": "3943:15:12",
																		"nodeType": "YulAssignment",
																		"src": "3943:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3952:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "3952:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3955:2:12",
																					"nodeType": "YulLiteral",
																					"src": "3955:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3948:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3948:3:12"
																			},
																			"nativeSrc": "3948:10:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3948:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3943:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "3943:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3923:3:12",
																"nodeType": "YulBlock",
																"src": "3923:3:12",
																"statements": []
															},
															"src": "3919:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4052:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "4052:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4057:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4057:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4048:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4048:3:12"
																		},
																		"nativeSrc": "4048:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4048:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4066:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4041:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4041:6:12"
																},
																"nativeSrc": "4041:27:12",
																"nodeType": "YulFunctionCall",
																"src": "4041:27:12"
															},
															"nativeSrc": "4041:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "4041:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "3828:246:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3872:3:12",
														"nodeType": "YulTypedName",
														"src": "3872:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3877:3:12",
														"nodeType": "YulTypedName",
														"src": "3877:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3882:6:12",
														"nodeType": "YulTypedName",
														"src": "3882:6:12",
														"type": ""
													}
												],
												"src": "3828:246:12"
											},
											{
												"body": {
													"nativeSrc": "4128:54:12",
													"nodeType": "YulBlock",
													"src": "4128:54:12",
													"statements": [
														{
															"nativeSrc": "4138:38:12",
															"nodeType": "YulAssignment",
															"src": "4138:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4156:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4156:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4163:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4163:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4152:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4152:3:12"
																		},
																		"nativeSrc": "4152:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4152:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4172:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4172:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4168:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4168:3:12"
																		},
																		"nativeSrc": "4168:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4168:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4148:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4148:3:12"
																},
																"nativeSrc": "4148:28:12",
																"nodeType": "YulFunctionCall",
																"src": "4148:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4138:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4138:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "4080:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4111:5:12",
														"nodeType": "YulTypedName",
														"src": "4111:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4121:6:12",
														"nodeType": "YulTypedName",
														"src": "4121:6:12",
														"type": ""
													}
												],
												"src": "4080:102:12"
											},
											{
												"body": {
													"nativeSrc": "4280:285:12",
													"nodeType": "YulBlock",
													"src": "4280:285:12",
													"statements": [
														{
															"nativeSrc": "4290:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4290:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4337:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4337:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4304:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "4304:32:12"
																},
																"nativeSrc": "4304:39:12",
																"nodeType": "YulFunctionCall",
																"src": "4304:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4294:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4294:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4352:78:12",
															"nodeType": "YulAssignment",
															"src": "4352:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4418:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4418:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4423:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4423:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4359:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "4359:58:12"
																},
																"nativeSrc": "4359:71:12",
																"nodeType": "YulFunctionCall",
																"src": "4359:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4352:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4352:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4478:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4478:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4485:4:12",
																				"nodeType": "YulLiteral",
																				"src": "4485:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4474:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4474:3:12"
																		},
																		"nativeSrc": "4474:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4474:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4492:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4492:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4497:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4497:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4439:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "4439:34:12"
																},
																"nativeSrc": "4439:65:12",
																"nodeType": "YulFunctionCall",
																"src": "4439:65:12"
															},
															"nativeSrc": "4439:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "4439:65:12"
														},
														{
															"nativeSrc": "4513:46:12",
															"nodeType": "YulAssignment",
															"src": "4513:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4524:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4524:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4551:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4551:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4529:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "4529:21:12"
																		},
																		"nativeSrc": "4529:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4529:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4520:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4520:3:12"
																},
																"nativeSrc": "4520:39:12",
																"nodeType": "YulFunctionCall",
																"src": "4520:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4513:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4513:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4188:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4261:5:12",
														"nodeType": "YulTypedName",
														"src": "4261:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4268:3:12",
														"nodeType": "YulTypedName",
														"src": "4268:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4276:3:12",
														"nodeType": "YulTypedName",
														"src": "4276:3:12",
														"type": ""
													}
												],
												"src": "4188:377:12"
											},
											{
												"body": {
													"nativeSrc": "4689:195:12",
													"nodeType": "YulBlock",
													"src": "4689:195:12",
													"statements": [
														{
															"nativeSrc": "4699:26:12",
															"nodeType": "YulAssignment",
															"src": "4699:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4711:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4711:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4722:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4722:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4707:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4707:3:12"
																},
																"nativeSrc": "4707:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4707:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4699:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4699:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4746:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4746:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4757:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4757:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4742:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4742:3:12"
																		},
																		"nativeSrc": "4742:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4742:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4765:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4765:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4771:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4771:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4761:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:12"
																		},
																		"nativeSrc": "4761:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4761:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4735:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4735:6:12"
																},
																"nativeSrc": "4735:47:12",
																"nodeType": "YulFunctionCall",
																"src": "4735:47:12"
															},
															"nativeSrc": "4735:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "4735:47:12"
														},
														{
															"nativeSrc": "4791:86:12",
															"nodeType": "YulAssignment",
															"src": "4791:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4863:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4863:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4872:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4872:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4799:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "4799:63:12"
																},
																"nativeSrc": "4799:78:12",
																"nodeType": "YulFunctionCall",
																"src": "4799:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4791:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4791:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4571:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4661:9:12",
														"nodeType": "YulTypedName",
														"src": "4661:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4673:6:12",
														"nodeType": "YulTypedName",
														"src": "4673:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4684:4:12",
														"nodeType": "YulTypedName",
														"src": "4684:4:12",
														"type": ""
													}
												],
												"src": "4571:313:12"
											},
											{
												"body": {
													"nativeSrc": "4979:28:12",
													"nodeType": "YulBlock",
													"src": "4979:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4996:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4996:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4999:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4999:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4989:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4989:6:12"
																},
																"nativeSrc": "4989:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4989:12:12"
															},
															"nativeSrc": "4989:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "4989:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4890:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4890:117:12"
											},
											{
												"body": {
													"nativeSrc": "5041:152:12",
													"nodeType": "YulBlock",
													"src": "5041:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5058:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5058:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5061:77:12",
																		"nodeType": "YulLiteral",
																		"src": "5061:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5051:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5051:6:12"
																},
																"nativeSrc": "5051:88:12",
																"nodeType": "YulFunctionCall",
																"src": "5051:88:12"
															},
															"nativeSrc": "5051:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "5051:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5155:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5155:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5158:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5158:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5148:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5148:6:12"
																},
																"nativeSrc": "5148:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5148:15:12"
															},
															"nativeSrc": "5148:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5148:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5179:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5179:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5182:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5182:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5172:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5172:6:12"
																},
																"nativeSrc": "5172:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5172:15:12"
															},
															"nativeSrc": "5172:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5172:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5013:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "5013:180:12"
											},
											{
												"body": {
													"nativeSrc": "5242:238:12",
													"nodeType": "YulBlock",
													"src": "5242:238:12",
													"statements": [
														{
															"nativeSrc": "5252:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5252:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5274:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5274:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5304:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5304:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5282:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "5282:21:12"
																		},
																		"nativeSrc": "5282:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5282:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5270:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5270:3:12"
																},
																"nativeSrc": "5270:40:12",
																"nodeType": "YulFunctionCall",
																"src": "5270:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5256:10:12",
																	"nodeType": "YulTypedName",
																	"src": "5256:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5421:22:12",
																"nodeType": "YulBlock",
																"src": "5421:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5423:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5423:16:12"
																			},
																			"nativeSrc": "5423:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5423:18:12"
																		},
																		"nativeSrc": "5423:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5423:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5364:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "5364:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5376:18:12",
																				"nodeType": "YulLiteral",
																				"src": "5376:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5361:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5361:2:12"
																		},
																		"nativeSrc": "5361:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5361:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5400:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "5400:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5412:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5412:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5397:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5397:2:12"
																		},
																		"nativeSrc": "5397:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5397:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5358:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5358:2:12"
																},
																"nativeSrc": "5358:62:12",
																"nodeType": "YulFunctionCall",
																"src": "5358:62:12"
															},
															"nativeSrc": "5355:88:12",
															"nodeType": "YulIf",
															"src": "5355:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5459:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5459:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5463:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "5463:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5452:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5452:6:12"
																},
																"nativeSrc": "5452:22:12",
																"nodeType": "YulFunctionCall",
																"src": "5452:22:12"
															},
															"nativeSrc": "5452:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "5452:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5199:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5228:6:12",
														"nodeType": "YulTypedName",
														"src": "5228:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5236:4:12",
														"nodeType": "YulTypedName",
														"src": "5236:4:12",
														"type": ""
													}
												],
												"src": "5199:281:12"
											},
											{
												"body": {
													"nativeSrc": "5527:88:12",
													"nodeType": "YulBlock",
													"src": "5527:88:12",
													"statements": [
														{
															"nativeSrc": "5537:30:12",
															"nodeType": "YulAssignment",
															"src": "5537:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5547:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "5547:18:12"
																},
																"nativeSrc": "5547:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5547:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5537:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5596:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5596:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5604:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5604:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5576:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "5576:19:12"
																},
																"nativeSrc": "5576:33:12",
																"nodeType": "YulFunctionCall",
																"src": "5576:33:12"
															},
															"nativeSrc": "5576:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "5576:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5486:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5511:4:12",
														"nodeType": "YulTypedName",
														"src": "5511:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5520:6:12",
														"nodeType": "YulTypedName",
														"src": "5520:6:12",
														"type": ""
													}
												],
												"src": "5486:129:12"
											},
											{
												"body": {
													"nativeSrc": "5703:229:12",
													"nodeType": "YulBlock",
													"src": "5703:229:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5808:22:12",
																"nodeType": "YulBlock",
																"src": "5808:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5810:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5810:16:12"
																			},
																			"nativeSrc": "5810:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5810:18:12"
																		},
																		"nativeSrc": "5810:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5810:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5780:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5788:18:12",
																		"nodeType": "YulLiteral",
																		"src": "5788:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5777:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5777:2:12"
																},
																"nativeSrc": "5777:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5777:30:12"
															},
															"nativeSrc": "5774:56:12",
															"nodeType": "YulIf",
															"src": "5774:56:12"
														},
														{
															"nativeSrc": "5840:25:12",
															"nodeType": "YulAssignment",
															"src": "5840:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5852:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5852:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5860:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5860:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5848:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5848:3:12"
																},
																"nativeSrc": "5848:17:12",
																"nodeType": "YulFunctionCall",
																"src": "5848:17:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5840:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5840:4:12"
																}
															]
														},
														{
															"nativeSrc": "5902:23:12",
															"nodeType": "YulAssignment",
															"src": "5902:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5914:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5914:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5920:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5920:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5910:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5910:3:12"
																},
																"nativeSrc": "5910:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5910:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5902:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5902:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5621:311:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5687:6:12",
														"nodeType": "YulTypedName",
														"src": "5687:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5698:4:12",
														"nodeType": "YulTypedName",
														"src": "5698:4:12",
														"type": ""
													}
												],
												"src": "5621:311:12"
											},
											{
												"body": {
													"nativeSrc": "6027:28:12",
													"nodeType": "YulBlock",
													"src": "6027:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6044:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6044:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6047:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6047:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6037:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6037:6:12"
																},
																"nativeSrc": "6037:12:12",
																"nodeType": "YulFunctionCall",
																"src": "6037:12:12"
															},
															"nativeSrc": "6037:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "6037:12:12"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "5938:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "5938:117:12"
											},
											{
												"body": {
													"nativeSrc": "6180:608:12",
													"nodeType": "YulBlock",
													"src": "6180:608:12",
													"statements": [
														{
															"nativeSrc": "6190:90:12",
															"nodeType": "YulAssignment",
															"src": "6190:90:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6272:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6272:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "6215:56:12",
																			"nodeType": "YulIdentifier",
																			"src": "6215:56:12"
																		},
																		"nativeSrc": "6215:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6215:64:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6199:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "6199:15:12"
																},
																"nativeSrc": "6199:81:12",
																"nodeType": "YulFunctionCall",
																"src": "6199:81:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6190:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6190:5:12"
																}
															]
														},
														{
															"nativeSrc": "6289:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6289:16:12",
															"value": {
																"name": "array",
																"nativeSrc": "6300:5:12",
																"nodeType": "YulIdentifier",
																"src": "6300:5:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6293:3:12",
																	"nodeType": "YulTypedName",
																	"src": "6293:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6322:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6322:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6329:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6329:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6315:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6315:6:12"
																},
																"nativeSrc": "6315:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6315:21:12"
															},
															"nativeSrc": "6315:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6315:21:12"
														},
														{
															"nativeSrc": "6345:23:12",
															"nodeType": "YulAssignment",
															"src": "6345:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6356:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6356:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6363:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6363:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6352:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6352:3:12"
																},
																"nativeSrc": "6352:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6352:16:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "6345:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6345:3:12"
																}
															]
														},
														{
															"nativeSrc": "6378:44:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6378:44:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6396:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6396:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6408:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6408:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6416:4:12",
																				"nodeType": "YulLiteral",
																				"src": "6416:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6404:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6404:3:12"
																		},
																		"nativeSrc": "6404:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6404:17:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6392:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6392:3:12"
																},
																"nativeSrc": "6392:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6392:30:12"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "6382:6:12",
																	"nodeType": "YulTypedName",
																	"src": "6382:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6450:103:12",
																"nodeType": "YulBlock",
																"src": "6450:103:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "6464:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6464:77:12"
																			},
																			"nativeSrc": "6464:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6464:79:12"
																		},
																		"nativeSrc": "6464:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6464:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6437:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6437:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6445:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6445:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6434:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6434:2:12"
																},
																"nativeSrc": "6434:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6434:15:12"
															},
															"nativeSrc": "6431:122:12",
															"nodeType": "YulIf",
															"src": "6431:122:12"
														},
														{
															"body": {
																"nativeSrc": "6638:144:12",
																"nodeType": "YulBlock",
																"src": "6638:144:12",
																"statements": [
																	{
																		"nativeSrc": "6653:21:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6653:21:12",
																		"value": {
																			"name": "src",
																			"nativeSrc": "6671:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6671:3:12"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "6657:10:12",
																				"nodeType": "YulTypedName",
																				"src": "6657:10:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6695:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6695:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "6721:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "6721:10:12"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "6733:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6733:3:12"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "6700:20:12",
																						"nodeType": "YulIdentifier",
																						"src": "6700:20:12"
																					},
																					"nativeSrc": "6700:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6700:37:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6688:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6688:6:12"
																			},
																			"nativeSrc": "6688:50:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6688:50:12"
																		},
																		"nativeSrc": "6688:50:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6688:50:12"
																	},
																	{
																		"nativeSrc": "6751:21:12",
																		"nodeType": "YulAssignment",
																		"src": "6751:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6762:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6762:3:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6767:4:12",
																					"nodeType": "YulLiteral",
																					"src": "6767:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6758:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6758:3:12"
																			},
																			"nativeSrc": "6758:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6758:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "6751:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6751:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6591:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6591:3:12"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6596:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6596:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6588:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6588:2:12"
																},
																"nativeSrc": "6588:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6588:15:12"
															},
															"nativeSrc": "6562:220:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6604:25:12",
																"nodeType": "YulBlock",
																"src": "6604:25:12",
																"statements": [
																	{
																		"nativeSrc": "6606:21:12",
																		"nodeType": "YulAssignment",
																		"src": "6606:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "6617:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6617:3:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6622:4:12",
																					"nodeType": "YulLiteral",
																					"src": "6622:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6613:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6613:3:12"
																			},
																			"nativeSrc": "6613:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6613:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "6606:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6606:3:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6566:21:12",
																"nodeType": "YulBlock",
																"src": "6566:21:12",
																"statements": [
																	{
																		"nativeSrc": "6568:17:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6568:17:12",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "6579:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6579:6:12"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "6572:3:12",
																				"nodeType": "YulTypedName",
																				"src": "6572:3:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6562:220:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6078:710:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6150:6:12",
														"nodeType": "YulTypedName",
														"src": "6150:6:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6158:6:12",
														"nodeType": "YulTypedName",
														"src": "6158:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6166:3:12",
														"nodeType": "YulTypedName",
														"src": "6166:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6174:5:12",
														"nodeType": "YulTypedName",
														"src": "6174:5:12",
														"type": ""
													}
												],
												"src": "6078:710:12"
											},
											{
												"body": {
													"nativeSrc": "6888:293:12",
													"nodeType": "YulBlock",
													"src": "6888:293:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6937:83:12",
																"nodeType": "YulBlock",
																"src": "6937:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6939:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6939:77:12"
																			},
																			"nativeSrc": "6939:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6939:79:12"
																		},
																		"nativeSrc": "6939:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6939:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6916:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6916:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6924:4:12",
																						"nodeType": "YulLiteral",
																						"src": "6924:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6912:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6912:3:12"
																				},
																				"nativeSrc": "6912:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6912:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6931:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6931:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6908:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6908:3:12"
																		},
																		"nativeSrc": "6908:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6908:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6901:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6901:6:12"
																},
																"nativeSrc": "6901:35:12",
																"nodeType": "YulFunctionCall",
																"src": "6901:35:12"
															},
															"nativeSrc": "6898:122:12",
															"nodeType": "YulIf",
															"src": "6898:122:12"
														},
														{
															"nativeSrc": "7029:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7029:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7056:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7056:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7043:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "7043:12:12"
																},
																"nativeSrc": "7043:20:12",
																"nodeType": "YulFunctionCall",
																"src": "7043:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7033:6:12",
																	"nodeType": "YulTypedName",
																	"src": "7033:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7072:103:12",
															"nodeType": "YulAssignment",
															"src": "7072:103:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7148:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7148:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7156:4:12",
																				"nodeType": "YulLiteral",
																				"src": "7156:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7144:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7144:3:12"
																		},
																		"nativeSrc": "7144:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7144:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7163:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7163:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7171:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7171:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7081:62:12",
																	"nodeType": "YulIdentifier",
																	"src": "7081:62:12"
																},
																"nativeSrc": "7081:94:12",
																"nodeType": "YulFunctionCall",
																"src": "7081:94:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7072:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7072:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6811:370:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6866:6:12",
														"nodeType": "YulTypedName",
														"src": "6866:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6874:3:12",
														"nodeType": "YulTypedName",
														"src": "6874:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6882:5:12",
														"nodeType": "YulTypedName",
														"src": "6882:5:12",
														"type": ""
													}
												],
												"src": "6811:370:12"
											},
											{
												"body": {
													"nativeSrc": "7276:28:12",
													"nodeType": "YulBlock",
													"src": "7276:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7293:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7293:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7296:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7296:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7286:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7286:6:12"
																},
																"nativeSrc": "7286:12:12",
																"nodeType": "YulFunctionCall",
																"src": "7286:12:12"
															},
															"nativeSrc": "7286:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "7286:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7187:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "7187:117:12"
											},
											{
												"body": {
													"nativeSrc": "7376:241:12",
													"nodeType": "YulBlock",
													"src": "7376:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7481:22:12",
																"nodeType": "YulBlock",
																"src": "7481:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7483:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "7483:16:12"
																			},
																			"nativeSrc": "7483:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7483:18:12"
																		},
																		"nativeSrc": "7483:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7483:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7453:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7453:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7461:18:12",
																		"nodeType": "YulLiteral",
																		"src": "7461:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7450:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7450:2:12"
																},
																"nativeSrc": "7450:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7450:30:12"
															},
															"nativeSrc": "7447:56:12",
															"nodeType": "YulIf",
															"src": "7447:56:12"
														},
														{
															"nativeSrc": "7513:37:12",
															"nodeType": "YulAssignment",
															"src": "7513:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7543:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7543:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7521:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "7521:21:12"
																},
																"nativeSrc": "7521:29:12",
																"nodeType": "YulFunctionCall",
																"src": "7521:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7513:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7513:4:12"
																}
															]
														},
														{
															"nativeSrc": "7587:23:12",
															"nodeType": "YulAssignment",
															"src": "7587:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7599:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7599:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7605:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7605:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7595:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7595:3:12"
																},
																"nativeSrc": "7595:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7595:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7587:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7587:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7310:307:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7360:6:12",
														"nodeType": "YulTypedName",
														"src": "7360:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7371:4:12",
														"nodeType": "YulTypedName",
														"src": "7371:4:12",
														"type": ""
													}
												],
												"src": "7310:307:12"
											},
											{
												"body": {
													"nativeSrc": "7687:82:12",
													"nodeType": "YulBlock",
													"src": "7687:82:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7710:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7710:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7715:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7715:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7720:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7720:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7697:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "7697:12:12"
																},
																"nativeSrc": "7697:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7697:30:12"
															},
															"nativeSrc": "7697:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "7697:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7747:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7747:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7752:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7752:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7743:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7743:3:12"
																		},
																		"nativeSrc": "7743:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7743:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7761:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7761:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7736:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7736:6:12"
																},
																"nativeSrc": "7736:27:12",
																"nodeType": "YulFunctionCall",
																"src": "7736:27:12"
															},
															"nativeSrc": "7736:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "7736:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7623:146:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7669:3:12",
														"nodeType": "YulTypedName",
														"src": "7669:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7674:3:12",
														"nodeType": "YulTypedName",
														"src": "7674:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7679:6:12",
														"nodeType": "YulTypedName",
														"src": "7679:6:12",
														"type": ""
													}
												],
												"src": "7623:146:12"
											},
											{
												"body": {
													"nativeSrc": "7858:340:12",
													"nodeType": "YulBlock",
													"src": "7858:340:12",
													"statements": [
														{
															"nativeSrc": "7868:74:12",
															"nodeType": "YulAssignment",
															"src": "7868:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7934:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7934:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "7893:40:12",
																			"nodeType": "YulIdentifier",
																			"src": "7893:40:12"
																		},
																		"nativeSrc": "7893:48:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7893:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7877:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "7877:15:12"
																},
																"nativeSrc": "7877:65:12",
																"nodeType": "YulFunctionCall",
																"src": "7877:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7868:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7868:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7958:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7958:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7965:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7965:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7951:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7951:6:12"
																},
																"nativeSrc": "7951:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7951:21:12"
															},
															"nativeSrc": "7951:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "7951:21:12"
														},
														{
															"nativeSrc": "7981:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7981:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7996:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7996:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8003:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8003:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7992:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7992:3:12"
																},
																"nativeSrc": "7992:16:12",
																"nodeType": "YulFunctionCall",
																"src": "7992:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7985:3:12",
																	"nodeType": "YulTypedName",
																	"src": "7985:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8046:83:12",
																"nodeType": "YulBlock",
																"src": "8046:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8048:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8048:77:12"
																			},
																			"nativeSrc": "8048:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8048:79:12"
																		},
																		"nativeSrc": "8048:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8048:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8027:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8027:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8032:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8032:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8023:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8023:3:12"
																		},
																		"nativeSrc": "8023:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8023:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8041:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8041:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8020:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8020:2:12"
																},
																"nativeSrc": "8020:25:12",
																"nodeType": "YulFunctionCall",
																"src": "8020:25:12"
															},
															"nativeSrc": "8017:112:12",
															"nodeType": "YulIf",
															"src": "8017:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8175:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8175:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8180:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8180:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8185:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8185:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8138:36:12",
																	"nodeType": "YulIdentifier",
																	"src": "8138:36:12"
																},
																"nativeSrc": "8138:54:12",
																"nodeType": "YulFunctionCall",
																"src": "8138:54:12"
															},
															"nativeSrc": "8138:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "8138:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "7775:423:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7831:3:12",
														"nodeType": "YulTypedName",
														"src": "7831:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7836:6:12",
														"nodeType": "YulTypedName",
														"src": "7836:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7844:3:12",
														"nodeType": "YulTypedName",
														"src": "7844:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7852:5:12",
														"nodeType": "YulTypedName",
														"src": "7852:5:12",
														"type": ""
													}
												],
												"src": "7775:423:12"
											},
											{
												"body": {
													"nativeSrc": "8278:277:12",
													"nodeType": "YulBlock",
													"src": "8278:277:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8327:83:12",
																"nodeType": "YulBlock",
																"src": "8327:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8329:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8329:77:12"
																			},
																			"nativeSrc": "8329:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8329:79:12"
																		},
																		"nativeSrc": "8329:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8329:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8306:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8306:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8314:4:12",
																						"nodeType": "YulLiteral",
																						"src": "8314:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8302:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8302:3:12"
																				},
																				"nativeSrc": "8302:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8302:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8321:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8321:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8298:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8298:3:12"
																		},
																		"nativeSrc": "8298:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8298:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8291:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8291:6:12"
																},
																"nativeSrc": "8291:35:12",
																"nodeType": "YulFunctionCall",
																"src": "8291:35:12"
															},
															"nativeSrc": "8288:122:12",
															"nodeType": "YulIf",
															"src": "8288:122:12"
														},
														{
															"nativeSrc": "8419:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8419:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8446:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8433:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "8433:12:12"
																},
																"nativeSrc": "8433:20:12",
																"nodeType": "YulFunctionCall",
																"src": "8433:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8423:6:12",
																	"nodeType": "YulTypedName",
																	"src": "8423:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8462:87:12",
															"nodeType": "YulAssignment",
															"src": "8462:87:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8522:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8522:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8530:4:12",
																				"nodeType": "YulLiteral",
																				"src": "8530:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8518:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8518:3:12"
																		},
																		"nativeSrc": "8518:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8518:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8537:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8537:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8545:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8545:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8471:46:12",
																	"nodeType": "YulIdentifier",
																	"src": "8471:46:12"
																},
																"nativeSrc": "8471:78:12",
																"nodeType": "YulFunctionCall",
																"src": "8471:78:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8462:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8462:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8217:338:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8256:6:12",
														"nodeType": "YulTypedName",
														"src": "8256:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8264:3:12",
														"nodeType": "YulTypedName",
														"src": "8264:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8272:5:12",
														"nodeType": "YulTypedName",
														"src": "8272:5:12",
														"type": ""
													}
												],
												"src": "8217:338:12"
											},
											{
												"body": {
													"nativeSrc": "8754:1316:12",
													"nodeType": "YulBlock",
													"src": "8754:1316:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8801:83:12",
																"nodeType": "YulBlock",
																"src": "8801:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8803:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8803:77:12"
																			},
																			"nativeSrc": "8803:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8803:79:12"
																		},
																		"nativeSrc": "8803:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8803:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8775:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8775:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8784:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8784:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8771:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8771:3:12"
																		},
																		"nativeSrc": "8771:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8771:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8796:3:12",
																		"nodeType": "YulLiteral",
																		"src": "8796:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8767:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8767:3:12"
																},
																"nativeSrc": "8767:33:12",
																"nodeType": "YulFunctionCall",
																"src": "8767:33:12"
															},
															"nativeSrc": "8764:120:12",
															"nodeType": "YulIf",
															"src": "8764:120:12"
														},
														{
															"nativeSrc": "8894:117:12",
															"nodeType": "YulBlock",
															"src": "8894:117:12",
															"statements": [
																{
																	"nativeSrc": "8909:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8909:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8923:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8923:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8913:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8913:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8938:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8938:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8973:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8973:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8984:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8984:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8969:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8969:3:12"
																				},
																				"nativeSrc": "8969:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8969:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8993:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8993:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8948:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8948:20:12"
																		},
																		"nativeSrc": "8948:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8948:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8938:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8938:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9021:118:12",
															"nodeType": "YulBlock",
															"src": "9021:118:12",
															"statements": [
																{
																	"nativeSrc": "9036:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9036:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9050:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9050:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9040:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9040:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9066:63:12",
																	"nodeType": "YulAssignment",
																	"src": "9066:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9101:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9101:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9112:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9112:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9097:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9097:3:12"
																				},
																				"nativeSrc": "9097:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9097:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9121:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9121:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9076:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "9076:20:12"
																		},
																		"nativeSrc": "9076:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9076:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9066:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9066:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9149:303:12",
															"nodeType": "YulBlock",
															"src": "9149:303:12",
															"statements": [
																{
																	"nativeSrc": "9164:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9164:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9195:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9195:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9206:2:12",
																						"nodeType": "YulLiteral",
																						"src": "9206:2:12",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9191:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9191:3:12"
																				},
																				"nativeSrc": "9191:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9191:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9178:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "9178:12:12"
																		},
																		"nativeSrc": "9178:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9178:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9168:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9168:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9257:83:12",
																		"nodeType": "YulBlock",
																		"src": "9257:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9259:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "9259:77:12"
																					},
																					"nativeSrc": "9259:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9259:79:12"
																				},
																				"nativeSrc": "9259:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "9259:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9229:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9229:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9237:18:12",
																				"nodeType": "YulLiteral",
																				"src": "9237:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9226:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "9226:2:12"
																		},
																		"nativeSrc": "9226:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9226:30:12"
																	},
																	"nativeSrc": "9223:117:12",
																	"nodeType": "YulIf",
																	"src": "9223:117:12"
																},
																{
																	"nativeSrc": "9354:88:12",
																	"nodeType": "YulAssignment",
																	"src": "9354:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9414:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9414:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9425:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9425:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9410:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9410:3:12"
																				},
																				"nativeSrc": "9410:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9410:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9434:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9434:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "9364:45:12",
																			"nodeType": "YulIdentifier",
																			"src": "9364:45:12"
																		},
																		"nativeSrc": "9364:78:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9364:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9354:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9354:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9462:303:12",
															"nodeType": "YulBlock",
															"src": "9462:303:12",
															"statements": [
																{
																	"nativeSrc": "9477:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9477:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9508:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9508:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9519:2:12",
																						"nodeType": "YulLiteral",
																						"src": "9519:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9504:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9504:3:12"
																				},
																				"nativeSrc": "9504:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9504:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9491:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "9491:12:12"
																		},
																		"nativeSrc": "9491:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9491:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9481:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9481:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9570:83:12",
																		"nodeType": "YulBlock",
																		"src": "9570:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9572:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "9572:77:12"
																					},
																					"nativeSrc": "9572:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9572:79:12"
																				},
																				"nativeSrc": "9572:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "9572:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9542:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9542:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9550:18:12",
																				"nodeType": "YulLiteral",
																				"src": "9550:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9539:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "9539:2:12"
																		},
																		"nativeSrc": "9539:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9539:30:12"
																	},
																	"nativeSrc": "9536:117:12",
																	"nodeType": "YulIf",
																	"src": "9536:117:12"
																},
																{
																	"nativeSrc": "9667:88:12",
																	"nodeType": "YulAssignment",
																	"src": "9667:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9727:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9727:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9738:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9738:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9723:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9723:3:12"
																				},
																				"nativeSrc": "9723:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9723:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9747:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9747:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "9677:45:12",
																			"nodeType": "YulIdentifier",
																			"src": "9677:45:12"
																		},
																		"nativeSrc": "9677:78:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9677:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9667:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9667:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9775:288:12",
															"nodeType": "YulBlock",
															"src": "9775:288:12",
															"statements": [
																{
																	"nativeSrc": "9790:47:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9790:47:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9821:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9821:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9832:3:12",
																						"nodeType": "YulLiteral",
																						"src": "9832:3:12",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9817:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9817:3:12"
																				},
																				"nativeSrc": "9817:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9817:19:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9804:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "9804:12:12"
																		},
																		"nativeSrc": "9804:33:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9804:33:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9794:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9794:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9884:83:12",
																		"nodeType": "YulBlock",
																		"src": "9884:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9886:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "9886:77:12"
																					},
																					"nativeSrc": "9886:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9886:79:12"
																				},
																				"nativeSrc": "9886:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "9886:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9856:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9856:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9864:18:12",
																				"nodeType": "YulLiteral",
																				"src": "9864:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9853:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "9853:2:12"
																		},
																		"nativeSrc": "9853:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9853:30:12"
																	},
																	"nativeSrc": "9850:117:12",
																	"nodeType": "YulIf",
																	"src": "9850:117:12"
																},
																{
																	"nativeSrc": "9981:72:12",
																	"nodeType": "YulAssignment",
																	"src": "9981:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10025:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10025:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10036:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10036:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10021:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10021:3:12"
																				},
																				"nativeSrc": "10021:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10021:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10045:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10045:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9991:29:12",
																			"nodeType": "YulIdentifier",
																			"src": "9991:29:12"
																		},
																		"nativeSrc": "9991:62:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9991:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "9981:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9981:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "8561:1509:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8692:9:12",
														"nodeType": "YulTypedName",
														"src": "8692:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8703:7:12",
														"nodeType": "YulTypedName",
														"src": "8703:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8715:6:12",
														"nodeType": "YulTypedName",
														"src": "8715:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8723:6:12",
														"nodeType": "YulTypedName",
														"src": "8723:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8731:6:12",
														"nodeType": "YulTypedName",
														"src": "8731:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8739:6:12",
														"nodeType": "YulTypedName",
														"src": "8739:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8747:6:12",
														"nodeType": "YulTypedName",
														"src": "8747:6:12",
														"type": ""
													}
												],
												"src": "8561:1509:12"
											},
											{
												"body": {
													"nativeSrc": "10158:229:12",
													"nodeType": "YulBlock",
													"src": "10158:229:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "10263:22:12",
																"nodeType": "YulBlock",
																"src": "10263:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10265:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "10265:16:12"
																			},
																			"nativeSrc": "10265:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10265:18:12"
																		},
																		"nativeSrc": "10265:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10265:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10235:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10235:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10243:18:12",
																		"nodeType": "YulLiteral",
																		"src": "10243:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10232:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "10232:2:12"
																},
																"nativeSrc": "10232:30:12",
																"nodeType": "YulFunctionCall",
																"src": "10232:30:12"
															},
															"nativeSrc": "10229:56:12",
															"nodeType": "YulIf",
															"src": "10229:56:12"
														},
														{
															"nativeSrc": "10295:25:12",
															"nodeType": "YulAssignment",
															"src": "10295:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10307:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10307:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10315:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10315:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10303:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10303:3:12"
																},
																"nativeSrc": "10303:17:12",
																"nodeType": "YulFunctionCall",
																"src": "10303:17:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10295:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10295:4:12"
																}
															]
														},
														{
															"nativeSrc": "10357:23:12",
															"nodeType": "YulAssignment",
															"src": "10357:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10369:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10369:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10375:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10375:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10365:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10365:3:12"
																},
																"nativeSrc": "10365:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10365:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10357:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10357:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "10076:311:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10142:6:12",
														"nodeType": "YulTypedName",
														"src": "10142:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10153:4:12",
														"nodeType": "YulTypedName",
														"src": "10153:4:12",
														"type": ""
													}
												],
												"src": "10076:311:12"
											},
											{
												"body": {
													"nativeSrc": "10512:608:12",
													"nodeType": "YulBlock",
													"src": "10512:608:12",
													"statements": [
														{
															"nativeSrc": "10522:90:12",
															"nodeType": "YulAssignment",
															"src": "10522:90:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10604:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10604:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "10547:56:12",
																			"nodeType": "YulIdentifier",
																			"src": "10547:56:12"
																		},
																		"nativeSrc": "10547:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10547:64:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10531:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "10531:15:12"
																},
																"nativeSrc": "10531:81:12",
																"nodeType": "YulFunctionCall",
																"src": "10531:81:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10522:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "10522:5:12"
																}
															]
														},
														{
															"nativeSrc": "10621:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10621:16:12",
															"value": {
																"name": "array",
																"nativeSrc": "10632:5:12",
																"nodeType": "YulIdentifier",
																"src": "10632:5:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10625:3:12",
																	"nodeType": "YulTypedName",
																	"src": "10625:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10654:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10654:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10661:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10661:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10647:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10647:6:12"
																},
																"nativeSrc": "10647:21:12",
																"nodeType": "YulFunctionCall",
																"src": "10647:21:12"
															},
															"nativeSrc": "10647:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "10647:21:12"
														},
														{
															"nativeSrc": "10677:23:12",
															"nodeType": "YulAssignment",
															"src": "10677:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10688:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10688:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10695:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10695:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10684:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10684:3:12"
																},
																"nativeSrc": "10684:16:12",
																"nodeType": "YulFunctionCall",
																"src": "10684:16:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "10677:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10677:3:12"
																}
															]
														},
														{
															"nativeSrc": "10710:44:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10710:44:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10728:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10728:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10740:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10740:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10748:4:12",
																				"nodeType": "YulLiteral",
																				"src": "10748:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "10736:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10736:3:12"
																		},
																		"nativeSrc": "10736:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10736:17:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10724:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10724:3:12"
																},
																"nativeSrc": "10724:30:12",
																"nodeType": "YulFunctionCall",
																"src": "10724:30:12"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "10714:6:12",
																	"nodeType": "YulTypedName",
																	"src": "10714:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10782:103:12",
																"nodeType": "YulBlock",
																"src": "10782:103:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "10796:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "10796:77:12"
																			},
																			"nativeSrc": "10796:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10796:79:12"
																		},
																		"nativeSrc": "10796:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10796:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "10769:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10769:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10777:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10777:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10766:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "10766:2:12"
																},
																"nativeSrc": "10766:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10766:15:12"
															},
															"nativeSrc": "10763:122:12",
															"nodeType": "YulIf",
															"src": "10763:122:12"
														},
														{
															"body": {
																"nativeSrc": "10970:144:12",
																"nodeType": "YulBlock",
																"src": "10970:144:12",
																"statements": [
																	{
																		"nativeSrc": "10985:21:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10985:21:12",
																		"value": {
																			"name": "src",
																			"nativeSrc": "11003:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11003:3:12"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "10989:10:12",
																				"nodeType": "YulTypedName",
																				"src": "10989:10:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "11027:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11027:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "11053:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "11053:10:12"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "11065:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "11065:3:12"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "11032:20:12",
																						"nodeType": "YulIdentifier",
																						"src": "11032:20:12"
																					},
																					"nativeSrc": "11032:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "11032:37:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11020:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11020:6:12"
																			},
																			"nativeSrc": "11020:50:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11020:50:12"
																		},
																		"nativeSrc": "11020:50:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11020:50:12"
																	},
																	{
																		"nativeSrc": "11083:21:12",
																		"nodeType": "YulAssignment",
																		"src": "11083:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "11094:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11094:3:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11099:4:12",
																					"nodeType": "YulLiteral",
																					"src": "11099:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11090:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "11090:3:12"
																			},
																			"nativeSrc": "11090:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11090:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "11083:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "11083:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10923:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10923:3:12"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "10928:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10928:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "10920:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "10920:2:12"
																},
																"nativeSrc": "10920:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10920:15:12"
															},
															"nativeSrc": "10894:220:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10936:25:12",
																"nodeType": "YulBlock",
																"src": "10936:25:12",
																"statements": [
																	{
																		"nativeSrc": "10938:21:12",
																		"nodeType": "YulAssignment",
																		"src": "10938:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "10949:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10949:3:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10954:4:12",
																					"nodeType": "YulLiteral",
																					"src": "10954:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10945:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "10945:3:12"
																			},
																			"nativeSrc": "10945:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10945:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "10938:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "10938:3:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "10898:21:12",
																"nodeType": "YulBlock",
																"src": "10898:21:12",
																"statements": [
																	{
																		"nativeSrc": "10900:17:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10900:17:12",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "10911:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10911:6:12"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "10904:3:12",
																				"nodeType": "YulTypedName",
																				"src": "10904:3:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10894:220:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "10410:710:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10482:6:12",
														"nodeType": "YulTypedName",
														"src": "10482:6:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10490:6:12",
														"nodeType": "YulTypedName",
														"src": "10490:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10498:3:12",
														"nodeType": "YulTypedName",
														"src": "10498:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10506:5:12",
														"nodeType": "YulTypedName",
														"src": "10506:5:12",
														"type": ""
													}
												],
												"src": "10410:710:12"
											},
											{
												"body": {
													"nativeSrc": "11220:293:12",
													"nodeType": "YulBlock",
													"src": "11220:293:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "11269:83:12",
																"nodeType": "YulBlock",
																"src": "11269:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11271:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "11271:77:12"
																			},
																			"nativeSrc": "11271:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11271:79:12"
																		},
																		"nativeSrc": "11271:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11271:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11248:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "11248:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11256:4:12",
																						"nodeType": "YulLiteral",
																						"src": "11256:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11244:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11244:3:12"
																				},
																				"nativeSrc": "11244:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11244:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11263:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "11263:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11240:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11240:3:12"
																		},
																		"nativeSrc": "11240:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11240:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11233:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11233:6:12"
																},
																"nativeSrc": "11233:35:12",
																"nodeType": "YulFunctionCall",
																"src": "11233:35:12"
															},
															"nativeSrc": "11230:122:12",
															"nodeType": "YulIf",
															"src": "11230:122:12"
														},
														{
															"nativeSrc": "11361:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11361:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11388:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11388:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11375:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "11375:12:12"
																},
																"nativeSrc": "11375:20:12",
																"nodeType": "YulFunctionCall",
																"src": "11375:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11365:6:12",
																	"nodeType": "YulTypedName",
																	"src": "11365:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11404:103:12",
															"nodeType": "YulAssignment",
															"src": "11404:103:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11480:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11480:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11488:4:12",
																				"nodeType": "YulLiteral",
																				"src": "11488:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11476:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11476:3:12"
																		},
																		"nativeSrc": "11476:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11476:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11495:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11495:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11503:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11503:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "11413:62:12",
																	"nodeType": "YulIdentifier",
																	"src": "11413:62:12"
																},
																"nativeSrc": "11413:94:12",
																"nodeType": "YulFunctionCall",
																"src": "11413:94:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11404:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "11404:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "11143:370:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11198:6:12",
														"nodeType": "YulTypedName",
														"src": "11198:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11206:3:12",
														"nodeType": "YulTypedName",
														"src": "11206:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11214:5:12",
														"nodeType": "YulTypedName",
														"src": "11214:5:12",
														"type": ""
													}
												],
												"src": "11143:370:12"
											},
											{
												"body": {
													"nativeSrc": "11652:761:12",
													"nodeType": "YulBlock",
													"src": "11652:761:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "11698:83:12",
																"nodeType": "YulBlock",
																"src": "11698:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11700:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "11700:77:12"
																			},
																			"nativeSrc": "11700:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11700:79:12"
																		},
																		"nativeSrc": "11700:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11700:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11673:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11673:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11682:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11682:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11669:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11669:3:12"
																		},
																		"nativeSrc": "11669:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11669:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11694:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11694:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11665:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11665:3:12"
																},
																"nativeSrc": "11665:32:12",
																"nodeType": "YulFunctionCall",
																"src": "11665:32:12"
															},
															"nativeSrc": "11662:119:12",
															"nodeType": "YulIf",
															"src": "11662:119:12"
														},
														{
															"nativeSrc": "11791:302:12",
															"nodeType": "YulBlock",
															"src": "11791:302:12",
															"statements": [
																{
																	"nativeSrc": "11806:45:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11806:45:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11837:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11837:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11848:1:12",
																						"nodeType": "YulLiteral",
																						"src": "11848:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11833:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11833:3:12"
																				},
																				"nativeSrc": "11833:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11833:17:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11820:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "11820:12:12"
																		},
																		"nativeSrc": "11820:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11820:31:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11810:6:12",
																			"nodeType": "YulTypedName",
																			"src": "11810:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11898:83:12",
																		"nodeType": "YulBlock",
																		"src": "11898:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11900:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "11900:77:12"
																					},
																					"nativeSrc": "11900:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "11900:79:12"
																				},
																				"nativeSrc": "11900:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "11900:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11870:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11870:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11878:18:12",
																				"nodeType": "YulLiteral",
																				"src": "11878:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11867:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "11867:2:12"
																		},
																		"nativeSrc": "11867:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11867:30:12"
																	},
																	"nativeSrc": "11864:117:12",
																	"nodeType": "YulIf",
																	"src": "11864:117:12"
																},
																{
																	"nativeSrc": "11995:88:12",
																	"nodeType": "YulAssignment",
																	"src": "11995:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12055:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "12055:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12066:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "12066:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12051:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12051:3:12"
																				},
																				"nativeSrc": "12051:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12051:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12075:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "12075:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "12005:45:12",
																			"nodeType": "YulIdentifier",
																			"src": "12005:45:12"
																		},
																		"nativeSrc": "12005:78:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12005:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11995:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "11995:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12103:303:12",
															"nodeType": "YulBlock",
															"src": "12103:303:12",
															"statements": [
																{
																	"nativeSrc": "12118:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12118:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12149:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "12149:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12160:2:12",
																						"nodeType": "YulLiteral",
																						"src": "12160:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12145:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12145:3:12"
																				},
																				"nativeSrc": "12145:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12145:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12132:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "12132:12:12"
																		},
																		"nativeSrc": "12132:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12132:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12122:6:12",
																			"nodeType": "YulTypedName",
																			"src": "12122:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12211:83:12",
																		"nodeType": "YulBlock",
																		"src": "12211:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12213:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "12213:77:12"
																					},
																					"nativeSrc": "12213:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "12213:79:12"
																				},
																				"nativeSrc": "12213:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "12213:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12183:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12183:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12191:18:12",
																				"nodeType": "YulLiteral",
																				"src": "12191:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12180:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "12180:2:12"
																		},
																		"nativeSrc": "12180:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12180:30:12"
																	},
																	"nativeSrc": "12177:117:12",
																	"nodeType": "YulIf",
																	"src": "12177:117:12"
																},
																{
																	"nativeSrc": "12308:88:12",
																	"nodeType": "YulAssignment",
																	"src": "12308:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12368:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "12368:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12379:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "12379:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12364:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12364:3:12"
																				},
																				"nativeSrc": "12364:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12364:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12388:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "12388:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "12318:45:12",
																			"nodeType": "YulIdentifier",
																			"src": "12318:45:12"
																		},
																		"nativeSrc": "12318:78:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12318:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12308:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "12308:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "11519:894:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11614:9:12",
														"nodeType": "YulTypedName",
														"src": "11614:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11625:7:12",
														"nodeType": "YulTypedName",
														"src": "11625:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11637:6:12",
														"nodeType": "YulTypedName",
														"src": "11637:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11645:6:12",
														"nodeType": "YulTypedName",
														"src": "11645:6:12",
														"type": ""
													}
												],
												"src": "11519:894:12"
											},
											{
												"body": {
													"nativeSrc": "12493:40:12",
													"nodeType": "YulBlock",
													"src": "12493:40:12",
													"statements": [
														{
															"nativeSrc": "12504:22:12",
															"nodeType": "YulAssignment",
															"src": "12504:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12520:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12520:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12514:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "12514:5:12"
																},
																"nativeSrc": "12514:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12514:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12504:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12504:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "12419:114:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12476:5:12",
														"nodeType": "YulTypedName",
														"src": "12476:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12486:6:12",
														"nodeType": "YulTypedName",
														"src": "12486:6:12",
														"type": ""
													}
												],
												"src": "12419:114:12"
											},
											{
												"body": {
													"nativeSrc": "12650:73:12",
													"nodeType": "YulBlock",
													"src": "12650:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12667:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12667:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12672:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12672:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12660:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12660:6:12"
																},
																"nativeSrc": "12660:19:12",
																"nodeType": "YulFunctionCall",
																"src": "12660:19:12"
															},
															"nativeSrc": "12660:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "12660:19:12"
														},
														{
															"nativeSrc": "12688:29:12",
															"nodeType": "YulAssignment",
															"src": "12688:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12707:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12707:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12712:4:12",
																		"nodeType": "YulLiteral",
																		"src": "12712:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12703:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12703:3:12"
																},
																"nativeSrc": "12703:14:12",
																"nodeType": "YulFunctionCall",
																"src": "12703:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12688:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "12688:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "12539:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12622:3:12",
														"nodeType": "YulTypedName",
														"src": "12622:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12627:6:12",
														"nodeType": "YulTypedName",
														"src": "12627:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12638:11:12",
														"nodeType": "YulTypedName",
														"src": "12638:11:12",
														"type": ""
													}
												],
												"src": "12539:184:12"
											},
											{
												"body": {
													"nativeSrc": "12801:60:12",
													"nodeType": "YulBlock",
													"src": "12801:60:12",
													"statements": [
														{
															"nativeSrc": "12811:11:12",
															"nodeType": "YulAssignment",
															"src": "12811:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "12819:3:12",
																"nodeType": "YulIdentifier",
																"src": "12819:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12811:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12811:4:12"
																}
															]
														},
														{
															"nativeSrc": "12832:22:12",
															"nodeType": "YulAssignment",
															"src": "12832:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "12844:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12844:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12849:4:12",
																		"nodeType": "YulLiteral",
																		"src": "12849:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12840:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12840:3:12"
																},
																"nativeSrc": "12840:14:12",
																"nodeType": "YulFunctionCall",
																"src": "12840:14:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12832:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12832:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "12729:132:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "12788:3:12",
														"nodeType": "YulTypedName",
														"src": "12788:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "12796:4:12",
														"nodeType": "YulTypedName",
														"src": "12796:4:12",
														"type": ""
													}
												],
												"src": "12729:132:12"
											},
											{
												"body": {
													"nativeSrc": "12922:53:12",
													"nodeType": "YulBlock",
													"src": "12922:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12939:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12939:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12962:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "12962:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "12944:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "12944:17:12"
																		},
																		"nativeSrc": "12944:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12944:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12932:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12932:6:12"
																},
																"nativeSrc": "12932:37:12",
																"nodeType": "YulFunctionCall",
																"src": "12932:37:12"
															},
															"nativeSrc": "12932:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "12932:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "12867:108:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12910:5:12",
														"nodeType": "YulTypedName",
														"src": "12910:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12917:3:12",
														"nodeType": "YulTypedName",
														"src": "12917:3:12",
														"type": ""
													}
												],
												"src": "12867:108:12"
											},
											{
												"body": {
													"nativeSrc": "13061:99:12",
													"nodeType": "YulBlock",
													"src": "13061:99:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13105:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13105:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13113:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13113:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "13071:33:12",
																	"nodeType": "YulIdentifier",
																	"src": "13071:33:12"
																},
																"nativeSrc": "13071:46:12",
																"nodeType": "YulFunctionCall",
																"src": "13071:46:12"
															},
															"nativeSrc": "13071:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "13071:46:12"
														},
														{
															"nativeSrc": "13126:28:12",
															"nodeType": "YulAssignment",
															"src": "13126:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13144:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13144:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13149:4:12",
																		"nodeType": "YulLiteral",
																		"src": "13149:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13140:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13140:3:12"
																},
																"nativeSrc": "13140:14:12",
																"nodeType": "YulFunctionCall",
																"src": "13140:14:12"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "13126:10:12",
																	"nodeType": "YulIdentifier",
																	"src": "13126:10:12"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "12981:179:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "13034:6:12",
														"nodeType": "YulTypedName",
														"src": "13034:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13042:3:12",
														"nodeType": "YulTypedName",
														"src": "13042:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "13050:10:12",
														"nodeType": "YulTypedName",
														"src": "13050:10:12",
														"type": ""
													}
												],
												"src": "12981:179:12"
											},
											{
												"body": {
													"nativeSrc": "13241:38:12",
													"nodeType": "YulBlock",
													"src": "13241:38:12",
													"statements": [
														{
															"nativeSrc": "13251:22:12",
															"nodeType": "YulAssignment",
															"src": "13251:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "13263:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13263:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13268:4:12",
																		"nodeType": "YulLiteral",
																		"src": "13268:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13259:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13259:3:12"
																},
																"nativeSrc": "13259:14:12",
																"nodeType": "YulFunctionCall",
																"src": "13259:14:12"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "13251:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13251:4:12"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "13166:113:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13228:3:12",
														"nodeType": "YulTypedName",
														"src": "13228:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "13236:4:12",
														"nodeType": "YulTypedName",
														"src": "13236:4:12",
														"type": ""
													}
												],
												"src": "13166:113:12"
											},
											{
												"body": {
													"nativeSrc": "13439:608:12",
													"nodeType": "YulBlock",
													"src": "13439:608:12",
													"statements": [
														{
															"nativeSrc": "13449:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "13449:68:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13511:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13511:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "13463:47:12",
																	"nodeType": "YulIdentifier",
																	"src": "13463:47:12"
																},
																"nativeSrc": "13463:54:12",
																"nodeType": "YulFunctionCall",
																"src": "13463:54:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13453:6:12",
																	"nodeType": "YulTypedName",
																	"src": "13453:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13526:93:12",
															"nodeType": "YulAssignment",
															"src": "13526:93:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13607:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13607:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13612:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13612:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "13533:73:12",
																	"nodeType": "YulIdentifier",
																	"src": "13533:73:12"
																},
																"nativeSrc": "13533:86:12",
																"nodeType": "YulFunctionCall",
																"src": "13533:86:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13526:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13526:3:12"
																}
															]
														},
														{
															"nativeSrc": "13628:71:12",
															"nodeType": "YulVariableDeclaration",
															"src": "13628:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13693:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13693:5:12"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "13643:49:12",
																	"nodeType": "YulIdentifier",
																	"src": "13643:49:12"
																},
																"nativeSrc": "13643:56:12",
																"nodeType": "YulFunctionCall",
																"src": "13643:56:12"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "13632:7:12",
																	"nodeType": "YulTypedName",
																	"src": "13632:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13708:21:12",
															"nodeType": "YulVariableDeclaration",
															"src": "13708:21:12",
															"value": {
																"name": "baseRef",
																"nativeSrc": "13722:7:12",
																"nodeType": "YulIdentifier",
																"src": "13722:7:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "13712:6:12",
																	"nodeType": "YulTypedName",
																	"src": "13712:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13798:224:12",
																"nodeType": "YulBlock",
																"src": "13798:224:12",
																"statements": [
																	{
																		"nativeSrc": "13812:34:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13812:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "13839:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "13839:6:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "13833:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "13833:5:12"
																			},
																			"nativeSrc": "13833:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13833:13:12"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "13816:13:12",
																				"nodeType": "YulTypedName",
																				"src": "13816:13:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "13859:70:12",
																		"nodeType": "YulAssignment",
																		"src": "13859:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "13910:13:12",
																					"nodeType": "YulIdentifier",
																					"src": "13910:13:12"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "13925:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "13925:3:12"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "13866:43:12",
																				"nodeType": "YulIdentifier",
																				"src": "13866:43:12"
																			},
																			"nativeSrc": "13866:63:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13866:63:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "13859:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "13859:3:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "13942:70:12",
																		"nodeType": "YulAssignment",
																		"src": "13942:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "14005:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "14005:6:12"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "13952:52:12",
																				"nodeType": "YulIdentifier",
																				"src": "13952:52:12"
																			},
																			"nativeSrc": "13952:60:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13952:60:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "13942:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13942:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "13760:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13760:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13763:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13763:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "13757:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "13757:2:12"
																},
																"nativeSrc": "13757:13:12",
																"nodeType": "YulFunctionCall",
																"src": "13757:13:12"
															},
															"nativeSrc": "13738:284:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13771:18:12",
																"nodeType": "YulBlock",
																"src": "13771:18:12",
																"statements": [
																	{
																		"nativeSrc": "13773:14:12",
																		"nodeType": "YulAssignment",
																		"src": "13773:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "13782:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "13782:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13785:1:12",
																					"nodeType": "YulLiteral",
																					"src": "13785:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13778:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "13778:3:12"
																			},
																			"nativeSrc": "13778:9:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13778:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "13773:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "13773:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "13742:14:12",
																"nodeType": "YulBlock",
																"src": "13742:14:12",
																"statements": [
																	{
																		"nativeSrc": "13744:10:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13744:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "13753:1:12",
																			"nodeType": "YulLiteral",
																			"src": "13753:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "13748:1:12",
																				"nodeType": "YulTypedName",
																				"src": "13748:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "13738:284:12"
														},
														{
															"nativeSrc": "14031:10:12",
															"nodeType": "YulAssignment",
															"src": "14031:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "14038:3:12",
																"nodeType": "YulIdentifier",
																"src": "14038:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14031:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14031:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "13315:732:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13418:5:12",
														"nodeType": "YulTypedName",
														"src": "13418:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13425:3:12",
														"nodeType": "YulTypedName",
														"src": "13425:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13434:3:12",
														"nodeType": "YulTypedName",
														"src": "13434:3:12",
														"type": ""
													}
												],
												"src": "13315:732:12"
											},
											{
												"body": {
													"nativeSrc": "14201:225:12",
													"nodeType": "YulBlock",
													"src": "14201:225:12",
													"statements": [
														{
															"nativeSrc": "14211:26:12",
															"nodeType": "YulAssignment",
															"src": "14211:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14223:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14223:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14234:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14234:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14219:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14219:3:12"
																},
																"nativeSrc": "14219:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14219:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14211:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14211:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14258:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14258:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14269:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14269:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14254:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14254:3:12"
																		},
																		"nativeSrc": "14254:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14254:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14277:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14277:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14283:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14283:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14273:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14273:3:12"
																		},
																		"nativeSrc": "14273:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14273:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14247:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14247:6:12"
																},
																"nativeSrc": "14247:47:12",
																"nodeType": "YulFunctionCall",
																"src": "14247:47:12"
															},
															"nativeSrc": "14247:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "14247:47:12"
														},
														{
															"nativeSrc": "14303:116:12",
															"nodeType": "YulAssignment",
															"src": "14303:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14405:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14405:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14414:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14414:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "14311:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "14311:93:12"
																},
																"nativeSrc": "14311:108:12",
																"nodeType": "YulFunctionCall",
																"src": "14311:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14303:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14303:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "14053:373:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14173:9:12",
														"nodeType": "YulTypedName",
														"src": "14173:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14185:6:12",
														"nodeType": "YulTypedName",
														"src": "14185:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14196:4:12",
														"nodeType": "YulTypedName",
														"src": "14196:4:12",
														"type": ""
													}
												],
												"src": "14053:373:12"
											},
											{
												"body": {
													"nativeSrc": "14472:76:12",
													"nodeType": "YulBlock",
													"src": "14472:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "14526:16:12",
																"nodeType": "YulBlock",
																"src": "14526:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14535:1:12",
																					"nodeType": "YulLiteral",
																					"src": "14535:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14538:1:12",
																					"nodeType": "YulLiteral",
																					"src": "14538:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14528:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14528:6:12"
																			},
																			"nativeSrc": "14528:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "14528:12:12"
																		},
																		"nativeSrc": "14528:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "14528:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14495:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "14495:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14517:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "14517:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "14502:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "14502:14:12"
																				},
																				"nativeSrc": "14502:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "14502:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14492:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "14492:2:12"
																		},
																		"nativeSrc": "14492:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14492:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14485:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14485:6:12"
																},
																"nativeSrc": "14485:40:12",
																"nodeType": "YulFunctionCall",
																"src": "14485:40:12"
															},
															"nativeSrc": "14482:60:12",
															"nodeType": "YulIf",
															"src": "14482:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "14432:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14465:5:12",
														"nodeType": "YulTypedName",
														"src": "14465:5:12",
														"type": ""
													}
												],
												"src": "14432:116:12"
											},
											{
												"body": {
													"nativeSrc": "14603:84:12",
													"nodeType": "YulBlock",
													"src": "14603:84:12",
													"statements": [
														{
															"nativeSrc": "14613:29:12",
															"nodeType": "YulAssignment",
															"src": "14613:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14635:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14635:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "14622:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "14622:12:12"
																},
																"nativeSrc": "14622:20:12",
																"nodeType": "YulFunctionCall",
																"src": "14622:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14613:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "14613:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14675:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "14675:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "14651:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "14651:23:12"
																},
																"nativeSrc": "14651:30:12",
																"nodeType": "YulFunctionCall",
																"src": "14651:30:12"
															},
															"nativeSrc": "14651:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "14651:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "14554:133:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14581:6:12",
														"nodeType": "YulTypedName",
														"src": "14581:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14589:3:12",
														"nodeType": "YulTypedName",
														"src": "14589:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14597:5:12",
														"nodeType": "YulTypedName",
														"src": "14597:5:12",
														"type": ""
													}
												],
												"src": "14554:133:12"
											},
											{
												"body": {
													"nativeSrc": "14773:388:12",
													"nodeType": "YulBlock",
													"src": "14773:388:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "14819:83:12",
																"nodeType": "YulBlock",
																"src": "14819:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14821:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "14821:77:12"
																			},
																			"nativeSrc": "14821:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "14821:79:12"
																		},
																		"nativeSrc": "14821:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "14821:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14794:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "14794:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14803:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14803:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14790:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14790:3:12"
																		},
																		"nativeSrc": "14790:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14790:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14815:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14815:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14786:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14786:3:12"
																},
																"nativeSrc": "14786:32:12",
																"nodeType": "YulFunctionCall",
																"src": "14786:32:12"
															},
															"nativeSrc": "14783:119:12",
															"nodeType": "YulIf",
															"src": "14783:119:12"
														},
														{
															"nativeSrc": "14912:117:12",
															"nodeType": "YulBlock",
															"src": "14912:117:12",
															"statements": [
																{
																	"nativeSrc": "14927:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14927:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14941:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14941:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14931:6:12",
																			"nodeType": "YulTypedName",
																			"src": "14931:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14956:63:12",
																	"nodeType": "YulAssignment",
																	"src": "14956:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14991:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "14991:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15002:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "15002:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14987:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "14987:3:12"
																				},
																				"nativeSrc": "14987:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "14987:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15011:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "15011:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14966:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "14966:20:12"
																		},
																		"nativeSrc": "14966:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14966:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14956:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "14956:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15039:115:12",
															"nodeType": "YulBlock",
															"src": "15039:115:12",
															"statements": [
																{
																	"nativeSrc": "15054:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15054:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15068:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15068:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15058:6:12",
																			"nodeType": "YulTypedName",
																			"src": "15058:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15084:60:12",
																	"nodeType": "YulAssignment",
																	"src": "15084:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15116:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "15116:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15127:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "15127:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15112:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "15112:3:12"
																				},
																				"nativeSrc": "15112:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "15112:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15136:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "15136:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "15094:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "15094:17:12"
																		},
																		"nativeSrc": "15094:50:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15094:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "15084:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "15084:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "14693:468:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14735:9:12",
														"nodeType": "YulTypedName",
														"src": "14735:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14746:7:12",
														"nodeType": "YulTypedName",
														"src": "14746:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14758:6:12",
														"nodeType": "YulTypedName",
														"src": "14758:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14766:6:12",
														"nodeType": "YulTypedName",
														"src": "14766:6:12",
														"type": ""
													}
												],
												"src": "14693:468:12"
											},
											{
												"body": {
													"nativeSrc": "15250:391:12",
													"nodeType": "YulBlock",
													"src": "15250:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "15296:83:12",
																"nodeType": "YulBlock",
																"src": "15296:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15298:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "15298:77:12"
																			},
																			"nativeSrc": "15298:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15298:79:12"
																		},
																		"nativeSrc": "15298:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "15298:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15271:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "15271:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15280:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15280:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15267:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15267:3:12"
																		},
																		"nativeSrc": "15267:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15267:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15292:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15292:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15263:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15263:3:12"
																},
																"nativeSrc": "15263:32:12",
																"nodeType": "YulFunctionCall",
																"src": "15263:32:12"
															},
															"nativeSrc": "15260:119:12",
															"nodeType": "YulIf",
															"src": "15260:119:12"
														},
														{
															"nativeSrc": "15389:117:12",
															"nodeType": "YulBlock",
															"src": "15389:117:12",
															"statements": [
																{
																	"nativeSrc": "15404:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15404:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15418:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15418:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15408:6:12",
																			"nodeType": "YulTypedName",
																			"src": "15408:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15433:63:12",
																	"nodeType": "YulAssignment",
																	"src": "15433:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15468:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "15468:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15479:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "15479:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15464:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "15464:3:12"
																				},
																				"nativeSrc": "15464:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "15464:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15488:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "15488:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "15443:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "15443:20:12"
																		},
																		"nativeSrc": "15443:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15443:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15433:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "15433:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15516:118:12",
															"nodeType": "YulBlock",
															"src": "15516:118:12",
															"statements": [
																{
																	"nativeSrc": "15531:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15531:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15545:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15545:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15535:6:12",
																			"nodeType": "YulTypedName",
																			"src": "15535:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15561:63:12",
																	"nodeType": "YulAssignment",
																	"src": "15561:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15596:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "15596:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15607:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "15607:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15592:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "15592:3:12"
																				},
																				"nativeSrc": "15592:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "15592:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15616:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "15616:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "15571:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "15571:20:12"
																		},
																		"nativeSrc": "15571:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15571:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "15561:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "15561:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "15167:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15212:9:12",
														"nodeType": "YulTypedName",
														"src": "15212:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15223:7:12",
														"nodeType": "YulTypedName",
														"src": "15223:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15235:6:12",
														"nodeType": "YulTypedName",
														"src": "15235:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15243:6:12",
														"nodeType": "YulTypedName",
														"src": "15243:6:12",
														"type": ""
													}
												],
												"src": "15167:474:12"
											},
											{
												"body": {
													"nativeSrc": "15790:946:12",
													"nodeType": "YulBlock",
													"src": "15790:946:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "15837:83:12",
																"nodeType": "YulBlock",
																"src": "15837:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15839:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "15839:77:12"
																			},
																			"nativeSrc": "15839:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15839:79:12"
																		},
																		"nativeSrc": "15839:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "15839:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15811:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "15811:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15820:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15820:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15807:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15807:3:12"
																		},
																		"nativeSrc": "15807:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15807:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15832:3:12",
																		"nodeType": "YulLiteral",
																		"src": "15832:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15803:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15803:3:12"
																},
																"nativeSrc": "15803:33:12",
																"nodeType": "YulFunctionCall",
																"src": "15803:33:12"
															},
															"nativeSrc": "15800:120:12",
															"nodeType": "YulIf",
															"src": "15800:120:12"
														},
														{
															"nativeSrc": "15930:117:12",
															"nodeType": "YulBlock",
															"src": "15930:117:12",
															"statements": [
																{
																	"nativeSrc": "15945:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15945:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15959:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15959:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15949:6:12",
																			"nodeType": "YulTypedName",
																			"src": "15949:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15974:63:12",
																	"nodeType": "YulAssignment",
																	"src": "15974:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16009:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "16009:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16020:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "16020:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16005:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16005:3:12"
																				},
																				"nativeSrc": "16005:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16005:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16029:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "16029:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "15984:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "15984:20:12"
																		},
																		"nativeSrc": "15984:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15984:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15974:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "15974:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16057:118:12",
															"nodeType": "YulBlock",
															"src": "16057:118:12",
															"statements": [
																{
																	"nativeSrc": "16072:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16072:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16086:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16086:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16076:6:12",
																			"nodeType": "YulTypedName",
																			"src": "16076:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16102:63:12",
																	"nodeType": "YulAssignment",
																	"src": "16102:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16137:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "16137:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16148:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "16148:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16133:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16133:3:12"
																				},
																				"nativeSrc": "16133:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16133:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16157:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "16157:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16112:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "16112:20:12"
																		},
																		"nativeSrc": "16112:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16112:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "16102:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "16102:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16185:118:12",
															"nodeType": "YulBlock",
															"src": "16185:118:12",
															"statements": [
																{
																	"nativeSrc": "16200:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16200:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16214:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16214:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16204:6:12",
																			"nodeType": "YulTypedName",
																			"src": "16204:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16230:63:12",
																	"nodeType": "YulAssignment",
																	"src": "16230:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16265:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "16265:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16276:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "16276:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16261:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16261:3:12"
																				},
																				"nativeSrc": "16261:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16261:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16285:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "16285:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "16240:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "16240:20:12"
																		},
																		"nativeSrc": "16240:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16240:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "16230:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "16230:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16313:118:12",
															"nodeType": "YulBlock",
															"src": "16313:118:12",
															"statements": [
																{
																	"nativeSrc": "16328:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16328:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16342:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16342:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16332:6:12",
																			"nodeType": "YulTypedName",
																			"src": "16332:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16358:63:12",
																	"nodeType": "YulAssignment",
																	"src": "16358:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16393:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "16393:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16404:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "16404:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16389:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16389:3:12"
																				},
																				"nativeSrc": "16389:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16389:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16413:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "16413:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "16368:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "16368:20:12"
																		},
																		"nativeSrc": "16368:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16368:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "16358:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "16358:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16441:288:12",
															"nodeType": "YulBlock",
															"src": "16441:288:12",
															"statements": [
																{
																	"nativeSrc": "16456:47:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16456:47:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16487:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "16487:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16498:3:12",
																						"nodeType": "YulLiteral",
																						"src": "16498:3:12",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16483:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16483:3:12"
																				},
																				"nativeSrc": "16483:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16483:19:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "16470:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "16470:12:12"
																		},
																		"nativeSrc": "16470:33:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16470:33:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16460:6:12",
																			"nodeType": "YulTypedName",
																			"src": "16460:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "16550:83:12",
																		"nodeType": "YulBlock",
																		"src": "16550:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "16552:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "16552:77:12"
																					},
																					"nativeSrc": "16552:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "16552:79:12"
																				},
																				"nativeSrc": "16552:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "16552:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "16522:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16522:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16530:18:12",
																				"nodeType": "YulLiteral",
																				"src": "16530:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "16519:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "16519:2:12"
																		},
																		"nativeSrc": "16519:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16519:30:12"
																	},
																	"nativeSrc": "16516:117:12",
																	"nodeType": "YulIf",
																	"src": "16516:117:12"
																},
																{
																	"nativeSrc": "16647:72:12",
																	"nodeType": "YulAssignment",
																	"src": "16647:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16691:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "16691:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16702:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "16702:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16687:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16687:3:12"
																				},
																				"nativeSrc": "16687:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16687:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16711:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "16711:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "16657:29:12",
																			"nodeType": "YulIdentifier",
																			"src": "16657:29:12"
																		},
																		"nativeSrc": "16657:62:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16657:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "16647:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "16647:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "15647:1089:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15728:9:12",
														"nodeType": "YulTypedName",
														"src": "15728:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15739:7:12",
														"nodeType": "YulTypedName",
														"src": "15739:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15751:6:12",
														"nodeType": "YulTypedName",
														"src": "15751:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15759:6:12",
														"nodeType": "YulTypedName",
														"src": "15759:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15767:6:12",
														"nodeType": "YulTypedName",
														"src": "15767:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15775:6:12",
														"nodeType": "YulTypedName",
														"src": "15775:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "15783:6:12",
														"nodeType": "YulTypedName",
														"src": "15783:6:12",
														"type": ""
													}
												],
												"src": "15647:1089:12"
											},
											{
												"body": {
													"nativeSrc": "16770:152:12",
													"nodeType": "YulBlock",
													"src": "16770:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16787:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16787:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16790:77:12",
																		"nodeType": "YulLiteral",
																		"src": "16790:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16780:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16780:6:12"
																},
																"nativeSrc": "16780:88:12",
																"nodeType": "YulFunctionCall",
																"src": "16780:88:12"
															},
															"nativeSrc": "16780:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "16780:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16884:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16884:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16887:4:12",
																		"nodeType": "YulLiteral",
																		"src": "16887:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16877:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16877:6:12"
																},
																"nativeSrc": "16877:15:12",
																"nodeType": "YulFunctionCall",
																"src": "16877:15:12"
															},
															"nativeSrc": "16877:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "16877:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16908:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16908:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16911:4:12",
																		"nodeType": "YulLiteral",
																		"src": "16911:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16901:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16901:6:12"
																},
																"nativeSrc": "16901:15:12",
																"nodeType": "YulFunctionCall",
																"src": "16901:15:12"
															},
															"nativeSrc": "16901:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "16901:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "16742:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "16742:180:12"
											},
											{
												"body": {
													"nativeSrc": "16979:269:12",
													"nodeType": "YulBlock",
													"src": "16979:269:12",
													"statements": [
														{
															"nativeSrc": "16989:22:12",
															"nodeType": "YulAssignment",
															"src": "16989:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17003:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17003:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17009:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17009:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16999:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16999:3:12"
																},
																"nativeSrc": "16999:12:12",
																"nodeType": "YulFunctionCall",
																"src": "16999:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "16989:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16989:6:12"
																}
															]
														},
														{
															"nativeSrc": "17020:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "17020:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17050:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17050:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17056:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17056:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "17046:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17046:3:12"
																},
																"nativeSrc": "17046:12:12",
																"nodeType": "YulFunctionCall",
																"src": "17046:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "17024:18:12",
																	"nodeType": "YulTypedName",
																	"src": "17024:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17097:51:12",
																"nodeType": "YulBlock",
																"src": "17097:51:12",
																"statements": [
																	{
																		"nativeSrc": "17111:27:12",
																		"nodeType": "YulAssignment",
																		"src": "17111:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "17125:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "17125:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17133:4:12",
																					"nodeType": "YulLiteral",
																					"src": "17133:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "17121:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "17121:3:12"
																			},
																			"nativeSrc": "17121:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17121:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "17111:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "17111:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "17077:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "17077:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17070:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17070:6:12"
																},
																"nativeSrc": "17070:26:12",
																"nodeType": "YulFunctionCall",
																"src": "17070:26:12"
															},
															"nativeSrc": "17067:81:12",
															"nodeType": "YulIf",
															"src": "17067:81:12"
														},
														{
															"body": {
																"nativeSrc": "17200:42:12",
																"nodeType": "YulBlock",
																"src": "17200:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "17214:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "17214:16:12"
																			},
																			"nativeSrc": "17214:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17214:18:12"
																		},
																		"nativeSrc": "17214:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "17214:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "17164:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "17164:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "17187:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "17187:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17195:2:12",
																				"nodeType": "YulLiteral",
																				"src": "17195:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "17184:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "17184:2:12"
																		},
																		"nativeSrc": "17184:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17184:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "17161:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "17161:2:12"
																},
																"nativeSrc": "17161:38:12",
																"nodeType": "YulFunctionCall",
																"src": "17161:38:12"
															},
															"nativeSrc": "17158:84:12",
															"nodeType": "YulIf",
															"src": "17158:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "16928:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16963:4:12",
														"nodeType": "YulTypedName",
														"src": "16963:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "16972:6:12",
														"nodeType": "YulTypedName",
														"src": "16972:6:12",
														"type": ""
													}
												],
												"src": "16928:320:12"
											},
											{
												"body": {
													"nativeSrc": "17319:53:12",
													"nodeType": "YulBlock",
													"src": "17319:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17336:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17336:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17359:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "17359:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "17341:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "17341:17:12"
																		},
																		"nativeSrc": "17341:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17341:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17329:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17329:6:12"
																},
																"nativeSrc": "17329:37:12",
																"nodeType": "YulFunctionCall",
																"src": "17329:37:12"
															},
															"nativeSrc": "17329:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "17329:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "17254:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17307:5:12",
														"nodeType": "YulTypedName",
														"src": "17307:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17314:3:12",
														"nodeType": "YulTypedName",
														"src": "17314:3:12",
														"type": ""
													}
												],
												"src": "17254:118:12"
											},
											{
												"body": {
													"nativeSrc": "17504:206:12",
													"nodeType": "YulBlock",
													"src": "17504:206:12",
													"statements": [
														{
															"nativeSrc": "17514:26:12",
															"nodeType": "YulAssignment",
															"src": "17514:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17526:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17526:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17537:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17537:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17522:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17522:3:12"
																},
																"nativeSrc": "17522:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17522:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17514:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17514:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17594:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17594:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17607:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17607:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17618:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17618:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17603:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17603:3:12"
																		},
																		"nativeSrc": "17603:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17603:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17550:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17550:43:12"
																},
																"nativeSrc": "17550:71:12",
																"nodeType": "YulFunctionCall",
																"src": "17550:71:12"
															},
															"nativeSrc": "17550:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "17550:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17675:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17675:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17688:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17688:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17699:2:12",
																				"nodeType": "YulLiteral",
																				"src": "17699:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17684:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17684:3:12"
																		},
																		"nativeSrc": "17684:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17684:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17631:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17631:43:12"
																},
																"nativeSrc": "17631:72:12",
																"nodeType": "YulFunctionCall",
																"src": "17631:72:12"
															},
															"nativeSrc": "17631:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "17631:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "17378:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17468:9:12",
														"nodeType": "YulTypedName",
														"src": "17468:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17480:6:12",
														"nodeType": "YulTypedName",
														"src": "17480:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17488:6:12",
														"nodeType": "YulTypedName",
														"src": "17488:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17499:4:12",
														"nodeType": "YulTypedName",
														"src": "17499:4:12",
														"type": ""
													}
												],
												"src": "17378:332:12"
											},
											{
												"body": {
													"nativeSrc": "17842:206:12",
													"nodeType": "YulBlock",
													"src": "17842:206:12",
													"statements": [
														{
															"nativeSrc": "17852:26:12",
															"nodeType": "YulAssignment",
															"src": "17852:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17864:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17864:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17875:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17875:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17860:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17860:3:12"
																},
																"nativeSrc": "17860:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17860:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17852:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17852:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17932:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17932:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17945:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17945:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17956:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17956:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17941:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17941:3:12"
																		},
																		"nativeSrc": "17941:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17941:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17888:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17888:43:12"
																},
																"nativeSrc": "17888:71:12",
																"nodeType": "YulFunctionCall",
																"src": "17888:71:12"
															},
															"nativeSrc": "17888:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "17888:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18013:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18013:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18026:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18026:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18037:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18037:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18022:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18022:3:12"
																		},
																		"nativeSrc": "18022:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18022:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17969:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17969:43:12"
																},
																"nativeSrc": "17969:72:12",
																"nodeType": "YulFunctionCall",
																"src": "17969:72:12"
															},
															"nativeSrc": "17969:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "17969:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "17716:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17806:9:12",
														"nodeType": "YulTypedName",
														"src": "17806:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17818:6:12",
														"nodeType": "YulTypedName",
														"src": "17818:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17826:6:12",
														"nodeType": "YulTypedName",
														"src": "17826:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17837:4:12",
														"nodeType": "YulTypedName",
														"src": "17837:4:12",
														"type": ""
													}
												],
												"src": "17716:332:12"
											},
											{
												"body": {
													"nativeSrc": "18082:152:12",
													"nodeType": "YulBlock",
													"src": "18082:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18099:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18099:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18102:77:12",
																		"nodeType": "YulLiteral",
																		"src": "18102:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18092:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18092:6:12"
																},
																"nativeSrc": "18092:88:12",
																"nodeType": "YulFunctionCall",
																"src": "18092:88:12"
															},
															"nativeSrc": "18092:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "18092:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18196:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18196:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18199:4:12",
																		"nodeType": "YulLiteral",
																		"src": "18199:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18189:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18189:6:12"
																},
																"nativeSrc": "18189:15:12",
																"nodeType": "YulFunctionCall",
																"src": "18189:15:12"
															},
															"nativeSrc": "18189:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "18189:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18220:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18220:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18223:4:12",
																		"nodeType": "YulLiteral",
																		"src": "18223:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18213:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18213:6:12"
																},
																"nativeSrc": "18213:15:12",
																"nodeType": "YulFunctionCall",
																"src": "18213:15:12"
															},
															"nativeSrc": "18213:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "18213:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "18054:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "18054:180:12"
											},
											{
												"body": {
													"nativeSrc": "18338:124:12",
													"nodeType": "YulBlock",
													"src": "18338:124:12",
													"statements": [
														{
															"nativeSrc": "18348:26:12",
															"nodeType": "YulAssignment",
															"src": "18348:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18360:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "18360:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18371:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18371:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18356:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18356:3:12"
																},
																"nativeSrc": "18356:18:12",
																"nodeType": "YulFunctionCall",
																"src": "18356:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18348:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18348:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18428:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18428:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18441:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18441:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18452:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18452:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18437:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18437:3:12"
																		},
																		"nativeSrc": "18437:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18437:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18384:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18384:43:12"
																},
																"nativeSrc": "18384:71:12",
																"nodeType": "YulFunctionCall",
																"src": "18384:71:12"
															},
															"nativeSrc": "18384:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "18384:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "18240:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18310:9:12",
														"nodeType": "YulTypedName",
														"src": "18310:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18322:6:12",
														"nodeType": "YulTypedName",
														"src": "18322:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18333:4:12",
														"nodeType": "YulTypedName",
														"src": "18333:4:12",
														"type": ""
													}
												],
												"src": "18240:222:12"
											},
											{
												"body": {
													"nativeSrc": "18650:371:12",
													"nodeType": "YulBlock",
													"src": "18650:371:12",
													"statements": [
														{
															"nativeSrc": "18660:27:12",
															"nodeType": "YulAssignment",
															"src": "18660:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18672:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "18672:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18683:3:12",
																		"nodeType": "YulLiteral",
																		"src": "18683:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18668:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18668:3:12"
																},
																"nativeSrc": "18668:19:12",
																"nodeType": "YulFunctionCall",
																"src": "18668:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18660:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18660:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18741:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18741:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18754:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18754:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18765:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18765:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18750:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18750:3:12"
																		},
																		"nativeSrc": "18750:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18750:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18697:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18697:43:12"
																},
																"nativeSrc": "18697:71:12",
																"nodeType": "YulFunctionCall",
																"src": "18697:71:12"
															},
															"nativeSrc": "18697:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "18697:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18822:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18822:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18835:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18835:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18846:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18846:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18831:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18831:3:12"
																		},
																		"nativeSrc": "18831:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18831:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18778:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18778:43:12"
																},
																"nativeSrc": "18778:72:12",
																"nodeType": "YulFunctionCall",
																"src": "18778:72:12"
															},
															"nativeSrc": "18778:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "18778:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18904:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18904:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18917:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18917:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18928:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18928:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18913:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18913:3:12"
																		},
																		"nativeSrc": "18913:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18913:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18860:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18860:43:12"
																},
																"nativeSrc": "18860:72:12",
																"nodeType": "YulFunctionCall",
																"src": "18860:72:12"
															},
															"nativeSrc": "18860:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "18860:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "18986:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18986:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18999:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18999:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19010:2:12",
																				"nodeType": "YulLiteral",
																				"src": "19010:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18995:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18995:3:12"
																		},
																		"nativeSrc": "18995:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18995:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18942:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18942:43:12"
																},
																"nativeSrc": "18942:72:12",
																"nodeType": "YulFunctionCall",
																"src": "18942:72:12"
															},
															"nativeSrc": "18942:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "18942:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "18468:553:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18598:9:12",
														"nodeType": "YulTypedName",
														"src": "18598:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18610:6:12",
														"nodeType": "YulTypedName",
														"src": "18610:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18618:6:12",
														"nodeType": "YulTypedName",
														"src": "18618:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18626:6:12",
														"nodeType": "YulTypedName",
														"src": "18626:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18634:6:12",
														"nodeType": "YulTypedName",
														"src": "18634:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18645:4:12",
														"nodeType": "YulTypedName",
														"src": "18645:4:12",
														"type": ""
													}
												],
												"src": "18468:553:12"
											},
											{
												"body": {
													"nativeSrc": "19055:152:12",
													"nodeType": "YulBlock",
													"src": "19055:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19072:1:12",
																		"nodeType": "YulLiteral",
																		"src": "19072:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19075:77:12",
																		"nodeType": "YulLiteral",
																		"src": "19075:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19065:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19065:6:12"
																},
																"nativeSrc": "19065:88:12",
																"nodeType": "YulFunctionCall",
																"src": "19065:88:12"
															},
															"nativeSrc": "19065:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "19065:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19169:1:12",
																		"nodeType": "YulLiteral",
																		"src": "19169:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19172:4:12",
																		"nodeType": "YulLiteral",
																		"src": "19172:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19162:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19162:6:12"
																},
																"nativeSrc": "19162:15:12",
																"nodeType": "YulFunctionCall",
																"src": "19162:15:12"
															},
															"nativeSrc": "19162:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "19162:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19193:1:12",
																		"nodeType": "YulLiteral",
																		"src": "19193:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19196:4:12",
																		"nodeType": "YulLiteral",
																		"src": "19196:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19186:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19186:6:12"
																},
																"nativeSrc": "19186:15:12",
																"nodeType": "YulFunctionCall",
																"src": "19186:15:12"
															},
															"nativeSrc": "19186:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "19186:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "19027:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "19027:180:12"
											},
											{
												"body": {
													"nativeSrc": "19257:147:12",
													"nodeType": "YulBlock",
													"src": "19257:147:12",
													"statements": [
														{
															"nativeSrc": "19267:25:12",
															"nodeType": "YulAssignment",
															"src": "19267:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19290:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19290:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19272:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "19272:17:12"
																},
																"nativeSrc": "19272:20:12",
																"nodeType": "YulFunctionCall",
																"src": "19272:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19267:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "19267:1:12"
																}
															]
														},
														{
															"nativeSrc": "19301:25:12",
															"nodeType": "YulAssignment",
															"src": "19301:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19324:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19324:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19306:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "19306:17:12"
																},
																"nativeSrc": "19306:20:12",
																"nodeType": "YulFunctionCall",
																"src": "19306:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19301:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "19301:1:12"
																}
															]
														},
														{
															"nativeSrc": "19335:16:12",
															"nodeType": "YulAssignment",
															"src": "19335:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19346:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19346:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19349:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19349:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19342:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19342:3:12"
																},
																"nativeSrc": "19342:9:12",
																"nodeType": "YulFunctionCall",
																"src": "19342:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "19335:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19335:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19375:22:12",
																"nodeType": "YulBlock",
																"src": "19375:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19377:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "19377:16:12"
																			},
																			"nativeSrc": "19377:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "19377:18:12"
																		},
																		"nativeSrc": "19377:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "19377:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19367:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19367:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "19370:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19370:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19364:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "19364:2:12"
																},
																"nativeSrc": "19364:10:12",
																"nodeType": "YulFunctionCall",
																"src": "19364:10:12"
															},
															"nativeSrc": "19361:36:12",
															"nodeType": "YulIf",
															"src": "19361:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "19213:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19244:1:12",
														"nodeType": "YulTypedName",
														"src": "19244:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19247:1:12",
														"nodeType": "YulTypedName",
														"src": "19247:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "19253:3:12",
														"nodeType": "YulTypedName",
														"src": "19253:3:12",
														"type": ""
													}
												],
												"src": "19213:191:12"
											},
											{
												"body": {
													"nativeSrc": "19636:408:12",
													"nodeType": "YulBlock",
													"src": "19636:408:12",
													"statements": [
														{
															"nativeSrc": "19646:26:12",
															"nodeType": "YulAssignment",
															"src": "19646:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19658:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "19658:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19669:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19669:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19654:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19654:3:12"
																},
																"nativeSrc": "19654:18:12",
																"nodeType": "YulFunctionCall",
																"src": "19654:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19646:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19646:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19693:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19693:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19704:1:12",
																				"nodeType": "YulLiteral",
																				"src": "19704:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19689:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19689:3:12"
																		},
																		"nativeSrc": "19689:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19689:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19712:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "19712:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19718:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19718:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19708:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19708:3:12"
																		},
																		"nativeSrc": "19708:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19708:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19682:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19682:6:12"
																},
																"nativeSrc": "19682:47:12",
																"nodeType": "YulFunctionCall",
																"src": "19682:47:12"
															},
															"nativeSrc": "19682:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "19682:47:12"
														},
														{
															"nativeSrc": "19738:116:12",
															"nodeType": "YulAssignment",
															"src": "19738:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19840:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19840:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "19849:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19849:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "19746:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "19746:93:12"
																},
																"nativeSrc": "19746:108:12",
																"nodeType": "YulFunctionCall",
																"src": "19746:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19738:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19738:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19875:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19875:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19886:2:12",
																				"nodeType": "YulLiteral",
																				"src": "19886:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19871:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19871:3:12"
																		},
																		"nativeSrc": "19871:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19871:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19895:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "19895:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19901:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19901:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19891:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19891:3:12"
																		},
																		"nativeSrc": "19891:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19891:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19864:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19864:6:12"
																},
																"nativeSrc": "19864:48:12",
																"nodeType": "YulFunctionCall",
																"src": "19864:48:12"
															},
															"nativeSrc": "19864:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "19864:48:12"
														},
														{
															"nativeSrc": "19921:116:12",
															"nodeType": "YulAssignment",
															"src": "19921:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20023:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20023:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "20032:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "20032:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "19929:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "19929:93:12"
																},
																"nativeSrc": "19929:108:12",
																"nodeType": "YulFunctionCall",
																"src": "19929:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19921:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19921:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "19410:634:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19600:9:12",
														"nodeType": "YulTypedName",
														"src": "19600:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19612:6:12",
														"nodeType": "YulTypedName",
														"src": "19612:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19620:6:12",
														"nodeType": "YulTypedName",
														"src": "19620:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19631:4:12",
														"nodeType": "YulTypedName",
														"src": "19631:4:12",
														"type": ""
													}
												],
												"src": "19410:634:12"
											},
											{
												"body": {
													"nativeSrc": "20108:40:12",
													"nodeType": "YulBlock",
													"src": "20108:40:12",
													"statements": [
														{
															"nativeSrc": "20119:22:12",
															"nodeType": "YulAssignment",
															"src": "20119:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20135:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "20135:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20129:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "20129:5:12"
																},
																"nativeSrc": "20129:12:12",
																"nodeType": "YulFunctionCall",
																"src": "20129:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "20119:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20119:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "20050:98:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20091:5:12",
														"nodeType": "YulTypedName",
														"src": "20091:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "20101:6:12",
														"nodeType": "YulTypedName",
														"src": "20101:6:12",
														"type": ""
													}
												],
												"src": "20050:98:12"
											},
											{
												"body": {
													"nativeSrc": "20249:73:12",
													"nodeType": "YulBlock",
													"src": "20249:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20266:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20266:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20271:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20271:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20259:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20259:6:12"
																},
																"nativeSrc": "20259:19:12",
																"nodeType": "YulFunctionCall",
																"src": "20259:19:12"
															},
															"nativeSrc": "20259:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "20259:19:12"
														},
														{
															"nativeSrc": "20287:29:12",
															"nodeType": "YulAssignment",
															"src": "20287:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20306:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20306:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20311:4:12",
																		"nodeType": "YulLiteral",
																		"src": "20311:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20302:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20302:3:12"
																},
																"nativeSrc": "20302:14:12",
																"nodeType": "YulFunctionCall",
																"src": "20302:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "20287:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "20287:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "20154:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20221:3:12",
														"nodeType": "YulTypedName",
														"src": "20221:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "20226:6:12",
														"nodeType": "YulTypedName",
														"src": "20226:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "20237:11:12",
														"nodeType": "YulTypedName",
														"src": "20237:11:12",
														"type": ""
													}
												],
												"src": "20154:168:12"
											},
											{
												"body": {
													"nativeSrc": "20418:283:12",
													"nodeType": "YulBlock",
													"src": "20418:283:12",
													"statements": [
														{
															"nativeSrc": "20428:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "20428:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20474:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "20474:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "20442:31:12",
																	"nodeType": "YulIdentifier",
																	"src": "20442:31:12"
																},
																"nativeSrc": "20442:38:12",
																"nodeType": "YulFunctionCall",
																"src": "20442:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "20432:6:12",
																	"nodeType": "YulTypedName",
																	"src": "20432:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20489:77:12",
															"nodeType": "YulAssignment",
															"src": "20489:77:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20554:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20554:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20559:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20559:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "20496:57:12",
																	"nodeType": "YulIdentifier",
																	"src": "20496:57:12"
																},
																"nativeSrc": "20496:70:12",
																"nodeType": "YulFunctionCall",
																"src": "20496:70:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20489:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20489:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20614:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "20614:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20621:4:12",
																				"nodeType": "YulLiteral",
																				"src": "20621:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20610:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20610:3:12"
																		},
																		"nativeSrc": "20610:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20610:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20628:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20628:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20633:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20633:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "20575:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "20575:34:12"
																},
																"nativeSrc": "20575:65:12",
																"nodeType": "YulFunctionCall",
																"src": "20575:65:12"
															},
															"nativeSrc": "20575:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "20575:65:12"
														},
														{
															"nativeSrc": "20649:46:12",
															"nodeType": "YulAssignment",
															"src": "20649:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20660:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20660:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "20687:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "20687:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "20665:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "20665:21:12"
																		},
																		"nativeSrc": "20665:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20665:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20656:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20656:3:12"
																},
																"nativeSrc": "20656:39:12",
																"nodeType": "YulFunctionCall",
																"src": "20656:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20649:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20649:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "20328:373:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20399:5:12",
														"nodeType": "YulTypedName",
														"src": "20399:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20406:3:12",
														"nodeType": "YulTypedName",
														"src": "20406:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20414:3:12",
														"nodeType": "YulTypedName",
														"src": "20414:3:12",
														"type": ""
													}
												],
												"src": "20328:373:12"
											},
											{
												"body": {
													"nativeSrc": "20935:523:12",
													"nodeType": "YulBlock",
													"src": "20935:523:12",
													"statements": [
														{
															"nativeSrc": "20945:27:12",
															"nodeType": "YulAssignment",
															"src": "20945:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20957:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "20957:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20968:3:12",
																		"nodeType": "YulLiteral",
																		"src": "20968:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20953:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20953:3:12"
																},
																"nativeSrc": "20953:19:12",
																"nodeType": "YulFunctionCall",
																"src": "20953:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20945:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20945:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21026:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21026:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21039:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21039:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21050:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21050:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21035:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21035:3:12"
																		},
																		"nativeSrc": "21035:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21035:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20982:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20982:43:12"
																},
																"nativeSrc": "20982:71:12",
																"nodeType": "YulFunctionCall",
																"src": "20982:71:12"
															},
															"nativeSrc": "20982:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "20982:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21107:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21107:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21120:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21120:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21131:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21131:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21116:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21116:3:12"
																		},
																		"nativeSrc": "21116:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21116:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21063:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "21063:43:12"
																},
																"nativeSrc": "21063:72:12",
																"nodeType": "YulFunctionCall",
																"src": "21063:72:12"
															},
															"nativeSrc": "21063:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "21063:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21189:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21189:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21202:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21202:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21213:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21213:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21198:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21198:3:12"
																		},
																		"nativeSrc": "21198:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21198:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21145:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "21145:43:12"
																},
																"nativeSrc": "21145:72:12",
																"nodeType": "YulFunctionCall",
																"src": "21145:72:12"
															},
															"nativeSrc": "21145:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "21145:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "21271:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21271:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21284:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21284:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21295:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21295:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21280:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21280:3:12"
																		},
																		"nativeSrc": "21280:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21280:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21227:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "21227:43:12"
																},
																"nativeSrc": "21227:72:12",
																"nodeType": "YulFunctionCall",
																"src": "21227:72:12"
															},
															"nativeSrc": "21227:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "21227:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21320:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21320:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21331:3:12",
																				"nodeType": "YulLiteral",
																				"src": "21331:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21316:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21316:3:12"
																		},
																		"nativeSrc": "21316:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21316:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21341:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "21341:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21347:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21347:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21337:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21337:3:12"
																		},
																		"nativeSrc": "21337:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21337:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21309:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21309:6:12"
																},
																"nativeSrc": "21309:49:12",
																"nodeType": "YulFunctionCall",
																"src": "21309:49:12"
															},
															"nativeSrc": "21309:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "21309:49:12"
														},
														{
															"nativeSrc": "21367:84:12",
															"nodeType": "YulAssignment",
															"src": "21367:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "21437:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21437:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "21446:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "21446:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "21375:61:12",
																	"nodeType": "YulIdentifier",
																	"src": "21375:61:12"
																},
																"nativeSrc": "21375:76:12",
																"nodeType": "YulFunctionCall",
																"src": "21375:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21367:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21367:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "20707:751:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20875:9:12",
														"nodeType": "YulTypedName",
														"src": "20875:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "20887:6:12",
														"nodeType": "YulTypedName",
														"src": "20887:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "20895:6:12",
														"nodeType": "YulTypedName",
														"src": "20895:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20903:6:12",
														"nodeType": "YulTypedName",
														"src": "20903:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20911:6:12",
														"nodeType": "YulTypedName",
														"src": "20911:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20919:6:12",
														"nodeType": "YulTypedName",
														"src": "20919:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20930:4:12",
														"nodeType": "YulTypedName",
														"src": "20930:4:12",
														"type": ""
													}
												],
												"src": "20707:751:12"
											},
											{
												"body": {
													"nativeSrc": "21526:79:12",
													"nodeType": "YulBlock",
													"src": "21526:79:12",
													"statements": [
														{
															"nativeSrc": "21536:22:12",
															"nodeType": "YulAssignment",
															"src": "21536:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "21551:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21551:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21545:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "21545:5:12"
																},
																"nativeSrc": "21545:13:12",
																"nodeType": "YulFunctionCall",
																"src": "21545:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21536:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "21536:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21593:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "21593:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "21567:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "21567:25:12"
																},
																"nativeSrc": "21567:32:12",
																"nodeType": "YulFunctionCall",
																"src": "21567:32:12"
															},
															"nativeSrc": "21567:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "21567:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "21464:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "21504:6:12",
														"nodeType": "YulTypedName",
														"src": "21504:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21512:3:12",
														"nodeType": "YulTypedName",
														"src": "21512:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "21520:5:12",
														"nodeType": "YulTypedName",
														"src": "21520:5:12",
														"type": ""
													}
												],
												"src": "21464:141:12"
											},
											{
												"body": {
													"nativeSrc": "21687:273:12",
													"nodeType": "YulBlock",
													"src": "21687:273:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "21733:83:12",
																"nodeType": "YulBlock",
																"src": "21733:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "21735:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "21735:77:12"
																			},
																			"nativeSrc": "21735:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "21735:79:12"
																		},
																		"nativeSrc": "21735:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "21735:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21708:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "21708:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21717:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21717:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21704:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21704:3:12"
																		},
																		"nativeSrc": "21704:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21704:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21729:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21729:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "21700:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21700:3:12"
																},
																"nativeSrc": "21700:32:12",
																"nodeType": "YulFunctionCall",
																"src": "21700:32:12"
															},
															"nativeSrc": "21697:119:12",
															"nodeType": "YulIf",
															"src": "21697:119:12"
														},
														{
															"nativeSrc": "21826:127:12",
															"nodeType": "YulBlock",
															"src": "21826:127:12",
															"statements": [
																{
																	"nativeSrc": "21841:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21841:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21855:1:12",
																		"nodeType": "YulLiteral",
																		"src": "21855:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21845:6:12",
																			"nodeType": "YulTypedName",
																			"src": "21845:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21870:73:12",
																	"nodeType": "YulAssignment",
																	"src": "21870:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21915:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "21915:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21926:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "21926:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21911:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "21911:3:12"
																				},
																				"nativeSrc": "21911:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "21911:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21935:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "21935:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "21880:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "21880:30:12"
																		},
																		"nativeSrc": "21880:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21880:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "21870:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "21870:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "21611:349:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21657:9:12",
														"nodeType": "YulTypedName",
														"src": "21657:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "21668:7:12",
														"nodeType": "YulTypedName",
														"src": "21668:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "21680:6:12",
														"nodeType": "YulTypedName",
														"src": "21680:6:12",
														"type": ""
													}
												],
												"src": "21611:349:12"
											},
											{
												"body": {
													"nativeSrc": "22294:725:12",
													"nodeType": "YulBlock",
													"src": "22294:725:12",
													"statements": [
														{
															"nativeSrc": "22304:27:12",
															"nodeType": "YulAssignment",
															"src": "22304:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22316:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "22316:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22327:3:12",
																		"nodeType": "YulLiteral",
																		"src": "22327:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22312:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22312:3:12"
																},
																"nativeSrc": "22312:19:12",
																"nodeType": "YulFunctionCall",
																"src": "22312:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22304:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22304:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22385:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22385:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22398:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22398:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22409:1:12",
																				"nodeType": "YulLiteral",
																				"src": "22409:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22394:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22394:3:12"
																		},
																		"nativeSrc": "22394:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22394:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22341:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "22341:43:12"
																},
																"nativeSrc": "22341:71:12",
																"nodeType": "YulFunctionCall",
																"src": "22341:71:12"
															},
															"nativeSrc": "22341:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "22341:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22466:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22466:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22479:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22479:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22490:2:12",
																				"nodeType": "YulLiteral",
																				"src": "22490:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22475:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22475:3:12"
																		},
																		"nativeSrc": "22475:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22475:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22422:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "22422:43:12"
																},
																"nativeSrc": "22422:72:12",
																"nodeType": "YulFunctionCall",
																"src": "22422:72:12"
															},
															"nativeSrc": "22422:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "22422:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22515:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22515:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22526:2:12",
																				"nodeType": "YulLiteral",
																				"src": "22526:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22511:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22511:3:12"
																		},
																		"nativeSrc": "22511:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22511:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22535:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "22535:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22541:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22541:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22531:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22531:3:12"
																		},
																		"nativeSrc": "22531:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22531:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22504:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22504:6:12"
																},
																"nativeSrc": "22504:48:12",
																"nodeType": "YulFunctionCall",
																"src": "22504:48:12"
															},
															"nativeSrc": "22504:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "22504:48:12"
														},
														{
															"nativeSrc": "22561:116:12",
															"nodeType": "YulAssignment",
															"src": "22561:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22663:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22663:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "22672:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "22672:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "22569:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "22569:93:12"
																},
																"nativeSrc": "22569:108:12",
																"nodeType": "YulFunctionCall",
																"src": "22569:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22561:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22561:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22698:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22698:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22709:2:12",
																				"nodeType": "YulLiteral",
																				"src": "22709:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22694:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22694:3:12"
																		},
																		"nativeSrc": "22694:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22694:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22718:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "22718:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22724:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22724:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22714:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22714:3:12"
																		},
																		"nativeSrc": "22714:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22714:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22687:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22687:6:12"
																},
																"nativeSrc": "22687:48:12",
																"nodeType": "YulFunctionCall",
																"src": "22687:48:12"
															},
															"nativeSrc": "22687:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "22687:48:12"
														},
														{
															"nativeSrc": "22744:116:12",
															"nodeType": "YulAssignment",
															"src": "22744:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "22846:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22846:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "22855:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "22855:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "22752:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "22752:93:12"
																},
																"nativeSrc": "22752:108:12",
																"nodeType": "YulFunctionCall",
																"src": "22752:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22744:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22744:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22881:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22881:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22892:3:12",
																				"nodeType": "YulLiteral",
																				"src": "22892:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22877:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22877:3:12"
																		},
																		"nativeSrc": "22877:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22877:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22902:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "22902:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22908:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22908:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22898:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22898:3:12"
																		},
																		"nativeSrc": "22898:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22898:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22870:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22870:6:12"
																},
																"nativeSrc": "22870:49:12",
																"nodeType": "YulFunctionCall",
																"src": "22870:49:12"
															},
															"nativeSrc": "22870:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "22870:49:12"
														},
														{
															"nativeSrc": "22928:84:12",
															"nodeType": "YulAssignment",
															"src": "22928:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "22998:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22998:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "23007:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "23007:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "22936:61:12",
																	"nodeType": "YulIdentifier",
																	"src": "22936:61:12"
																},
																"nativeSrc": "22936:76:12",
																"nodeType": "YulFunctionCall",
																"src": "22936:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22928:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22928:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "21966:1053:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22234:9:12",
														"nodeType": "YulTypedName",
														"src": "22234:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "22246:6:12",
														"nodeType": "YulTypedName",
														"src": "22246:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "22254:6:12",
														"nodeType": "YulTypedName",
														"src": "22254:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "22262:6:12",
														"nodeType": "YulTypedName",
														"src": "22262:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22270:6:12",
														"nodeType": "YulTypedName",
														"src": "22270:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22278:6:12",
														"nodeType": "YulTypedName",
														"src": "22278:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22289:4:12",
														"nodeType": "YulTypedName",
														"src": "22289:4:12",
														"type": ""
													}
												],
												"src": "21966:1053:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610085575f3560e01c80634e1273f4116100595780634e1273f414610135578063a22cb46514610165578063e985e9c514610181578063f242432a146101b157610085565b8062fdd58e1461008957806301ffc9a7146100b95780630e89341c146100e95780632eb2c2d614610119575b5f80fd5b6100a3600480360381019061009e91906112ef565b6101cd565b6040516100b0919061133c565b60405180910390f35b6100d360048036038101906100ce91906113aa565b610222565b6040516100e091906113ef565b60405180910390f35b61010360048036038101906100fe9190611408565b610303565b60405161011091906114bd565b60405180910390f35b610133600480360381019061012e91906116cd565b610395565b005b61014f600480360381019061014a9190611858565b61043c565b60405161015c9190611985565b60405180910390f35b61017f600480360381019061017a91906119cf565b610543565b005b61019b60048036038101906101969190611a0d565b610559565b6040516101a891906113ef565b60405180910390f35b6101cb60048036038101906101c69190611a4b565b6105e7565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102ec57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806102fc57506102fb8261068e565b5b9050919050565b60606002805461031290611b0b565b80601f016020809104026020016040519081016040528092919081815260200182805461033e90611b0b565b80156103895780601f1061036057610100808354040283529160200191610389565b820191905f5260205f20905b81548152906001019060200180831161036c57829003601f168201915b50505050509050919050565b5f61039e6106f7565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156103e357506103e18682610559565b155b156104275780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161041e929190611b4a565b60405180910390fd5b61043486868686866106fe565b505050505050565b6060815183511461048857815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161047f929190611b71565b60405180910390fd5b5f835167ffffffffffffffff8111156104a4576104a36114e1565b5b6040519080825280602002602001820160405280156104d25781602001602082028036833780820191505090505b5090505f5b84518110156105385761050e6104f682876107f290919063ffffffff16565b610509838761080590919063ffffffff16565b6101cd565b82828151811061052157610520611b98565b5b6020026020010181815250508060010190506104d7565b508091505092915050565b61055561054e6106f7565b8383610818565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f6105f06106f7565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561063557506106338682610559565b155b156106795780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610670929190611b4a565b60405180910390fd5b6106868686868686610981565b505050505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361076e575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016107659190611bc5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036107de575f6040517f01a835140000000000000000000000000000000000000000000000000000000081526004016107d59190611bc5565b60405180910390fd5b6107eb8585858585610a87565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610888575f6040517fced3e10000000000000000000000000000000000000000000000000000000000815260040161087f9190611bc5565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161097491906113ef565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109f1575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016109e89190611bc5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610a61575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610a589190611bc5565b60405180910390fd5b5f80610a6d8585610b33565b91509150610a7e8787848487610a87565b50505050505050565b610a9385858585610b63565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610b2c575f610acf6106f7565b90506001845103610b1b575f610aee5f8661080590919063ffffffff16565b90505f610b045f8661080590919063ffffffff16565b9050610b14838989858589610ef3565b5050610b2a565b610b298187878787876110a2565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b8051825114610bad57815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610ba4929190611b71565b60405180910390fd5b5f610bb66106f7565b90505f5b8351811015610db2575f610bd7828661080590919063ffffffff16565b90505f610bed838661080590919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610d10575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610cbc57888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401610cb39493929190611bde565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610da557805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d9d9190611c4e565b925050819055505b5050806001019050610bba565b506001835103610e6d575f610dd05f8561080590919063ffffffff16565b90505f610de65f8561080590919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610e5e929190611b71565b60405180910390a45050610eec565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610ee3929190611c81565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b111561109a578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401610f53959493929190611d08565b6020604051808303815f875af1925050508015610f8e57506040513d601f19601f82011682018060405250810190610f8b9190611d74565b60015b61100f573d805f8114610fbc576040519150601f19603f3d011682016040523d82523d5f602084013e610fc1565b606091505b505f81510361100757846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610ffe9190611bc5565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461109857846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161108f9190611bc5565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611249578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611102959493929190611d9f565b6020604051808303815f875af192505050801561113d57506040513d601f19601f8201168201806040525081019061113a9190611d74565b60015b6111be573d805f811461116b576040519150601f19603f3d011682016040523d82523d5f602084013e611170565b606091505b505f8151036111b657846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111ad9190611bc5565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461124757846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161123e9190611bc5565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61128b82611262565b9050919050565b61129b81611281565b81146112a5575f80fd5b50565b5f813590506112b681611292565b92915050565b5f819050919050565b6112ce816112bc565b81146112d8575f80fd5b50565b5f813590506112e9816112c5565b92915050565b5f80604083850312156113055761130461125a565b5b5f611312858286016112a8565b9250506020611323858286016112db565b9150509250929050565b611336816112bc565b82525050565b5f60208201905061134f5f83018461132d565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61138981611355565b8114611393575f80fd5b50565b5f813590506113a481611380565b92915050565b5f602082840312156113bf576113be61125a565b5b5f6113cc84828501611396565b91505092915050565b5f8115159050919050565b6113e9816113d5565b82525050565b5f6020820190506114025f8301846113e0565b92915050565b5f6020828403121561141d5761141c61125a565b5b5f61142a848285016112db565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561146a57808201518184015260208101905061144f565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61148f82611433565b611499818561143d565b93506114a981856020860161144d565b6114b281611475565b840191505092915050565b5f6020820190508181035f8301526114d58184611485565b905092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61151782611475565b810181811067ffffffffffffffff82111715611536576115356114e1565b5b80604052505050565b5f611548611251565b9050611554828261150e565b919050565b5f67ffffffffffffffff821115611573576115726114e1565b5b602082029050602081019050919050565b5f80fd5b5f61159a61159584611559565b61153f565b905080838252602082019050602084028301858111156115bd576115bc611584565b5b835b818110156115e657806115d288826112db565b8452602084019350506020810190506115bf565b5050509392505050565b5f82601f830112611604576116036114dd565b5b8135611614848260208601611588565b91505092915050565b5f80fd5b5f67ffffffffffffffff82111561163b5761163a6114e1565b5b61164482611475565b9050602081019050919050565b828183375f83830152505050565b5f61167161166c84611621565b61153f565b90508281526020810184848401111561168d5761168c61161d565b5b611698848285611651565b509392505050565b5f82601f8301126116b4576116b36114dd565b5b81356116c484826020860161165f565b91505092915050565b5f805f805f60a086880312156116e6576116e561125a565b5b5f6116f3888289016112a8565b9550506020611704888289016112a8565b945050604086013567ffffffffffffffff8111156117255761172461125e565b5b611731888289016115f0565b935050606086013567ffffffffffffffff8111156117525761175161125e565b5b61175e888289016115f0565b925050608086013567ffffffffffffffff81111561177f5761177e61125e565b5b61178b888289016116a0565b9150509295509295909350565b5f67ffffffffffffffff8211156117b2576117b16114e1565b5b602082029050602081019050919050565b5f6117d56117d084611798565b61153f565b905080838252602082019050602084028301858111156117f8576117f7611584565b5b835b81811015611821578061180d88826112a8565b8452602084019350506020810190506117fa565b5050509392505050565b5f82601f83011261183f5761183e6114dd565b5b813561184f8482602086016117c3565b91505092915050565b5f806040838503121561186e5761186d61125a565b5b5f83013567ffffffffffffffff81111561188b5761188a61125e565b5b6118978582860161182b565b925050602083013567ffffffffffffffff8111156118b8576118b761125e565b5b6118c4858286016115f0565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611900816112bc565b82525050565b5f61191183836118f7565b60208301905092915050565b5f602082019050919050565b5f611933826118ce565b61193d81856118d8565b9350611948836118e8565b805f5b8381101561197857815161195f8882611906565b975061196a8361191d565b92505060018101905061194b565b5085935050505092915050565b5f6020820190508181035f83015261199d8184611929565b905092915050565b6119ae816113d5565b81146119b8575f80fd5b50565b5f813590506119c9816119a5565b92915050565b5f80604083850312156119e5576119e461125a565b5b5f6119f2858286016112a8565b9250506020611a03858286016119bb565b9150509250929050565b5f8060408385031215611a2357611a2261125a565b5b5f611a30858286016112a8565b9250506020611a41858286016112a8565b9150509250929050565b5f805f805f60a08688031215611a6457611a6361125a565b5b5f611a71888289016112a8565b9550506020611a82888289016112a8565b9450506040611a93888289016112db565b9350506060611aa4888289016112db565b925050608086013567ffffffffffffffff811115611ac557611ac461125e565b5b611ad1888289016116a0565b9150509295509295909350565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611b2257607f821691505b602082108103611b3557611b34611ade565b5b50919050565b611b4481611281565b82525050565b5f604082019050611b5d5f830185611b3b565b611b6a6020830184611b3b565b9392505050565b5f604082019050611b845f83018561132d565b611b91602083018461132d565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f602082019050611bd85f830184611b3b565b92915050565b5f608082019050611bf15f830187611b3b565b611bfe602083018661132d565b611c0b604083018561132d565b611c18606083018461132d565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c58826112bc565b9150611c63836112bc565b9250828201905080821115611c7b57611c7a611c21565b5b92915050565b5f6040820190508181035f830152611c998185611929565b90508181036020830152611cad8184611929565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f611cda82611cb6565b611ce48185611cc0565b9350611cf481856020860161144d565b611cfd81611475565b840191505092915050565b5f60a082019050611d1b5f830188611b3b565b611d286020830187611b3b565b611d35604083018661132d565b611d42606083018561132d565b8181036080830152611d548184611cd0565b90509695505050505050565b5f81519050611d6e81611380565b92915050565b5f60208284031215611d8957611d8861125a565b5b5f611d9684828501611d60565b91505092915050565b5f60a082019050611db25f830188611b3b565b611dbf6020830187611b3b565b8181036040830152611dd18186611929565b90508181036060830152611de58185611929565b90508181036080830152611df98184611cd0565b9050969550505050505056fea2646970667358221220a0afe434d9ad0377b4047847bdcc2af6fe13956f49c7645634c99e373f58e7b464736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B1 JUMPI PUSH2 0x85 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x119 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x12EF JUMP JUMPDEST PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x13AA JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x13EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH2 0x395 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1985 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x19CF JUMP JUMPDEST PUSH2 0x543 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x13EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1A4B JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2EC JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x2FC JUMPI POP PUSH2 0x2FB DUP3 PUSH2 0x68E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x312 SWAP1 PUSH2 0x1B0B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x33E SWAP1 PUSH2 0x1B0B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x360 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x389 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x36C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x39E PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3E3 JUMPI POP PUSH2 0x3E1 DUP7 DUP3 PUSH2 0x559 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x427 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41E SWAP3 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x434 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x6FE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x488 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47F SWAP3 SWAP2 SWAP1 PUSH2 0x1B71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A4 JUMPI PUSH2 0x4A3 PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4D2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x538 JUMPI PUSH2 0x50E PUSH2 0x4F6 DUP3 DUP8 PUSH2 0x7F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x509 DUP4 DUP8 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CD JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x521 JUMPI PUSH2 0x520 PUSH2 0x1B98 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x4D7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x555 PUSH2 0x54E PUSH2 0x6F7 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x818 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5F0 PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x635 JUMPI POP PUSH2 0x633 DUP7 DUP3 PUSH2 0x559 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x679 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x670 SWAP3 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x686 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x981 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x76E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D5 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7EB DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xA87 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x888 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87F SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x974 SWAP2 SWAP1 PUSH2 0x13EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA61 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA58 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xA6D DUP6 DUP6 PUSH2 0xB33 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xA7E DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xA87 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA93 DUP6 DUP6 DUP6 DUP6 PUSH2 0xB63 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB2C JUMPI PUSH0 PUSH2 0xACF PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0xB1B JUMPI PUSH0 PUSH2 0xAEE PUSH0 DUP7 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xB04 PUSH0 DUP7 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB14 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xEF3 JUMP JUMPDEST POP POP PUSH2 0xB2A JUMP JUMPDEST PUSH2 0xB29 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x10A2 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xBAD JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xBB6 PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xDB2 JUMPI PUSH0 PUSH2 0xBD7 DUP3 DUP7 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xBED DUP4 DUP7 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD10 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCBC JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA5 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD9D SWAP2 SWAP1 PUSH2 0x1C4E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xBBA JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0xE6D JUMPI PUSH0 PUSH2 0xDD0 PUSH0 DUP6 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xDE6 PUSH0 DUP6 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xE5E SWAP3 SWAP2 SWAP1 PUSH2 0x1B71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0xEEC JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xEE3 SWAP3 SWAP2 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x109A JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF53 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D08 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF8E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF8B SWAP2 SWAP1 PUSH2 0x1D74 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x100F JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xFBC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFC1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1007 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFE SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1098 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108F SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1249 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1102 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x113D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x113A SWAP2 SWAP1 PUSH2 0x1D74 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11BE JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x116B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1170 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x11B6 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AD SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1247 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123E SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x128B DUP3 PUSH2 0x1262 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x129B DUP2 PUSH2 0x1281 JUMP JUMPDEST DUP2 EQ PUSH2 0x12A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12B6 DUP2 PUSH2 0x1292 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12CE DUP2 PUSH2 0x12BC JUMP JUMPDEST DUP2 EQ PUSH2 0x12D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12E9 DUP2 PUSH2 0x12C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1305 JUMPI PUSH2 0x1304 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1312 DUP6 DUP3 DUP7 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1323 DUP6 DUP3 DUP7 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1336 DUP2 PUSH2 0x12BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x134F PUSH0 DUP4 ADD DUP5 PUSH2 0x132D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1389 DUP2 PUSH2 0x1355 JUMP JUMPDEST DUP2 EQ PUSH2 0x1393 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13A4 DUP2 PUSH2 0x1380 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13BF JUMPI PUSH2 0x13BE PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13CC DUP5 DUP3 DUP6 ADD PUSH2 0x1396 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E9 DUP2 PUSH2 0x13D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1402 PUSH0 DUP4 ADD DUP5 PUSH2 0x13E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x141D JUMPI PUSH2 0x141C PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x142A DUP5 DUP3 DUP6 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x146A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x144F JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x148F DUP3 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x1499 DUP2 DUP6 PUSH2 0x143D JUMP JUMPDEST SWAP4 POP PUSH2 0x14A9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144D JUMP JUMPDEST PUSH2 0x14B2 DUP2 PUSH2 0x1475 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14D5 DUP2 DUP5 PUSH2 0x1485 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1517 DUP3 PUSH2 0x1475 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1536 JUMPI PUSH2 0x1535 PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1548 PUSH2 0x1251 JUMP JUMPDEST SWAP1 POP PUSH2 0x1554 DUP3 DUP3 PUSH2 0x150E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1573 JUMPI PUSH2 0x1572 PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x159A PUSH2 0x1595 DUP5 PUSH2 0x1559 JUMP JUMPDEST PUSH2 0x153F JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x15BD JUMPI PUSH2 0x15BC PUSH2 0x1584 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15E6 JUMPI DUP1 PUSH2 0x15D2 DUP9 DUP3 PUSH2 0x12DB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15BF JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1604 JUMPI PUSH2 0x1603 PUSH2 0x14DD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1614 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x163B JUMPI PUSH2 0x163A PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST PUSH2 0x1644 DUP3 PUSH2 0x1475 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1671 PUSH2 0x166C DUP5 PUSH2 0x1621 JUMP JUMPDEST PUSH2 0x153F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x168D JUMPI PUSH2 0x168C PUSH2 0x161D JUMP JUMPDEST JUMPDEST PUSH2 0x1698 DUP5 DUP3 DUP6 PUSH2 0x1651 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16B4 JUMPI PUSH2 0x16B3 PUSH2 0x14DD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16C4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x165F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x16E6 JUMPI PUSH2 0x16E5 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16F3 DUP9 DUP3 DUP10 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1704 DUP9 DUP3 DUP10 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1725 JUMPI PUSH2 0x1724 PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x1731 DUP9 DUP3 DUP10 ADD PUSH2 0x15F0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1752 JUMPI PUSH2 0x1751 PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x175E DUP9 DUP3 DUP10 ADD PUSH2 0x15F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x177F JUMPI PUSH2 0x177E PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x178B DUP9 DUP3 DUP10 ADD PUSH2 0x16A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17B2 JUMPI PUSH2 0x17B1 PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17D5 PUSH2 0x17D0 DUP5 PUSH2 0x1798 JUMP JUMPDEST PUSH2 0x153F JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x17F8 JUMPI PUSH2 0x17F7 PUSH2 0x1584 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1821 JUMPI DUP1 PUSH2 0x180D DUP9 DUP3 PUSH2 0x12A8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17FA JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x183F JUMPI PUSH2 0x183E PUSH2 0x14DD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x184F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x186E JUMPI PUSH2 0x186D PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x188B JUMPI PUSH2 0x188A PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x1897 DUP6 DUP3 DUP7 ADD PUSH2 0x182B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18B8 JUMPI PUSH2 0x18B7 PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x18C4 DUP6 DUP3 DUP7 ADD PUSH2 0x15F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1900 DUP2 PUSH2 0x12BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1911 DUP4 DUP4 PUSH2 0x18F7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1933 DUP3 PUSH2 0x18CE JUMP JUMPDEST PUSH2 0x193D DUP2 DUP6 PUSH2 0x18D8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1948 DUP4 PUSH2 0x18E8 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1978 JUMPI DUP2 MLOAD PUSH2 0x195F DUP9 DUP3 PUSH2 0x1906 JUMP JUMPDEST SWAP8 POP PUSH2 0x196A DUP4 PUSH2 0x191D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x194B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x199D DUP2 DUP5 PUSH2 0x1929 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19AE DUP2 PUSH2 0x13D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x19B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19C9 DUP2 PUSH2 0x19A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19E5 JUMPI PUSH2 0x19E4 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19F2 DUP6 DUP3 DUP7 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A03 DUP6 DUP3 DUP7 ADD PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A23 JUMPI PUSH2 0x1A22 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A30 DUP6 DUP3 DUP7 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A41 DUP6 DUP3 DUP7 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A64 JUMPI PUSH2 0x1A63 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A71 DUP9 DUP3 DUP10 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1A82 DUP9 DUP3 DUP10 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1A93 DUP9 DUP3 DUP10 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1AA4 DUP9 DUP3 DUP10 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AC5 JUMPI PUSH2 0x1AC4 PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x1AD1 DUP9 DUP3 DUP10 ADD PUSH2 0x16A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1B22 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B35 JUMPI PUSH2 0x1B34 PUSH2 0x1ADE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B44 DUP2 PUSH2 0x1281 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B5D PUSH0 DUP4 ADD DUP6 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x1B6A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B3B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B84 PUSH0 DUP4 ADD DUP6 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x1B91 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x132D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BD8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1BF1 PUSH0 DUP4 ADD DUP8 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x1BFE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x1C0B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x1C18 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x132D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C58 DUP3 PUSH2 0x12BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1C63 DUP4 PUSH2 0x12BC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C7B JUMPI PUSH2 0x1C7A PUSH2 0x1C21 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C99 DUP2 DUP6 PUSH2 0x1929 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1CAD DUP2 DUP5 PUSH2 0x1929 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CDA DUP3 PUSH2 0x1CB6 JUMP JUMPDEST PUSH2 0x1CE4 DUP2 DUP6 PUSH2 0x1CC0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CF4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144D JUMP JUMPDEST PUSH2 0x1CFD DUP2 PUSH2 0x1475 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1D1B PUSH0 DUP4 ADD DUP9 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x1D28 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x1D35 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x1D42 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x132D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1D54 DUP2 DUP5 PUSH2 0x1CD0 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D6E DUP2 PUSH2 0x1380 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D89 JUMPI PUSH2 0x1D88 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D96 DUP5 DUP3 DUP6 ADD PUSH2 0x1D60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1DB2 PUSH0 DUP4 ADD DUP9 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x1DBF PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1B3B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1DD1 DUP2 DUP7 PUSH2 0x1929 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1DE5 DUP2 DUP6 PUSH2 0x1929 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1DF9 DUP2 DUP5 PUSH2 0x1CD0 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xAF 0xE4 CALLVALUE 0xD9 0xAD SUB PUSH24 0xB4047847BDCC2AF6FE13956F49C7645634C99E373F58E7B4 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "130:215:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:132:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1380:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2084:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4014:429;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2536:552;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3156:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3367:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3591:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2247:132;2324:7;2350:9;:13;2360:2;2350:13;;;;;;;;;;;:22;2364:7;2350:22;;;;;;;;;;;;;;;;2343:29;;2247:132;;;;:::o;1380:305::-;1482:4;1532:26;1517:41;;;:11;:41;;;;:109;;;;1589:37;1574:52;;;:11;:52;;;;1517:109;:161;;;;1642:36;1666:11;1642:23;:36::i;:::-;1517:161;1498:180;;1380:305;;;:::o;2084:103::-;2144:13;2176:4;2169:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:103;;;:::o;4014:429::-;4208:14;4225:12;:10;:12::i;:::-;4208:29;;4259:6;4251:14;;:4;:14;;;;:49;;;;;4270:30;4287:4;4293:6;4270:16;:30::i;:::-;4269:31;4251:49;4247:129;;;4352:6;4360:4;4323:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4247:129;4385:51;4408:4;4414:2;4418:3;4423:6;4431:4;4385:22;:51::i;:::-;4198:245;4014:429;;;;;:::o;2536:552::-;2660:16;2711:3;:10;2692:8;:15;:29;2688:121;;2770:3;:10;2782:8;:15;2744:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2688:121;2819:30;2866:8;:15;2852:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:63;;2898:9;2893:158;2917:8;:15;2913:1;:19;2893:158;;;2972:68;2982:30;3010:1;2982:8;:27;;:30;;;;:::i;:::-;3014:25;3037:1;3014:3;:22;;:25;;;;:::i;:::-;2972:9;:68::i;:::-;2953:13;2967:1;2953:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2934:3;;;;;2893:158;;;;3068:13;3061:20;;;2536:552;;;;:::o;3156:144::-;3241:52;3260:12;:10;:12::i;:::-;3274:8;3284;3241:18;:52::i;:::-;3156:144;;:::o;3367:157::-;3457:4;3480:18;:27;3499:7;3480:27;;;;;;;;;;;;;;;:37;3508:8;3480:37;;;;;;;;;;;;;;;;;;;;;;;;;3473:44;;3367:157;;;;:::o;3591:351::-;3714:14;3731:12;:10;:12::i;:::-;3714:29;;3765:6;3757:14;;:4;:14;;;;:49;;;;;3776:30;3793:4;3799:6;3776:16;:30::i;:::-;3775:31;3757:49;3753:129;;;3858:6;3866:4;3829:42;;;;;;;;;;;;:::i;:::-;;;;;;;;3753:129;3891:44;3909:4;3915:2;3919;3923:5;3930:4;3891:17;:44::i;:::-;3704:238;3591:351;;;;;:::o;762:146:8:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;9015:445:1:-;9222:1;9208:16;;:2;:16;;;9204:88;;9278:1;9247:34;;;;;;;;;;;:::i;:::-;;;;;;;;9204:88;9321:1;9305:18;;:4;:18;;;9301:88;;9375:1;9346:32;;;;;;;;;;;:::i;:::-;;;;;;;;9301:88;9398:55;9425:4;9431:2;9435:3;9440:6;9448:4;9398:26;:55::i;:::-;9015:445;;;;;:::o;4603:197:5:-;4689:11;4777:4;4772:3;4768:14;4761:4;4756:3;4752:14;4748:35;4742:42;4735:49;;4603:197;;;;:::o;4204:::-;4290:11;4378:4;4373:3;4369:14;4362:4;4357:3;4353:14;4349:35;4343:42;4336:49;;4204:197;;;;:::o;13268:315:1:-;13395:1;13375:22;;:8;:22;;;13371:94;;13451:1;13420:34;;;;;;;;;;;:::i;:::-;;;;;;;;13371:94;13512:8;13474:18;:25;13493:5;13474:25;;;;;;;;;;;;;;;:35;13500:8;13474:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13557:8;13535:41;;13550:5;13535:41;;;13567:8;13535:41;;;;;;:::i;:::-;;;;;;;;13268:315;;;:::o;8151:463::-;8287:1;8273:16;;:2;:16;;;8269:88;;8343:1;8312:34;;;;;;;;;;;:::i;:::-;;;;;;;;8269:88;8386:1;8370:18;;:4;:18;;;8366:88;;8440:1;8411:32;;;;;;;;;;;:::i;:::-;;;;;;;;8366:88;8464:20;8486:23;8513:29;8532:2;8536:5;8513:18;:29::i;:::-;8463:79;;;;8552:55;8579:4;8585:2;8589:3;8594:6;8602:4;8552:26;:55::i;:::-;8259:355;;8151:463;;;;;:::o;7004:690::-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;:30::i;:::-;7263:1;7249:16;;:2;:16;;;7245:443;;7281:16;7300:12;:10;:12::i;:::-;7281:31;;7344:1;7330:3;:10;:15;7326:352;;7365:10;7378:25;7401:1;7378:3;:22;;:25;;;;:::i;:::-;7365:38;;7421:13;7437:28;7463:1;7437:6;:25;;:28;;;;:::i;:::-;7421:44;;7483:67;7514:8;7524:4;7530:2;7534;7538:5;7545:4;7483:30;:67::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;:74::i;:::-;7326:352;7267:421;7245:443;7004:690;;;;;:::o;16080:849::-;16188:23;16213;16374:4;16368:11;16358:21;;16444:1;16436:6;16429:17;16582:8;16575:4;16567:6;16563:17;16556:35;16704:4;16696:6;16692:17;16682:27;;16737:1;16729:6;16722:17;16778:8;16771:4;16763:6;16759:17;16752:35;16907:4;16899:6;16895:17;16889:4;16882:31;16080:849;;;;;:::o;5144:1281::-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:3;:10;5353:6;:13;5315:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5261:117;5388:16;5407:12;:10;:12::i;:::-;5388:31;;5435:9;5430:691;5454:3;:10;5450:1;:14;5430:691;;;5485:10;5498:25;5521:1;5498:3;:22;;:25;;;;:::i;:::-;5485:38;;5537:13;5553:28;5579:1;5553:6;:25;;:28;;;;:::i;:::-;5537:44;;5616:1;5600:18;;:4;:18;;;5596:420;;5638:19;5660:9;:13;5670:2;5660:13;;;;;;;;;;;:19;5674:4;5660:19;;;;;;;;;;;;;;;;5638:41;;5715:5;5701:11;:19;5697:129;;;5778:4;5784:11;5797:5;5804:2;5751:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5697:129;5978:5;5964:11;:19;5942:9;:13;5952:2;5942:13;;;;;;;;;;;:19;5956:4;5942:19;;;;;;;;;;;;;;;:41;;;;5620:396;5596:420;6048:1;6034:16;;:2;:16;;;6030:81;;6091:5;6070:9;:13;6080:2;6070:13;;;;;;;;;;;:17;6084:2;6070:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6030:81;5471:650;;5466:3;;;;;5430:691;;;;6149:1;6135:3;:10;:15;6131:288;;6166:10;6179:25;6202:1;6179:3;:22;;:25;;;;:::i;:::-;6166:38;;6218:13;6234:28;6260:1;6234:6;:25;;:28;;;;:::i;:::-;6218:44;;6312:2;6281:45;;6306:4;6281:45;;6296:8;6281:45;;;6316:2;6320:5;6281:45;;;;;;;:::i;:::-;;;;;;;;6152:185;;6131:288;;;6392:2;6362:46;;6386:4;6362:46;;6376:8;6362:46;;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;6131:288;5251:1174;5144:1281;;;;:::o;13761:974::-;13984:1;13967:2;:14;;;:18;13963:766;;;14022:2;14005:38;;;14044:8;14054:4;14060:2;14064:5;14071:4;14005:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14377:1;14360:6;:13;:18;14356:349;;14487:2;14464:26;;;;;;;;;;;:::i;:::-;;;;;;;;14356:349;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;14137:43;;;14125:55;;;:8;:55;;;;14121:174;;14273:2;14250:26;;;;;;;;;;;:::i;:::-;;;;;;;;14121:174;14077:232;13963:766;13761:974;;;;;;:::o;14923:1041::-;15171:1;15154:2;:14;;;:18;15150:808;;;15209:2;15192:43;;;15236:8;15246:4;15252:3;15257:6;15265:4;15192:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15606:1;15589:6;:13;:18;15585:349;;15716:2;15693:26;;;;;;;;;;;:::i;:::-;;;;;;;;15585:349;15886:6;15880:13;15871:6;15867:2;15863:15;15856:38;15188:760;15361:48;;;15349:60;;;:8;:60;;;;15345:179;;15502:2;15479:26;;;;;;;;;;;:::i;:::-;;;;;;;;15345:179;15271:267;15150:808;14923:1041;;;;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:246::-;3909:1;3919:113;3933:6;3930:1;3927:13;3919:113;;;4018:1;4013:3;4009:11;4003:18;3999:1;3994:3;3990:11;3983:39;3955:2;3952:1;3948:10;3943:15;;3919:113;;;4066:1;4057:6;4052:3;4048:16;4041:27;3890:184;3828:246;;;:::o;4080:102::-;4121:6;4172:2;4168:7;4163:2;4156:5;4152:14;4148:28;4138:38;;4080:102;;;:::o;4188:377::-;4276:3;4304:39;4337:5;4304:39;:::i;:::-;4359:71;4423:6;4418:3;4359:71;:::i;:::-;4352:78;;4439:65;4497:6;4492:3;4485:4;4478:5;4474:16;4439:65;:::i;:::-;4529:29;4551:6;4529:29;:::i;:::-;4524:3;4520:39;4513:46;;4280:285;4188:377;;;;:::o;4571:313::-;4684:4;4722:2;4711:9;4707:18;4699:26;;4771:9;4765:4;4761:20;4757:1;4746:9;4742:17;4735:47;4799:78;4872:4;4863:6;4799:78;:::i;:::-;4791:86;;4571:313;;;;:::o;4890:117::-;4999:1;4996;4989:12;5013:180;5061:77;5058:1;5051:88;5158:4;5155:1;5148:15;5182:4;5179:1;5172:15;5199:281;5282:27;5304:4;5282:27;:::i;:::-;5274:6;5270:40;5412:6;5400:10;5397:22;5376:18;5364:10;5361:34;5358:62;5355:88;;;5423:18;;:::i;:::-;5355:88;5463:10;5459:2;5452:22;5242:238;5199:281;;:::o;5486:129::-;5520:6;5547:20;;:::i;:::-;5537:30;;5576:33;5604:4;5596:6;5576:33;:::i;:::-;5486:129;;;:::o;5621:311::-;5698:4;5788:18;5780:6;5777:30;5774:56;;;5810:18;;:::i;:::-;5774:56;5860:4;5852:6;5848:17;5840:25;;5920:4;5914;5910:15;5902:23;;5621:311;;;:::o;5938:117::-;6047:1;6044;6037:12;6078:710;6174:5;6199:81;6215:64;6272:6;6215:64;:::i;:::-;6199:81;:::i;:::-;6190:90;;6300:5;6329:6;6322:5;6315:21;6363:4;6356:5;6352:16;6345:23;;6416:4;6408:6;6404:17;6396:6;6392:30;6445:3;6437:6;6434:15;6431:122;;;6464:79;;:::i;:::-;6431:122;6579:6;6562:220;6596:6;6591:3;6588:15;6562:220;;;6671:3;6700:37;6733:3;6721:10;6700:37;:::i;:::-;6695:3;6688:50;6767:4;6762:3;6758:14;6751:21;;6638:144;6622:4;6617:3;6613:14;6606:21;;6562:220;;;6566:21;6180:608;;6078:710;;;;;:::o;6811:370::-;6882:5;6931:3;6924:4;6916:6;6912:17;6908:27;6898:122;;6939:79;;:::i;:::-;6898:122;7056:6;7043:20;7081:94;7171:3;7163:6;7156:4;7148:6;7144:17;7081:94;:::i;:::-;7072:103;;6888:293;6811:370;;;;:::o;7187:117::-;7296:1;7293;7286:12;7310:307;7371:4;7461:18;7453:6;7450:30;7447:56;;;7483:18;;:::i;:::-;7447:56;7521:29;7543:6;7521:29;:::i;:::-;7513:37;;7605:4;7599;7595:15;7587:23;;7310:307;;;:::o;7623:146::-;7720:6;7715:3;7710;7697:30;7761:1;7752:6;7747:3;7743:16;7736:27;7623:146;;;:::o;7775:423::-;7852:5;7877:65;7893:48;7934:6;7893:48;:::i;:::-;7877:65;:::i;:::-;7868:74;;7965:6;7958:5;7951:21;8003:4;7996:5;7992:16;8041:3;8032:6;8027:3;8023:16;8020:25;8017:112;;;8048:79;;:::i;:::-;8017:112;8138:54;8185:6;8180:3;8175;8138:54;:::i;:::-;7858:340;7775:423;;;;;:::o;8217:338::-;8272:5;8321:3;8314:4;8306:6;8302:17;8298:27;8288:122;;8329:79;;:::i;:::-;8288:122;8446:6;8433:20;8471:78;8545:3;8537:6;8530:4;8522:6;8518:17;8471:78;:::i;:::-;8462:87;;8278:277;8217:338;;;;:::o;8561:1509::-;8715:6;8723;8731;8739;8747;8796:3;8784:9;8775:7;8771:23;8767:33;8764:120;;;8803:79;;:::i;:::-;8764:120;8923:1;8948:53;8993:7;8984:6;8973:9;8969:22;8948:53;:::i;:::-;8938:63;;8894:117;9050:2;9076:53;9121:7;9112:6;9101:9;9097:22;9076:53;:::i;:::-;9066:63;;9021:118;9206:2;9195:9;9191:18;9178:32;9237:18;9229:6;9226:30;9223:117;;;9259:79;;:::i;:::-;9223:117;9364:78;9434:7;9425:6;9414:9;9410:22;9364:78;:::i;:::-;9354:88;;9149:303;9519:2;9508:9;9504:18;9491:32;9550:18;9542:6;9539:30;9536:117;;;9572:79;;:::i;:::-;9536:117;9677:78;9747:7;9738:6;9727:9;9723:22;9677:78;:::i;:::-;9667:88;;9462:303;9832:3;9821:9;9817:19;9804:33;9864:18;9856:6;9853:30;9850:117;;;9886:79;;:::i;:::-;9850:117;9991:62;10045:7;10036:6;10025:9;10021:22;9991:62;:::i;:::-;9981:72;;9775:288;8561:1509;;;;;;;;:::o;10076:311::-;10153:4;10243:18;10235:6;10232:30;10229:56;;;10265:18;;:::i;:::-;10229:56;10315:4;10307:6;10303:17;10295:25;;10375:4;10369;10365:15;10357:23;;10076:311;;;:::o;10410:710::-;10506:5;10531:81;10547:64;10604:6;10547:64;:::i;:::-;10531:81;:::i;:::-;10522:90;;10632:5;10661:6;10654:5;10647:21;10695:4;10688:5;10684:16;10677:23;;10748:4;10740:6;10736:17;10728:6;10724:30;10777:3;10769:6;10766:15;10763:122;;;10796:79;;:::i;:::-;10763:122;10911:6;10894:220;10928:6;10923:3;10920:15;10894:220;;;11003:3;11032:37;11065:3;11053:10;11032:37;:::i;:::-;11027:3;11020:50;11099:4;11094:3;11090:14;11083:21;;10970:144;10954:4;10949:3;10945:14;10938:21;;10894:220;;;10898:21;10512:608;;10410:710;;;;;:::o;11143:370::-;11214:5;11263:3;11256:4;11248:6;11244:17;11240:27;11230:122;;11271:79;;:::i;:::-;11230:122;11388:6;11375:20;11413:94;11503:3;11495:6;11488:4;11480:6;11476:17;11413:94;:::i;:::-;11404:103;;11220:293;11143:370;;;;:::o;11519:894::-;11637:6;11645;11694:2;11682:9;11673:7;11669:23;11665:32;11662:119;;;11700:79;;:::i;:::-;11662:119;11848:1;11837:9;11833:17;11820:31;11878:18;11870:6;11867:30;11864:117;;;11900:79;;:::i;:::-;11864:117;12005:78;12075:7;12066:6;12055:9;12051:22;12005:78;:::i;:::-;11995:88;;11791:302;12160:2;12149:9;12145:18;12132:32;12191:18;12183:6;12180:30;12177:117;;;12213:79;;:::i;:::-;12177:117;12318:78;12388:7;12379:6;12368:9;12364:22;12318:78;:::i;:::-;12308:88;;12103:303;11519:894;;;;;:::o;12419:114::-;12486:6;12520:5;12514:12;12504:22;;12419:114;;;:::o;12539:184::-;12638:11;12672:6;12667:3;12660:19;12712:4;12707:3;12703:14;12688:29;;12539:184;;;;:::o;12729:132::-;12796:4;12819:3;12811:11;;12849:4;12844:3;12840:14;12832:22;;12729:132;;;:::o;12867:108::-;12944:24;12962:5;12944:24;:::i;:::-;12939:3;12932:37;12867:108;;:::o;12981:179::-;13050:10;13071:46;13113:3;13105:6;13071:46;:::i;:::-;13149:4;13144:3;13140:14;13126:28;;12981:179;;;;:::o;13166:113::-;13236:4;13268;13263:3;13259:14;13251:22;;13166:113;;;:::o;13315:732::-;13434:3;13463:54;13511:5;13463:54;:::i;:::-;13533:86;13612:6;13607:3;13533:86;:::i;:::-;13526:93;;13643:56;13693:5;13643:56;:::i;:::-;13722:7;13753:1;13738:284;13763:6;13760:1;13757:13;13738:284;;;13839:6;13833:13;13866:63;13925:3;13910:13;13866:63;:::i;:::-;13859:70;;13952:60;14005:6;13952:60;:::i;:::-;13942:70;;13798:224;13785:1;13782;13778:9;13773:14;;13738:284;;;13742:14;14038:3;14031:10;;13439:608;;;13315:732;;;;:::o;14053:373::-;14196:4;14234:2;14223:9;14219:18;14211:26;;14283:9;14277:4;14273:20;14269:1;14258:9;14254:17;14247:47;14311:108;14414:4;14405:6;14311:108;:::i;:::-;14303:116;;14053:373;;;;:::o;14432:116::-;14502:21;14517:5;14502:21;:::i;:::-;14495:5;14492:32;14482:60;;14538:1;14535;14528:12;14482:60;14432:116;:::o;14554:133::-;14597:5;14635:6;14622:20;14613:29;;14651:30;14675:5;14651:30;:::i;:::-;14554:133;;;;:::o;14693:468::-;14758:6;14766;14815:2;14803:9;14794:7;14790:23;14786:32;14783:119;;;14821:79;;:::i;:::-;14783:119;14941:1;14966:53;15011:7;15002:6;14991:9;14987:22;14966:53;:::i;:::-;14956:63;;14912:117;15068:2;15094:50;15136:7;15127:6;15116:9;15112:22;15094:50;:::i;:::-;15084:60;;15039:115;14693:468;;;;;:::o;15167:474::-;15235:6;15243;15292:2;15280:9;15271:7;15267:23;15263:32;15260:119;;;15298:79;;:::i;:::-;15260:119;15418:1;15443:53;15488:7;15479:6;15468:9;15464:22;15443:53;:::i;:::-;15433:63;;15389:117;15545:2;15571:53;15616:7;15607:6;15596:9;15592:22;15571:53;:::i;:::-;15561:63;;15516:118;15167:474;;;;;:::o;15647:1089::-;15751:6;15759;15767;15775;15783;15832:3;15820:9;15811:7;15807:23;15803:33;15800:120;;;15839:79;;:::i;:::-;15800:120;15959:1;15984:53;16029:7;16020:6;16009:9;16005:22;15984:53;:::i;:::-;15974:63;;15930:117;16086:2;16112:53;16157:7;16148:6;16137:9;16133:22;16112:53;:::i;:::-;16102:63;;16057:118;16214:2;16240:53;16285:7;16276:6;16265:9;16261:22;16240:53;:::i;:::-;16230:63;;16185:118;16342:2;16368:53;16413:7;16404:6;16393:9;16389:22;16368:53;:::i;:::-;16358:63;;16313:118;16498:3;16487:9;16483:19;16470:33;16530:18;16522:6;16519:30;16516:117;;;16552:79;;:::i;:::-;16516:117;16657:62;16711:7;16702:6;16691:9;16687:22;16657:62;:::i;:::-;16647:72;;16441:288;15647:1089;;;;;;;;:::o;16742:180::-;16790:77;16787:1;16780:88;16887:4;16884:1;16877:15;16911:4;16908:1;16901:15;16928:320;16972:6;17009:1;17003:4;16999:12;16989:22;;17056:1;17050:4;17046:12;17077:18;17067:81;;17133:4;17125:6;17121:17;17111:27;;17067:81;17195:2;17187:6;17184:14;17164:18;17161:38;17158:84;;17214:18;;:::i;:::-;17158:84;16979:269;16928:320;;;:::o;17254:118::-;17341:24;17359:5;17341:24;:::i;:::-;17336:3;17329:37;17254:118;;:::o;17378:332::-;17499:4;17537:2;17526:9;17522:18;17514:26;;17550:71;17618:1;17607:9;17603:17;17594:6;17550:71;:::i;:::-;17631:72;17699:2;17688:9;17684:18;17675:6;17631:72;:::i;:::-;17378:332;;;;;:::o;17716:::-;17837:4;17875:2;17864:9;17860:18;17852:26;;17888:71;17956:1;17945:9;17941:17;17932:6;17888:71;:::i;:::-;17969:72;18037:2;18026:9;18022:18;18013:6;17969:72;:::i;:::-;17716:332;;;;;:::o;18054:180::-;18102:77;18099:1;18092:88;18199:4;18196:1;18189:15;18223:4;18220:1;18213:15;18240:222;18333:4;18371:2;18360:9;18356:18;18348:26;;18384:71;18452:1;18441:9;18437:17;18428:6;18384:71;:::i;:::-;18240:222;;;;:::o;18468:553::-;18645:4;18683:3;18672:9;18668:19;18660:27;;18697:71;18765:1;18754:9;18750:17;18741:6;18697:71;:::i;:::-;18778:72;18846:2;18835:9;18831:18;18822:6;18778:72;:::i;:::-;18860;18928:2;18917:9;18913:18;18904:6;18860:72;:::i;:::-;18942;19010:2;18999:9;18995:18;18986:6;18942:72;:::i;:::-;18468:553;;;;;;;:::o;19027:180::-;19075:77;19072:1;19065:88;19172:4;19169:1;19162:15;19196:4;19193:1;19186:15;19213:191;19253:3;19272:20;19290:1;19272:20;:::i;:::-;19267:25;;19306:20;19324:1;19306:20;:::i;:::-;19301:25;;19349:1;19346;19342:9;19335:16;;19370:3;19367:1;19364:10;19361:36;;;19377:18;;:::i;:::-;19361:36;19213:191;;;;:::o;19410:634::-;19631:4;19669:2;19658:9;19654:18;19646:26;;19718:9;19712:4;19708:20;19704:1;19693:9;19689:17;19682:47;19746:108;19849:4;19840:6;19746:108;:::i;:::-;19738:116;;19901:9;19895:4;19891:20;19886:2;19875:9;19871:18;19864:48;19929:108;20032:4;20023:6;19929:108;:::i;:::-;19921:116;;19410:634;;;;;:::o;20050:98::-;20101:6;20135:5;20129:12;20119:22;;20050:98;;;:::o;20154:168::-;20237:11;20271:6;20266:3;20259:19;20311:4;20306:3;20302:14;20287:29;;20154:168;;;;:::o;20328:373::-;20414:3;20442:38;20474:5;20442:38;:::i;:::-;20496:70;20559:6;20554:3;20496:70;:::i;:::-;20489:77;;20575:65;20633:6;20628:3;20621:4;20614:5;20610:16;20575:65;:::i;:::-;20665:29;20687:6;20665:29;:::i;:::-;20660:3;20656:39;20649:46;;20418:283;20328:373;;;;:::o;20707:751::-;20930:4;20968:3;20957:9;20953:19;20945:27;;20982:71;21050:1;21039:9;21035:17;21026:6;20982:71;:::i;:::-;21063:72;21131:2;21120:9;21116:18;21107:6;21063:72;:::i;:::-;21145;21213:2;21202:9;21198:18;21189:6;21145:72;:::i;:::-;21227;21295:2;21284:9;21280:18;21271:6;21227:72;:::i;:::-;21347:9;21341:4;21337:20;21331:3;21320:9;21316:19;21309:49;21375:76;21446:4;21437:6;21375:76;:::i;:::-;21367:84;;20707:751;;;;;;;;:::o;21464:141::-;21520:5;21551:6;21545:13;21536:22;;21567:32;21593:5;21567:32;:::i;:::-;21464:141;;;;:::o;21611:349::-;21680:6;21729:2;21717:9;21708:7;21704:23;21700:32;21697:119;;;21735:79;;:::i;:::-;21697:119;21855:1;21880:63;21935:7;21926:6;21915:9;21911:22;21880:63;:::i;:::-;21870:73;;21826:127;21611:349;;;;:::o;21966:1053::-;22289:4;22327:3;22316:9;22312:19;22304:27;;22341:71;22409:1;22398:9;22394:17;22385:6;22341:71;:::i;:::-;22422:72;22490:2;22479:9;22475:18;22466:6;22422:72;:::i;:::-;22541:9;22535:4;22531:20;22526:2;22515:9;22511:18;22504:48;22569:108;22672:4;22663:6;22569:108;:::i;:::-;22561:116;;22724:9;22718:4;22714:20;22709:2;22698:9;22694:18;22687:48;22752:108;22855:4;22846:6;22752:108;:::i;:::-;22744:116;;22908:9;22902:4;22898:20;22892:3;22881:9;22877:19;22870:49;22936:76;23007:4;22998:6;22936:76;:::i;:::-;22928:84;;21966:1053;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1547800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "786",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 130,
									"end": 345,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 130,
									"end": 345,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 130,
									"end": 345,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 167,
									"end": 342,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 167,
									"end": 342,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 167,
									"end": 342,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 167,
									"end": 342,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 167,
									"end": 342,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 167,
									"end": 342,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 342,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 167,
									"end": 342,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 167,
									"end": 342,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 167,
									"end": 342,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 167,
									"end": 342,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "5C"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH data",
									"source": 1,
									"value": "99C456CE8103A063EADDE2FEFD34E0C93694EE0875780C5D3728DB26CA2AAF27"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "5C"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 306,
									"end": 334,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 312,
									"end": 322,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 324,
									"end": 325,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 327,
									"end": 329,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "A"
								},
								{
									"begin": 306,
									"end": 334,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 334,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 306,
									"end": 334,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 306,
									"end": 334,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 306,
									"end": 334,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 306,
									"end": 334,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 334,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 306,
									"end": 334,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 306,
									"end": 334,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 334,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 306,
									"end": 334,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 306,
									"end": 334,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 306,
									"end": 311,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 306,
									"end": 311,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 306,
									"end": 311,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 306,
									"end": 334,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 306,
									"end": 334,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 306,
									"end": 334,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 306,
									"end": 334,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 306,
									"end": 334,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 130,
									"end": 345,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 130,
									"end": 345,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10355,
									"end": 10361,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10352,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 10348,
									"end": 10361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10282,
									"end": 10368,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10746,
									"end": 11092,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 10746,
									"end": 11092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10856,
									"end": 10857,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10842,
									"end": 10858,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10842,
									"end": 10858,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 10842,
									"end": 10844,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 10842,
									"end": 10858,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10842,
									"end": 10858,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 10842,
									"end": 10858,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 10838,
									"end": 10926,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 10838,
									"end": 10926,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 10912,
									"end": 10913,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "PUSH",
									"source": 1,
									"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 10881,
									"end": 10915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 10838,
									"end": 10926,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 10838,
									"end": 10926,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10936,
									"end": 10956,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10958,
									"end": 10981,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 10985,
									"end": 11014,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 11004,
									"end": 11006,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 11008,
									"end": 11013,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 10985,
									"end": 11003,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 10985,
									"end": 11003,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10985,
									"end": 11003,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 10985,
									"end": 11014,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10985,
									"end": 11014,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 10985,
									"end": 11014,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10985,
									"end": 11014,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 10985,
									"end": 11014,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10935,
									"end": 11014,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10935,
									"end": 11014,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10935,
									"end": 11014,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10935,
									"end": 11014,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11024,
									"end": 11085,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 11059,
									"end": 11060,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11063,
									"end": 11065,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 11067,
									"end": 11070,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11072,
									"end": 11078,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11080,
									"end": 11084,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 11024,
									"end": 11050,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 11024,
									"end": 11050,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 11024,
									"end": 11050,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 11024,
									"end": 11085,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 11024,
									"end": 11085,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 11024,
									"end": 11085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11024,
									"end": 11085,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 11024,
									"end": 11085,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10828,
									"end": 11092,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10828,
									"end": 11092,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10746,
									"end": 11092,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10746,
									"end": 11092,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10746,
									"end": 11092,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10746,
									"end": 11092,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10746,
									"end": 11092,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 16080,
									"end": 16929,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 16080,
									"end": 16929,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 16188,
									"end": 16211,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 16213,
									"end": 16236,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 16374,
									"end": 16378,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 16368,
									"end": 16379,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 16358,
									"end": 16379,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 16358,
									"end": 16379,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 16444,
									"end": 16445,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 16436,
									"end": 16442,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 16429,
									"end": 16446,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 16582,
									"end": 16590,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 16575,
									"end": 16579,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 16567,
									"end": 16573,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 16563,
									"end": 16580,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 16556,
									"end": 16591,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 16704,
									"end": 16708,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 16696,
									"end": 16702,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 16692,
									"end": 16709,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 16682,
									"end": 16709,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 16682,
									"end": 16709,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 16737,
									"end": 16738,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 16729,
									"end": 16735,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 16722,
									"end": 16739,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 16778,
									"end": 16786,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 16771,
									"end": 16775,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 16763,
									"end": 16769,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 16759,
									"end": 16776,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 16752,
									"end": 16787,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 16907,
									"end": 16911,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 16899,
									"end": 16905,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 16895,
									"end": 16912,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 16889,
									"end": 16893,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 16882,
									"end": 16913,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 16080,
									"end": 16929,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 16080,
									"end": 16929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 16080,
									"end": 16929,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 16080,
									"end": 16929,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 16080,
									"end": 16929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 16080,
									"end": 16929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7004,
									"end": 7694,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 7004,
									"end": 7694,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7235,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 7213,
									"end": 7217,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7219,
									"end": 7221,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7223,
									"end": 7226,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7228,
									"end": 7234,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7212,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 7205,
									"end": 7212,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7205,
									"end": 7212,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7235,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7205,
									"end": 7235,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7235,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 7205,
									"end": 7235,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7263,
									"end": 7264,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7249,
									"end": 7265,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7249,
									"end": 7265,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7249,
									"end": 7251,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7249,
									"end": 7265,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7249,
									"end": 7265,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7249,
									"end": 7265,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 7245,
									"end": 7688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 7245,
									"end": 7688,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7281,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7300,
									"end": 7312,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 7300,
									"end": 7310,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 7300,
									"end": 7310,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7300,
									"end": 7310,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7300,
									"end": 7312,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7300,
									"end": 7312,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7300,
									"end": 7312,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7300,
									"end": 7312,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 7300,
									"end": 7312,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7281,
									"end": 7312,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7281,
									"end": 7312,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7344,
									"end": 7345,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7330,
									"end": 7333,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7330,
									"end": 7340,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7330,
									"end": 7345,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7375,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7378,
									"end": 7403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 7401,
									"end": 7402,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7378,
									"end": 7381,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 7378,
									"end": 7400,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 7378,
									"end": 7400,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7378,
									"end": 7400,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7378,
									"end": 7400,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7378,
									"end": 7403,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7378,
									"end": 7403,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7378,
									"end": 7403,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7378,
									"end": 7403,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7378,
									"end": 7403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7378,
									"end": 7403,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 7378,
									"end": 7403,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7403,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7403,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7421,
									"end": 7434,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7437,
									"end": 7465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 7463,
									"end": 7464,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7437,
									"end": 7443,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 7437,
									"end": 7462,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 7437,
									"end": 7462,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7437,
									"end": 7462,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7437,
									"end": 7462,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7437,
									"end": 7465,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7437,
									"end": 7465,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7437,
									"end": 7465,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7437,
									"end": 7465,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7437,
									"end": 7465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7437,
									"end": 7465,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 7437,
									"end": 7465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7421,
									"end": 7465,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7421,
									"end": 7465,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7483,
									"end": 7550,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 7514,
									"end": 7522,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7524,
									"end": 7528,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 7530,
									"end": 7532,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 7534,
									"end": 7536,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7538,
									"end": 7543,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7545,
									"end": 7549,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 7483,
									"end": 7513,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 7483,
									"end": 7513,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7483,
									"end": 7513,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7483,
									"end": 7550,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7483,
									"end": 7550,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7483,
									"end": 7550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7483,
									"end": 7550,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 7483,
									"end": 7550,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7347,
									"end": 7565,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7347,
									"end": 7565,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7589,
									"end": 7663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 7625,
									"end": 7633,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7635,
									"end": 7639,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 7641,
									"end": 7643,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 7645,
									"end": 7648,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 7650,
									"end": 7656,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 7658,
									"end": 7662,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 7589,
									"end": 7624,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 7589,
									"end": 7624,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7589,
									"end": 7624,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7589,
									"end": 7663,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7589,
									"end": 7663,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7589,
									"end": 7663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7589,
									"end": 7663,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 7589,
									"end": 7663,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7267,
									"end": 7688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7245,
									"end": 7688,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 7245,
									"end": 7688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7004,
									"end": 7694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7004,
									"end": 7694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7004,
									"end": 7694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7004,
									"end": 7694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7004,
									"end": 7694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7004,
									"end": 7694,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 6425,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 5144,
									"end": 6425,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5279,
									"end": 5285,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5279,
									"end": 5292,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5265,
									"end": 5268,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5265,
									"end": 5275,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5265,
									"end": 5292,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5378,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 5261,
									"end": 5378,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5341,
									"end": 5344,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5341,
									"end": 5351,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5353,
									"end": 5359,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5353,
									"end": 5366,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "PUSH",
									"source": 1,
									"value": "5B05999100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 5315,
									"end": 5367,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5378,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 5261,
									"end": 5378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5388,
									"end": 5404,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5407,
									"end": 5419,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 5407,
									"end": 5417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 5407,
									"end": 5417,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5407,
									"end": 5417,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 5407,
									"end": 5419,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5407,
									"end": 5419,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 5407,
									"end": 5419,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5407,
									"end": 5419,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 5407,
									"end": 5419,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5388,
									"end": 5419,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5388,
									"end": 5419,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5435,
									"end": 5444,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5454,
									"end": 5457,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5454,
									"end": 5464,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5450,
									"end": 5451,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5450,
									"end": 5464,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5485,
									"end": 5495,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5498,
									"end": 5523,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 5521,
									"end": 5522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5498,
									"end": 5501,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5498,
									"end": 5520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 5498,
									"end": 5520,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5498,
									"end": 5520,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 5498,
									"end": 5520,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5498,
									"end": 5523,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5498,
									"end": 5523,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5498,
									"end": 5523,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5498,
									"end": 5523,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 5498,
									"end": 5523,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5498,
									"end": 5523,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 5498,
									"end": 5523,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5485,
									"end": 5523,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5485,
									"end": 5523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5537,
									"end": 5550,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5553,
									"end": 5581,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 5579,
									"end": 5580,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5553,
									"end": 5559,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5553,
									"end": 5578,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 5553,
									"end": 5578,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5553,
									"end": 5578,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 5553,
									"end": 5578,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5553,
									"end": 5581,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5553,
									"end": 5581,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5553,
									"end": 5581,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5553,
									"end": 5581,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 5553,
									"end": 5581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5553,
									"end": 5581,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 5553,
									"end": 5581,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5537,
									"end": 5581,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5537,
									"end": 5581,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5616,
									"end": 5617,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5600,
									"end": 5618,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5600,
									"end": 5618,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5600,
									"end": 5604,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 5600,
									"end": 5618,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5600,
									"end": 5618,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5600,
									"end": 5618,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 5596,
									"end": 6016,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 5596,
									"end": 6016,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5638,
									"end": 5657,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5660,
									"end": 5669,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5670,
									"end": 5672,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5674,
									"end": 5678,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 5638,
									"end": 5679,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5638,
									"end": 5679,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5715,
									"end": 5720,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5701,
									"end": 5712,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5701,
									"end": 5720,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5697,
									"end": 5826,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5697,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 5697,
									"end": 5826,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5778,
									"end": 5782,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 5784,
									"end": 5795,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5797,
									"end": 5802,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5804,
									"end": 5806,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "PUSH",
									"source": 1,
									"value": "3DEE4C500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 5751,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 5697,
									"end": 5826,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 5697,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5978,
									"end": 5983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5964,
									"end": 5975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5964,
									"end": 5983,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5951,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5952,
									"end": 5954,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5956,
									"end": 5960,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5620,
									"end": 6016,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5596,
									"end": 6016,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 5596,
									"end": 6016,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6048,
									"end": 6049,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6034,
									"end": 6050,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6034,
									"end": 6050,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6034,
									"end": 6036,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 6034,
									"end": 6050,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6034,
									"end": 6050,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6034,
									"end": 6050,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 6030,
									"end": 6111,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 6030,
									"end": 6111,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6091,
									"end": 6096,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6079,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6080,
									"end": 6082,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6084,
									"end": 6086,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 6070,
									"end": 6096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6030,
									"end": 6111,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 6030,
									"end": 6111,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5471,
									"end": 6121,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5471,
									"end": 6121,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5466,
									"end": 5469,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5466,
									"end": 5469,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5466,
									"end": 5469,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5466,
									"end": 5469,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5466,
									"end": 5469,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6149,
									"end": 6150,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6135,
									"end": 6138,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6135,
									"end": 6145,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6135,
									"end": 6150,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6166,
									"end": 6176,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6179,
									"end": 6204,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 6202,
									"end": 6203,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6179,
									"end": 6182,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6201,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6179,
									"end": 6201,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6179,
									"end": 6201,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6201,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6204,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6204,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6204,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6179,
									"end": 6204,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6204,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 6179,
									"end": 6204,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6166,
									"end": 6204,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6166,
									"end": 6204,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6218,
									"end": 6231,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6234,
									"end": 6262,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 6260,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6234,
									"end": 6240,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6234,
									"end": 6259,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6234,
									"end": 6259,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6234,
									"end": 6259,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6234,
									"end": 6259,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6234,
									"end": 6262,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6234,
									"end": 6262,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6234,
									"end": 6262,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6234,
									"end": 6262,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6234,
									"end": 6262,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6234,
									"end": 6262,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 6234,
									"end": 6262,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6218,
									"end": 6262,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6218,
									"end": 6262,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6312,
									"end": 6314,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6306,
									"end": 6310,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6304,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH",
									"source": 1,
									"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
								},
								{
									"begin": 6316,
									"end": 6318,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6320,
									"end": 6325,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 6281,
									"end": 6326,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 6152,
									"end": 6337,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6152,
									"end": 6337,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6392,
									"end": 6394,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6390,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6376,
									"end": 6384,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH",
									"source": 1,
									"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
								},
								{
									"begin": 6396,
									"end": 6399,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6401,
									"end": 6407,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 6362,
									"end": 6408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5251,
									"end": 6425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 6425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 6425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 6425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 6425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 6425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4204,
									"end": 4401,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 4204,
									"end": 4401,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4290,
									"end": 4301,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4378,
									"end": 4382,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4373,
									"end": 4376,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4369,
									"end": 4383,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 4362,
									"end": 4366,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4357,
									"end": 4360,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4353,
									"end": 4367,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4349,
									"end": 4384,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4343,
									"end": 4385,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4336,
									"end": 4385,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4336,
									"end": 4385,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4204,
									"end": 4401,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 4204,
									"end": 4401,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4204,
									"end": 4401,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4204,
									"end": 4401,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4204,
									"end": 4401,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13984,
									"end": 13985,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13967,
									"end": 13969,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 13967,
									"end": 13981,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13967,
									"end": 13981,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 13967,
									"end": 13981,
									"name": "EXTCODESIZE",
									"source": 1
								},
								{
									"begin": 13967,
									"end": 13985,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 13963,
									"end": 14729,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 13963,
									"end": 14729,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 13963,
									"end": 14729,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 14022,
									"end": 14024,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14043,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 14005,
									"end": 14043,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14043,
									"name": "PUSH",
									"source": 1,
									"value": "F23A6E61"
								},
								{
									"begin": 14044,
									"end": 14052,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 14054,
									"end": 14058,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 14060,
									"end": 14062,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 14064,
									"end": 14069,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 14071,
									"end": 14075,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFF"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 14005,
									"end": 14076,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "GAS",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "CALL",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 14005,
									"end": 14076,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "RETURNDATACOPY",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14377,
									"end": 14378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 14360,
									"end": 14366,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14360,
									"end": 14373,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14360,
									"end": 14378,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 14356,
									"end": 14705,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 14356,
									"end": 14705,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 14487,
									"end": 14489,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "PUSH",
									"source": 1,
									"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 14464,
									"end": 14490,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 14356,
									"end": 14705,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 14356,
									"end": 14705,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14657,
									"end": 14663,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14651,
									"end": 14664,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14642,
									"end": 14648,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14638,
									"end": 14640,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14634,
									"end": 14649,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14627,
									"end": 14665,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14137,
									"end": 14180,
									"name": "PUSH",
									"source": 1,
									"value": "F23A6E61"
								},
								{
									"begin": 14137,
									"end": 14180,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 14137,
									"end": 14180,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 14125,
									"end": 14180,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 14125,
									"end": 14180,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 14125,
									"end": 14180,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 14125,
									"end": 14133,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14125,
									"end": 14180,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 14125,
									"end": 14180,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 14125,
									"end": 14180,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 14125,
									"end": 14180,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 14121,
									"end": 14295,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 14121,
									"end": 14295,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 14273,
									"end": 14275,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "PUSH",
									"source": 1,
									"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 14250,
									"end": 14276,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 14121,
									"end": 14295,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 14121,
									"end": 14295,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14077,
									"end": 14309,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13963,
									"end": 14729,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 13963,
									"end": 14729,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13761,
									"end": 14735,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15171,
									"end": 15172,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 15154,
									"end": 15156,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 15154,
									"end": 15168,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15154,
									"end": 15168,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 15154,
									"end": 15168,
									"name": "EXTCODESIZE",
									"source": 1
								},
								{
									"begin": 15154,
									"end": 15172,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 15150,
									"end": 15958,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 15150,
									"end": 15958,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 15150,
									"end": 15958,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 15209,
									"end": 15211,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15235,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15192,
									"end": 15235,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15235,
									"name": "PUSH",
									"source": 1,
									"value": "BC197C81"
								},
								{
									"begin": 15236,
									"end": 15244,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 15246,
									"end": 15250,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 15252,
									"end": 15255,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 15257,
									"end": 15263,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 15265,
									"end": 15269,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFF"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 15192,
									"end": 15270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "GAS",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "CALL",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 15192,
									"end": 15270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "RETURNDATACOPY",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15606,
									"end": 15607,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 15589,
									"end": 15595,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15589,
									"end": 15602,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15589,
									"end": 15607,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 15585,
									"end": 15934,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 15585,
									"end": 15934,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 15716,
									"end": 15718,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "PUSH",
									"source": 1,
									"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 15693,
									"end": 15719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 15585,
									"end": 15934,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 15585,
									"end": 15934,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15886,
									"end": 15892,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 15880,
									"end": 15893,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15871,
									"end": 15877,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15867,
									"end": 15869,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 15863,
									"end": 15878,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15856,
									"end": 15894,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15361,
									"end": 15409,
									"name": "PUSH",
									"source": 1,
									"value": "BC197C81"
								},
								{
									"begin": 15361,
									"end": 15409,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 15361,
									"end": 15409,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 15349,
									"end": 15409,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15349,
									"end": 15409,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 15349,
									"end": 15409,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 15349,
									"end": 15357,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15349,
									"end": 15409,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15349,
									"end": 15409,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 15349,
									"end": 15409,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 15349,
									"end": 15409,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 15345,
									"end": 15524,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 15345,
									"end": 15524,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 15502,
									"end": 15504,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "PUSH",
									"source": 1,
									"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 15479,
									"end": 15505,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 15345,
									"end": 15524,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 15345,
									"end": 15524,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15271,
									"end": 15538,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15150,
									"end": 15958,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 15150,
									"end": 15958,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14923,
									"end": 15964,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "149"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 12,
									"value": "149"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "150"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "151"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 12,
									"value": "151"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 12,
									"value": "150"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "156"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 12,
									"value": "156"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "157"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 12,
									"value": "157"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "161"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "162"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "163"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 12,
									"value": "163"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 12,
									"value": "162"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 12,
									"value": "161"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "166"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 12,
									"value": "166"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "167"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "168"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 12,
									"value": "168"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 12,
									"value": "167"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "171"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 12,
									"value": "171"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "172"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 12,
									"value": "172"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 12,
									"value": "174"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "176"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "177"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 12,
									"value": "177"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "174"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 12,
									"value": "176"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "179"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "180"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 12,
									"value": "180"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "181"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 12,
									"value": "181"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "182"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 12,
									"value": "182"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "183"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "184"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 12,
									"value": "184"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 12,
									"value": "183"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 12,
									"value": "179"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "187"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 12,
									"value": "187"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "189"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 12,
									"value": "189"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "191"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 12,
									"value": "191"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "192"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "193"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 12,
									"value": "193"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 12,
									"value": "192"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "194"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 12,
									"value": "194"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "195"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 12,
									"value": "195"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "197"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "198"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 12,
									"value": "198"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "199"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 12,
									"value": "199"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "196"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 12,
									"value": "197"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "200"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 12,
									"value": "200"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 12,
									"value": "201"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "203"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "201"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 12,
									"value": "203"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "204"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "205"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 12,
									"value": "205"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 12,
									"value": "204"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 12,
									"value": "196"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "208"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 12,
									"value": "208"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "210"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 12,
									"value": "210"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "212"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 12,
									"value": "212"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5820,
									"end": 5938,
									"name": "tag",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 5820,
									"end": 5938,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5907,
									"end": 5931,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "214"
								},
								{
									"begin": 5925,
									"end": 5930,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5907,
									"end": 5931,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 5907,
									"end": 5931,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5907,
									"end": 5931,
									"name": "tag",
									"source": 12,
									"value": "214"
								},
								{
									"begin": 5907,
									"end": 5931,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5902,
									"end": 5905,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5895,
									"end": 5932,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5820,
									"end": 5938,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5820,
									"end": 5938,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5820,
									"end": 5938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5944,
									"end": 6276,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 5944,
									"end": 6276,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6065,
									"end": 6069,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6103,
									"end": 6105,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 6092,
									"end": 6101,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6088,
									"end": 6106,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6080,
									"end": 6106,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6080,
									"end": 6106,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6116,
									"end": 6187,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "216"
								},
								{
									"begin": 6184,
									"end": 6185,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6173,
									"end": 6182,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6169,
									"end": 6186,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6160,
									"end": 6166,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6116,
									"end": 6187,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 6116,
									"end": 6187,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6116,
									"end": 6187,
									"name": "tag",
									"source": 12,
									"value": "216"
								},
								{
									"begin": 6116,
									"end": 6187,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6197,
									"end": 6269,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "217"
								},
								{
									"begin": 6265,
									"end": 6267,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6254,
									"end": 6263,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6250,
									"end": 6268,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6241,
									"end": 6247,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6197,
									"end": 6269,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 6197,
									"end": 6269,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6197,
									"end": 6269,
									"name": "tag",
									"source": 12,
									"value": "217"
								},
								{
									"begin": 6197,
									"end": 6269,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5944,
									"end": 6276,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 5944,
									"end": 6276,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5944,
									"end": 6276,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5944,
									"end": 6276,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5944,
									"end": 6276,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5944,
									"end": 6276,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6282,
									"end": 6835,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 6282,
									"end": 6835,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6459,
									"end": 6463,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6497,
									"end": 6500,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 6486,
									"end": 6495,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6482,
									"end": 6501,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6474,
									"end": 6501,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6474,
									"end": 6501,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6511,
									"end": 6582,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "219"
								},
								{
									"begin": 6579,
									"end": 6580,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6568,
									"end": 6577,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6564,
									"end": 6581,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6555,
									"end": 6561,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 6511,
									"end": 6582,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 6511,
									"end": 6582,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6511,
									"end": 6582,
									"name": "tag",
									"source": 12,
									"value": "219"
								},
								{
									"begin": 6511,
									"end": 6582,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6592,
									"end": 6664,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "220"
								},
								{
									"begin": 6660,
									"end": 6662,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6649,
									"end": 6658,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6645,
									"end": 6663,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6636,
									"end": 6642,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 6592,
									"end": 6664,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 6592,
									"end": 6664,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6592,
									"end": 6664,
									"name": "tag",
									"source": 12,
									"value": "220"
								},
								{
									"begin": 6592,
									"end": 6664,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6674,
									"end": 6746,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "221"
								},
								{
									"begin": 6742,
									"end": 6744,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 6731,
									"end": 6740,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6727,
									"end": 6745,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6718,
									"end": 6724,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6674,
									"end": 6746,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 6674,
									"end": 6746,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6674,
									"end": 6746,
									"name": "tag",
									"source": 12,
									"value": "221"
								},
								{
									"begin": 6674,
									"end": 6746,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6756,
									"end": 6828,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "222"
								},
								{
									"begin": 6824,
									"end": 6826,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 6813,
									"end": 6822,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6809,
									"end": 6827,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6800,
									"end": 6806,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6756,
									"end": 6828,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 6756,
									"end": 6828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6756,
									"end": 6828,
									"name": "tag",
									"source": 12,
									"value": "222"
								},
								{
									"begin": 6756,
									"end": 6828,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6282,
									"end": 6835,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 6282,
									"end": 6835,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 6282,
									"end": 6835,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6282,
									"end": 6835,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6282,
									"end": 6835,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6282,
									"end": 6835,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6282,
									"end": 6835,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6282,
									"end": 6835,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6841,
									"end": 7021,
									"name": "tag",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 6841,
									"end": 7021,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6889,
									"end": 6966,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6886,
									"end": 6887,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6879,
									"end": 6967,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 6986,
									"end": 6990,
									"name": "PUSH",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 6983,
									"end": 6984,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 6976,
									"end": 6991,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 7010,
									"end": 7014,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 7007,
									"end": 7008,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7000,
									"end": 7015,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 7027,
									"end": 7218,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 7027,
									"end": 7218,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7067,
									"end": 7070,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7086,
									"end": 7106,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "225"
								},
								{
									"begin": 7104,
									"end": 7105,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7086,
									"end": 7106,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 7086,
									"end": 7106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7086,
									"end": 7106,
									"name": "tag",
									"source": 12,
									"value": "225"
								},
								{
									"begin": 7086,
									"end": 7106,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7081,
									"end": 7106,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7081,
									"end": 7106,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7120,
									"end": 7140,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "226"
								},
								{
									"begin": 7138,
									"end": 7139,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7120,
									"end": 7140,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 7120,
									"end": 7140,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7120,
									"end": 7140,
									"name": "tag",
									"source": 12,
									"value": "226"
								},
								{
									"begin": 7120,
									"end": 7140,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7115,
									"end": 7140,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7115,
									"end": 7140,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7163,
									"end": 7164,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7160,
									"end": 7161,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7156,
									"end": 7165,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7149,
									"end": 7165,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7149,
									"end": 7165,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7184,
									"end": 7187,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 7181,
									"end": 7182,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7178,
									"end": 7188,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7175,
									"end": 7211,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7175,
									"end": 7211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "227"
								},
								{
									"begin": 7175,
									"end": 7211,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7191,
									"end": 7209,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "228"
								},
								{
									"begin": 7191,
									"end": 7209,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 7191,
									"end": 7209,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7191,
									"end": 7209,
									"name": "tag",
									"source": 12,
									"value": "228"
								},
								{
									"begin": 7191,
									"end": 7209,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7175,
									"end": 7211,
									"name": "tag",
									"source": 12,
									"value": "227"
								},
								{
									"begin": 7175,
									"end": 7211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7027,
									"end": 7218,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7027,
									"end": 7218,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7027,
									"end": 7218,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7027,
									"end": 7218,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7027,
									"end": 7218,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7224,
									"end": 7338,
									"name": "tag",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 7224,
									"end": 7338,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7291,
									"end": 7297,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7325,
									"end": 7330,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7319,
									"end": 7331,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 7309,
									"end": 7331,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7309,
									"end": 7331,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7224,
									"end": 7338,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7224,
									"end": 7338,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7224,
									"end": 7338,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7224,
									"end": 7338,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7344,
									"end": 7528,
									"name": "tag",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 7344,
									"end": 7528,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7443,
									"end": 7454,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7477,
									"end": 7483,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7472,
									"end": 7475,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7465,
									"end": 7484,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 7517,
									"end": 7521,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7512,
									"end": 7515,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7508,
									"end": 7522,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7493,
									"end": 7522,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7493,
									"end": 7522,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7344,
									"end": 7528,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7344,
									"end": 7528,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7344,
									"end": 7528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7344,
									"end": 7528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7344,
									"end": 7528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7534,
									"end": 7666,
									"name": "tag",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 7534,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7601,
									"end": 7605,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7624,
									"end": 7627,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7616,
									"end": 7627,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7616,
									"end": 7627,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7654,
									"end": 7658,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7649,
									"end": 7652,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7645,
									"end": 7659,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7637,
									"end": 7659,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7637,
									"end": 7659,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7534,
									"end": 7666,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7534,
									"end": 7666,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7534,
									"end": 7666,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7534,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7672,
									"end": 7780,
									"name": "tag",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 7672,
									"end": 7780,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7749,
									"end": 7773,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "233"
								},
								{
									"begin": 7767,
									"end": 7772,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7749,
									"end": 7773,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 7749,
									"end": 7773,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7749,
									"end": 7773,
									"name": "tag",
									"source": 12,
									"value": "233"
								},
								{
									"begin": 7749,
									"end": 7773,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7744,
									"end": 7747,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7737,
									"end": 7774,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 7672,
									"end": 7780,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7672,
									"end": 7780,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7672,
									"end": 7780,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7786,
									"end": 7965,
									"name": "tag",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 7786,
									"end": 7965,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7855,
									"end": 7865,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7876,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "235"
								},
								{
									"begin": 7918,
									"end": 7921,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7910,
									"end": 7916,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7876,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 7876,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7876,
									"end": 7922,
									"name": "tag",
									"source": 12,
									"value": "235"
								},
								{
									"begin": 7876,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7954,
									"end": 7958,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7949,
									"end": 7952,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7945,
									"end": 7959,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7931,
									"end": 7959,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7931,
									"end": 7959,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7786,
									"end": 7965,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7786,
									"end": 7965,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7786,
									"end": 7965,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7786,
									"end": 7965,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7786,
									"end": 7965,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7971,
									"end": 8084,
									"name": "tag",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 7971,
									"end": 8084,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8041,
									"end": 8045,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8073,
									"end": 8077,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8068,
									"end": 8071,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8064,
									"end": 8078,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8056,
									"end": 8078,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8056,
									"end": 8078,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7971,
									"end": 8084,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7971,
									"end": 8084,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7971,
									"end": 8084,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7971,
									"end": 8084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8120,
									"end": 8852,
									"name": "tag",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 8120,
									"end": 8852,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8239,
									"end": 8242,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8268,
									"end": 8322,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "238"
								},
								{
									"begin": 8316,
									"end": 8321,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8268,
									"end": 8322,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 8268,
									"end": 8322,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8268,
									"end": 8322,
									"name": "tag",
									"source": 12,
									"value": "238"
								},
								{
									"begin": 8268,
									"end": 8322,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8338,
									"end": 8424,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "239"
								},
								{
									"begin": 8417,
									"end": 8423,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8412,
									"end": 8415,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8338,
									"end": 8424,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 8338,
									"end": 8424,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8338,
									"end": 8424,
									"name": "tag",
									"source": 12,
									"value": "239"
								},
								{
									"begin": 8338,
									"end": 8424,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8331,
									"end": 8424,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 8331,
									"end": 8424,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8448,
									"end": 8504,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "240"
								},
								{
									"begin": 8498,
									"end": 8503,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8448,
									"end": 8504,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 8448,
									"end": 8504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8448,
									"end": 8504,
									"name": "tag",
									"source": 12,
									"value": "240"
								},
								{
									"begin": 8448,
									"end": 8504,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8527,
									"end": 8534,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 8558,
									"end": 8559,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8543,
									"end": 8827,
									"name": "tag",
									"source": 12,
									"value": "241"
								},
								{
									"begin": 8543,
									"end": 8827,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8568,
									"end": 8574,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8565,
									"end": 8566,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8562,
									"end": 8575,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8543,
									"end": 8827,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8543,
									"end": 8827,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "243"
								},
								{
									"begin": 8543,
									"end": 8827,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8644,
									"end": 8650,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8638,
									"end": 8651,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8671,
									"end": 8734,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "244"
								},
								{
									"begin": 8730,
									"end": 8733,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8715,
									"end": 8728,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8671,
									"end": 8734,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 8671,
									"end": 8734,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8671,
									"end": 8734,
									"name": "tag",
									"source": 12,
									"value": "244"
								},
								{
									"begin": 8671,
									"end": 8734,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8664,
									"end": 8734,
									"name": "SWAP8",
									"source": 12
								},
								{
									"begin": 8664,
									"end": 8734,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8757,
									"end": 8817,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "245"
								},
								{
									"begin": 8810,
									"end": 8816,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8757,
									"end": 8817,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 8757,
									"end": 8817,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8757,
									"end": 8817,
									"name": "tag",
									"source": 12,
									"value": "245"
								},
								{
									"begin": 8757,
									"end": 8817,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8747,
									"end": 8817,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 8747,
									"end": 8817,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8603,
									"end": 8827,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8590,
									"end": 8591,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8587,
									"end": 8588,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8583,
									"end": 8592,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8578,
									"end": 8592,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8578,
									"end": 8592,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8543,
									"end": 8827,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "241"
								},
								{
									"begin": 8543,
									"end": 8827,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8543,
									"end": 8827,
									"name": "tag",
									"source": 12,
									"value": "243"
								},
								{
									"begin": 8543,
									"end": 8827,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8547,
									"end": 8561,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8843,
									"end": 8846,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8836,
									"end": 8846,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 8836,
									"end": 8846,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8244,
									"end": 8852,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8244,
									"end": 8852,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8244,
									"end": 8852,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8120,
									"end": 8852,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 8120,
									"end": 8852,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8120,
									"end": 8852,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8120,
									"end": 8852,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8120,
									"end": 8852,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8858,
									"end": 9492,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 8858,
									"end": 9492,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9079,
									"end": 9083,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9117,
									"end": 9119,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 9106,
									"end": 9115,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9102,
									"end": 9120,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9094,
									"end": 9120,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9094,
									"end": 9120,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9166,
									"end": 9175,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9160,
									"end": 9164,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9156,
									"end": 9176,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 9152,
									"end": 9153,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9141,
									"end": 9150,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9137,
									"end": 9154,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9130,
									"end": 9177,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 9194,
									"end": 9302,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "247"
								},
								{
									"begin": 9297,
									"end": 9301,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9288,
									"end": 9294,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 9194,
									"end": 9302,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 9194,
									"end": 9302,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9194,
									"end": 9302,
									"name": "tag",
									"source": 12,
									"value": "247"
								},
								{
									"begin": 9194,
									"end": 9302,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9186,
									"end": 9302,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9186,
									"end": 9302,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9349,
									"end": 9358,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9343,
									"end": 9347,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9339,
									"end": 9359,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 9334,
									"end": 9336,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 9323,
									"end": 9332,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9319,
									"end": 9337,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9312,
									"end": 9360,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 9377,
									"end": 9485,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "248"
								},
								{
									"begin": 9480,
									"end": 9484,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9471,
									"end": 9477,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 9377,
									"end": 9485,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 9377,
									"end": 9485,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9377,
									"end": 9485,
									"name": "tag",
									"source": 12,
									"value": "248"
								},
								{
									"begin": 9377,
									"end": 9485,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9369,
									"end": 9485,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9369,
									"end": 9485,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8858,
									"end": 9492,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 8858,
									"end": 9492,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 8858,
									"end": 9492,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8858,
									"end": 9492,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8858,
									"end": 9492,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8858,
									"end": 9492,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9498,
									"end": 9596,
									"name": "tag",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 9498,
									"end": 9596,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9549,
									"end": 9555,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9583,
									"end": 9588,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9577,
									"end": 9589,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 9567,
									"end": 9589,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9567,
									"end": 9589,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9498,
									"end": 9596,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9498,
									"end": 9596,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9498,
									"end": 9596,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9498,
									"end": 9596,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9602,
									"end": 9770,
									"name": "tag",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 9602,
									"end": 9770,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9685,
									"end": 9696,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9719,
									"end": 9725,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9714,
									"end": 9717,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9707,
									"end": 9726,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 9759,
									"end": 9763,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 9754,
									"end": 9757,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9750,
									"end": 9764,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9735,
									"end": 9764,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9735,
									"end": 9764,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9602,
									"end": 9770,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 9602,
									"end": 9770,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9602,
									"end": 9770,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9602,
									"end": 9770,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9602,
									"end": 9770,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9776,
									"end": 10022,
									"name": "tag",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 9776,
									"end": 10022,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9857,
									"end": 9858,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9867,
									"end": 9980,
									"name": "tag",
									"source": 12,
									"value": "252"
								},
								{
									"begin": 9867,
									"end": 9980,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9881,
									"end": 9887,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9878,
									"end": 9879,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9875,
									"end": 9888,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 9867,
									"end": 9980,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 9867,
									"end": 9980,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "254"
								},
								{
									"begin": 9867,
									"end": 9980,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 9966,
									"end": 9967,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 9961,
									"end": 9964,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9957,
									"end": 9968,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9951,
									"end": 9969,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 9947,
									"end": 9948,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9942,
									"end": 9945,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 9938,
									"end": 9949,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9931,
									"end": 9970,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 9903,
									"end": 9905,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 9900,
									"end": 9901,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9896,
									"end": 9906,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9891,
									"end": 9906,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9891,
									"end": 9906,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9867,
									"end": 9980,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "252"
								},
								{
									"begin": 9867,
									"end": 9980,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9867,
									"end": 9980,
									"name": "tag",
									"source": 12,
									"value": "254"
								},
								{
									"begin": 9867,
									"end": 9980,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10014,
									"end": 10015,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10005,
									"end": 10011,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 10000,
									"end": 10003,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 9996,
									"end": 10012,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9989,
									"end": 10016,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 9838,
									"end": 10022,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9776,
									"end": 10022,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9776,
									"end": 10022,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9776,
									"end": 10022,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9776,
									"end": 10022,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10028,
									"end": 10130,
									"name": "tag",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 10028,
									"end": 10130,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10069,
									"end": 10075,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10120,
									"end": 10122,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 10116,
									"end": 10123,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 10111,
									"end": 10113,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 10104,
									"end": 10109,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10100,
									"end": 10114,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10096,
									"end": 10124,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 10086,
									"end": 10124,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10086,
									"end": 10124,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10028,
									"end": 10130,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 10028,
									"end": 10130,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10028,
									"end": 10130,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10028,
									"end": 10130,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10136,
									"end": 10509,
									"name": "tag",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 10136,
									"end": 10509,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10222,
									"end": 10225,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10250,
									"end": 10288,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "257"
								},
								{
									"begin": 10282,
									"end": 10287,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10250,
									"end": 10288,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 10250,
									"end": 10288,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10250,
									"end": 10288,
									"name": "tag",
									"source": 12,
									"value": "257"
								},
								{
									"begin": 10250,
									"end": 10288,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10304,
									"end": 10374,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "258"
								},
								{
									"begin": 10367,
									"end": 10373,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 10362,
									"end": 10365,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 10304,
									"end": 10374,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 10304,
									"end": 10374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10304,
									"end": 10374,
									"name": "tag",
									"source": 12,
									"value": "258"
								},
								{
									"begin": 10304,
									"end": 10374,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10297,
									"end": 10374,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 10297,
									"end": 10374,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10383,
									"end": 10448,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "259"
								},
								{
									"begin": 10441,
									"end": 10447,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 10436,
									"end": 10439,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 10429,
									"end": 10433,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 10422,
									"end": 10427,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 10418,
									"end": 10434,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10383,
									"end": 10448,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 10383,
									"end": 10448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10383,
									"end": 10448,
									"name": "tag",
									"source": 12,
									"value": "259"
								},
								{
									"begin": 10383,
									"end": 10448,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10473,
									"end": 10502,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "260"
								},
								{
									"begin": 10495,
									"end": 10501,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 10473,
									"end": 10502,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 10473,
									"end": 10502,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10473,
									"end": 10502,
									"name": "tag",
									"source": 12,
									"value": "260"
								},
								{
									"begin": 10473,
									"end": 10502,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10468,
									"end": 10471,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 10464,
									"end": 10503,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10457,
									"end": 10503,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 10457,
									"end": 10503,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10226,
									"end": 10509,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10136,
									"end": 10509,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 10136,
									"end": 10509,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 10136,
									"end": 10509,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10136,
									"end": 10509,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10136,
									"end": 10509,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10515,
									"end": 11266,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 10515,
									"end": 11266,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10738,
									"end": 10742,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10776,
									"end": 10779,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 10765,
									"end": 10774,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10761,
									"end": 10780,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10753,
									"end": 10780,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10753,
									"end": 10780,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10790,
									"end": 10861,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "262"
								},
								{
									"begin": 10858,
									"end": 10859,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10847,
									"end": 10856,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10843,
									"end": 10860,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10834,
									"end": 10840,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 10790,
									"end": 10861,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 10790,
									"end": 10861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10790,
									"end": 10861,
									"name": "tag",
									"source": 12,
									"value": "262"
								},
								{
									"begin": 10790,
									"end": 10861,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10871,
									"end": 10943,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "263"
								},
								{
									"begin": 10939,
									"end": 10941,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 10928,
									"end": 10937,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10924,
									"end": 10942,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10915,
									"end": 10921,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 10871,
									"end": 10943,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 10871,
									"end": 10943,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10871,
									"end": 10943,
									"name": "tag",
									"source": 12,
									"value": "263"
								},
								{
									"begin": 10871,
									"end": 10943,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10953,
									"end": 11025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "264"
								},
								{
									"begin": 11021,
									"end": 11023,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 11010,
									"end": 11019,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 11006,
									"end": 11024,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10997,
									"end": 11003,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 10953,
									"end": 11025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 10953,
									"end": 11025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10953,
									"end": 11025,
									"name": "tag",
									"source": 12,
									"value": "264"
								},
								{
									"begin": 10953,
									"end": 11025,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11035,
									"end": 11107,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "265"
								},
								{
									"begin": 11103,
									"end": 11105,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 11092,
									"end": 11101,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 11088,
									"end": 11106,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 11079,
									"end": 11085,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 11035,
									"end": 11107,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 11035,
									"end": 11107,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11035,
									"end": 11107,
									"name": "tag",
									"source": 12,
									"value": "265"
								},
								{
									"begin": 11035,
									"end": 11107,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11155,
									"end": 11164,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11149,
									"end": 11153,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11145,
									"end": 11165,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 11139,
									"end": 11142,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 11128,
									"end": 11137,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 11124,
									"end": 11143,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 11117,
									"end": 11166,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 11183,
									"end": 11259,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "266"
								},
								{
									"begin": 11254,
									"end": 11258,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11245,
									"end": 11251,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 11183,
									"end": 11259,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 11183,
									"end": 11259,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11183,
									"end": 11259,
									"name": "tag",
									"source": 12,
									"value": "266"
								},
								{
									"begin": 11183,
									"end": 11259,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11175,
									"end": 11259,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11175,
									"end": 11259,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10515,
									"end": 11266,
									"name": "SWAP7",
									"source": 12
								},
								{
									"begin": 10515,
									"end": 11266,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 10515,
									"end": 11266,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10515,
									"end": 11266,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10515,
									"end": 11266,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10515,
									"end": 11266,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10515,
									"end": 11266,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10515,
									"end": 11266,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10515,
									"end": 11266,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11353,
									"end": 11470,
									"name": "tag",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 11353,
									"end": 11470,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11462,
									"end": 11463,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11459,
									"end": 11460,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 11452,
									"end": 11464,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 11599,
									"end": 11748,
									"name": "tag",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 11599,
									"end": 11748,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11635,
									"end": 11642,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11675,
									"end": 11741,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11668,
									"end": 11673,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 11664,
									"end": 11742,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 11653,
									"end": 11742,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11653,
									"end": 11742,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11599,
									"end": 11748,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 11599,
									"end": 11748,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11599,
									"end": 11748,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11599,
									"end": 11748,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11754,
									"end": 11874,
									"name": "tag",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 11754,
									"end": 11874,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11826,
									"end": 11849,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "272"
								},
								{
									"begin": 11843,
									"end": 11848,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11826,
									"end": 11849,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 11826,
									"end": 11849,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11826,
									"end": 11849,
									"name": "tag",
									"source": 12,
									"value": "272"
								},
								{
									"begin": 11826,
									"end": 11849,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11819,
									"end": 11824,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11816,
									"end": 11850,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 11806,
									"end": 11868,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "273"
								},
								{
									"begin": 11806,
									"end": 11868,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 11864,
									"end": 11865,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11861,
									"end": 11862,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 11854,
									"end": 11866,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 11806,
									"end": 11868,
									"name": "tag",
									"source": 12,
									"value": "273"
								},
								{
									"begin": 11806,
									"end": 11868,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11754,
									"end": 11874,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11754,
									"end": 11874,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11880,
									"end": 12021,
									"name": "tag",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 11880,
									"end": 12021,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11936,
									"end": 11941,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11967,
									"end": 11973,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11961,
									"end": 11974,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 11952,
									"end": 11974,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11952,
									"end": 11974,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11983,
									"end": 12015,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "275"
								},
								{
									"begin": 12009,
									"end": 12014,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11983,
									"end": 12015,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 11983,
									"end": 12015,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11983,
									"end": 12015,
									"name": "tag",
									"source": 12,
									"value": "275"
								},
								{
									"begin": 11983,
									"end": 12015,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11880,
									"end": 12021,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 11880,
									"end": 12021,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 11880,
									"end": 12021,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11880,
									"end": 12021,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11880,
									"end": 12021,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12027,
									"end": 12376,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 12027,
									"end": 12376,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12096,
									"end": 12102,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 12145,
									"end": 12147,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 12133,
									"end": 12142,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 12124,
									"end": 12131,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 12120,
									"end": 12143,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 12116,
									"end": 12148,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 12113,
									"end": 12232,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 12113,
									"end": 12232,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "277"
								},
								{
									"begin": 12113,
									"end": 12232,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 12151,
									"end": 12230,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "278"
								},
								{
									"begin": 12151,
									"end": 12230,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 12151,
									"end": 12230,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12151,
									"end": 12230,
									"name": "tag",
									"source": 12,
									"value": "278"
								},
								{
									"begin": 12151,
									"end": 12230,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12113,
									"end": 12232,
									"name": "tag",
									"source": 12,
									"value": "277"
								},
								{
									"begin": 12113,
									"end": 12232,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12271,
									"end": 12272,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 12296,
									"end": 12359,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "279"
								},
								{
									"begin": 12351,
									"end": 12358,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 12342,
									"end": 12348,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 12331,
									"end": 12340,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 12327,
									"end": 12349,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 12296,
									"end": 12359,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 12296,
									"end": 12359,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12296,
									"end": 12359,
									"name": "tag",
									"source": 12,
									"value": "279"
								},
								{
									"begin": 12296,
									"end": 12359,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12286,
									"end": 12359,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 12286,
									"end": 12359,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12242,
									"end": 12369,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12027,
									"end": 12376,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 12027,
									"end": 12376,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 12027,
									"end": 12376,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12027,
									"end": 12376,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12027,
									"end": 12376,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12382,
									"end": 13435,
									"name": "tag",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 12382,
									"end": 13435,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12705,
									"end": 12709,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 12743,
									"end": 12746,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 12732,
									"end": 12741,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 12728,
									"end": 12747,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 12720,
									"end": 12747,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 12720,
									"end": 12747,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12757,
									"end": 12828,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "281"
								},
								{
									"begin": 12825,
									"end": 12826,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 12814,
									"end": 12823,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 12810,
									"end": 12827,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 12801,
									"end": 12807,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 12757,
									"end": 12828,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 12757,
									"end": 12828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12757,
									"end": 12828,
									"name": "tag",
									"source": 12,
									"value": "281"
								},
								{
									"begin": 12757,
									"end": 12828,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12838,
									"end": 12910,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "282"
								},
								{
									"begin": 12906,
									"end": 12908,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 12895,
									"end": 12904,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 12891,
									"end": 12909,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 12882,
									"end": 12888,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 12838,
									"end": 12910,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 12838,
									"end": 12910,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12838,
									"end": 12910,
									"name": "tag",
									"source": 12,
									"value": "282"
								},
								{
									"begin": 12838,
									"end": 12910,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12957,
									"end": 12966,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 12951,
									"end": 12955,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 12947,
									"end": 12967,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 12942,
									"end": 12944,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 12931,
									"end": 12940,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 12927,
									"end": 12945,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 12920,
									"end": 12968,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 12985,
									"end": 13093,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "283"
								},
								{
									"begin": 13088,
									"end": 13092,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 13079,
									"end": 13085,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 12985,
									"end": 13093,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 12985,
									"end": 13093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12985,
									"end": 13093,
									"name": "tag",
									"source": 12,
									"value": "283"
								},
								{
									"begin": 12985,
									"end": 13093,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12977,
									"end": 13093,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 12977,
									"end": 13093,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 13140,
									"end": 13149,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 13134,
									"end": 13138,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 13130,
									"end": 13150,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 13125,
									"end": 13127,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 13114,
									"end": 13123,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 13110,
									"end": 13128,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 13103,
									"end": 13151,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 13168,
									"end": 13276,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "284"
								},
								{
									"begin": 13271,
									"end": 13275,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 13262,
									"end": 13268,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 13168,
									"end": 13276,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 13168,
									"end": 13276,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 13168,
									"end": 13276,
									"name": "tag",
									"source": 12,
									"value": "284"
								},
								{
									"begin": 13168,
									"end": 13276,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 13160,
									"end": 13276,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 13160,
									"end": 13276,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 13324,
									"end": 13333,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 13318,
									"end": 13322,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 13314,
									"end": 13334,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 13308,
									"end": 13311,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 13297,
									"end": 13306,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 13293,
									"end": 13312,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 13286,
									"end": 13335,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 13352,
									"end": 13428,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "285"
								},
								{
									"begin": 13423,
									"end": 13427,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 13414,
									"end": 13420,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 13352,
									"end": 13428,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 13352,
									"end": 13428,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 13352,
									"end": 13428,
									"name": "tag",
									"source": 12,
									"value": "285"
								},
								{
									"begin": 13352,
									"end": 13428,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 13344,
									"end": 13428,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 13344,
									"end": 13428,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12382,
									"end": 13435,
									"name": "SWAP7",
									"source": 12
								},
								{
									"begin": 12382,
									"end": 13435,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 12382,
									"end": 13435,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12382,
									"end": 13435,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12382,
									"end": 13435,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12382,
									"end": 13435,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12382,
									"end": 13435,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12382,
									"end": 13435,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12382,
									"end": 13435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 130,
									"end": 345,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 130,
									"end": 345,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 130,
									"end": 345,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 345,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 130,
									"end": 345,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 345,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 345,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 130,
									"end": 345,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 345,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a0afe434d9ad0377b4047847bdcc2af6fe13956f49c7645634c99e373f58e7b464736f6c63430008160033",
									".code": [
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH",
											"source": 11,
											"value": "4E1273F4"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH",
											"source": 11,
											"value": "4E1273F4"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH",
											"source": 11,
											"value": "A22CB465"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH",
											"source": 11,
											"value": "E985E9C5"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH",
											"source": 11,
											"value": "F242432A"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH",
											"source": 11,
											"value": "FDD58E"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH",
											"source": 11,
											"value": "E89341C"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH",
											"source": 11,
											"value": "2EB2C2D6"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 345,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 130,
											"end": 345,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2331,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2371,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1486,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1626,
											"name": "PUSH",
											"source": 1,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1666,
											"end": 1677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1642,
											"end": 1678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4225,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4225,
											"end": 4237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4259,
											"end": 4265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4255,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4287,
											"end": 4291,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4270,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4300,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4323,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4408,
											"end": 4412,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4385,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2711,
											"end": 2714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2721,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2700,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2707,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2744,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2874,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2852,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2925,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2913,
											"end": 2914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2913,
											"end": 2932,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3010,
											"end": 3011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3017,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2972,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2953,
											"end": 2969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3260,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3260,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3274,
											"end": 3282,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3284,
											"end": 3292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3241,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3506,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3516,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3731,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3731,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3761,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3776,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3775,
											"end": 3806,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3829,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3921,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3928,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 3934,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3891,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9222,
											"end": 9223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9208,
											"end": 9210,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9278,
											"end": 9279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 9247,
											"end": 9281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9321,
											"end": 9322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9309,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9375,
											"end": 9376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 9346,
											"end": 9378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 9425,
											"end": 9429,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9431,
											"end": 9433,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9438,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9448,
											"end": 9452,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 9398,
											"end": 9453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4689,
											"end": 4700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4765,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4756,
											"end": 4759,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4752,
											"end": 4766,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4290,
											"end": 4301,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4373,
											"end": 4376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4369,
											"end": 4383,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4362,
											"end": 4366,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4357,
											"end": 4360,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4367,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4349,
											"end": 4384,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4343,
											"end": 4385,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13395,
											"end": 13396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13375,
											"end": 13383,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "CED3E10000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 13420,
											"end": 13454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13512,
											"end": 13520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13493,
											"end": 13498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13500,
											"end": 13508,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13557,
											"end": 13565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13550,
											"end": 13555,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13567,
											"end": 13575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 13535,
											"end": 13576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8287,
											"end": 8288,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 8312,
											"end": 8346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8386,
											"end": 8387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 8374,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8440,
											"end": 8441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 8411,
											"end": 8443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8464,
											"end": 8484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 8532,
											"end": 8534,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8536,
											"end": 8541,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 8513,
											"end": 8542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8579,
											"end": 8583,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8585,
											"end": 8587,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8589,
											"end": 8592,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8594,
											"end": 8600,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8602,
											"end": 8606,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 8552,
											"end": 8607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7213,
											"end": 7217,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7205,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7263,
											"end": 7264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7251,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7300,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 7300,
											"end": 7312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7330,
											"end": 7333,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7345,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7381,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 7514,
											"end": 7522,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7532,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7534,
											"end": 7536,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7538,
											"end": 7543,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7545,
											"end": 7549,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 7483,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7625,
											"end": 7633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7635,
											"end": 7639,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7641,
											"end": 7643,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7648,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7650,
											"end": 7656,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7662,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7589,
											"end": 7663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7267,
											"end": 7688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16188,
											"end": 16211,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16213,
											"end": 16236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16374,
											"end": 16378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16358,
											"end": 16379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16358,
											"end": 16379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16444,
											"end": 16445,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16436,
											"end": 16442,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16582,
											"end": 16590,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16575,
											"end": 16579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16567,
											"end": 16573,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16704,
											"end": 16708,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16696,
											"end": 16702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16682,
											"end": 16709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16682,
											"end": 16709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16737,
											"end": 16738,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16729,
											"end": 16735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16778,
											"end": 16786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16771,
											"end": 16775,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16763,
											"end": 16769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16911,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16899,
											"end": 16905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16889,
											"end": 16893,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5292,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5341,
											"end": 5344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5341,
											"end": 5351,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5366,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5315,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 5407,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5407,
											"end": 5419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5435,
											"end": 5444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5457,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5464,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5559,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5604,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5672,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5678,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5782,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5784,
											"end": 5795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5797,
											"end": 5802,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "3DEE4C500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5751,
											"end": 5807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5978,
											"end": 5983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5952,
											"end": 5954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5960,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 6016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6036,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6082,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 6070,
											"end": 6096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6135,
											"end": 6138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6150,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6176,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6202,
											"end": 6203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6182,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 6260,
											"end": 6261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6240,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6310,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6296,
											"end": 6304,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6320,
											"end": 6325,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6281,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6394,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6390,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6396,
											"end": 6399,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6401,
											"end": 6407,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 6362,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13984,
											"end": 13985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13967,
											"end": 13969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 13985,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14022,
											"end": 14024,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 14044,
											"end": 14052,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14054,
											"end": 14058,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14060,
											"end": 14062,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14064,
											"end": 14069,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14377,
											"end": 14378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14360,
											"end": 14366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14360,
											"end": 14373,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14487,
											"end": 14489,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 14464,
											"end": 14490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14657,
											"end": 14663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14651,
											"end": 14664,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14642,
											"end": 14648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14638,
											"end": 14640,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14634,
											"end": 14649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14627,
											"end": 14665,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14273,
											"end": 14275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 14250,
											"end": 14276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14077,
											"end": 14309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15171,
											"end": 15172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15154,
											"end": 15156,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15172,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15209,
											"end": 15211,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 15236,
											"end": 15244,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15246,
											"end": 15250,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15252,
											"end": 15255,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15257,
											"end": 15263,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15265,
											"end": 15269,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15606,
											"end": 15607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15589,
											"end": 15595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15589,
											"end": 15602,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15589,
											"end": 15607,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15716,
											"end": 15718,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 15693,
											"end": 15719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15886,
											"end": 15892,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15880,
											"end": 15893,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15871,
											"end": 15877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15867,
											"end": 15869,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15863,
											"end": 15878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15856,
											"end": 15894,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15502,
											"end": 15504,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 15479,
											"end": 15505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15271,
											"end": 15538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 2256,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2184,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 2409,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 2566,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 2711,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2786,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 2963,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2882,
											"end": 2991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 3135,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2997,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3300,
											"end": 3307,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3324,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 3327,
											"end": 3406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3639,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3628,
											"end": 3640,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3737,
											"end": 3748,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3777,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3766,
											"end": 3769,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3811,
											"end": 3815,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 3816,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 3910,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3933,
											"end": 3939,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3930,
											"end": 3931,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3927,
											"end": 3940,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4018,
											"end": 4019,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4013,
											"end": 4016,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4009,
											"end": 4020,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4003,
											"end": 4021,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3999,
											"end": 4000,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4022,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3955,
											"end": 3957,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3953,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3948,
											"end": 3958,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 3958,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 3958,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4063,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4052,
											"end": 4055,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4048,
											"end": 4064,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4041,
											"end": 4068,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3890,
											"end": 4074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 4074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4121,
											"end": 4127,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4174,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4168,
											"end": 4175,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4165,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4156,
											"end": 4161,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4152,
											"end": 4166,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4148,
											"end": 4176,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4138,
											"end": 4176,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4138,
											"end": 4176,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4080,
											"end": 4182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4279,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 4337,
											"end": 4342,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 4304,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 4359,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4352,
											"end": 4430,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4352,
											"end": 4430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 4497,
											"end": 4503,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4492,
											"end": 4495,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4483,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4474,
											"end": 4490,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 4439,
											"end": 4504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 4529,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4524,
											"end": 4527,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4520,
											"end": 4559,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4513,
											"end": 4559,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4513,
											"end": 4559,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4280,
											"end": 4565,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4188,
											"end": 4565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4684,
											"end": 4688,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4724,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4707,
											"end": 4725,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4699,
											"end": 4725,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4699,
											"end": 4725,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4771,
											"end": 4780,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4765,
											"end": 4769,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4761,
											"end": 4781,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4757,
											"end": 4758,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4755,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4742,
											"end": 4759,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4735,
											"end": 4782,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 4872,
											"end": 4876,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4863,
											"end": 4869,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 4799,
											"end": 4877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4791,
											"end": 4877,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4791,
											"end": 4877,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4571,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5007,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 4890,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4999,
											"end": 5000,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4996,
											"end": 4997,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5001,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5013,
											"end": 5193,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 5013,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5061,
											"end": 5138,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5058,
											"end": 5059,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5051,
											"end": 5139,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5158,
											"end": 5162,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 5155,
											"end": 5156,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5148,
											"end": 5163,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5182,
											"end": 5186,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5179,
											"end": 5180,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5187,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 5304,
											"end": 5308,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 5282,
											"end": 5309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5274,
											"end": 5280,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5310,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5412,
											"end": 5418,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5400,
											"end": 5410,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5397,
											"end": 5419,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5376,
											"end": 5394,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5364,
											"end": 5374,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5361,
											"end": 5395,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5358,
											"end": 5420,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 5423,
											"end": 5441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5463,
											"end": 5473,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5459,
											"end": 5461,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5452,
											"end": 5474,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5199,
											"end": 5480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5520,
											"end": 5526,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 5547,
											"end": 5567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5537,
											"end": 5567,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5537,
											"end": 5567,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 5604,
											"end": 5608,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5596,
											"end": 5602,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 5576,
											"end": 5609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5486,
											"end": 5615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5698,
											"end": 5702,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 5806,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5780,
											"end": 5786,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 5810,
											"end": 5828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5860,
											"end": 5864,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5852,
											"end": 5858,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5848,
											"end": 5865,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5865,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5865,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5920,
											"end": 5924,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5918,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5910,
											"end": 5925,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5902,
											"end": 5925,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5902,
											"end": 5925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5621,
											"end": 5932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5938,
											"end": 6055,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 5938,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6047,
											"end": 6048,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6045,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6037,
											"end": 6049,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6174,
											"end": 6179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 6272,
											"end": 6278,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 6215,
											"end": 6279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 6199,
											"end": 6280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6190,
											"end": 6280,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6190,
											"end": 6280,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6300,
											"end": 6305,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6329,
											"end": 6335,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6322,
											"end": 6327,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6315,
											"end": 6336,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6363,
											"end": 6367,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6356,
											"end": 6361,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6352,
											"end": 6368,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6345,
											"end": 6368,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6345,
											"end": 6368,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6416,
											"end": 6420,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6408,
											"end": 6414,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6396,
											"end": 6402,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6422,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6445,
											"end": 6448,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6437,
											"end": 6443,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6434,
											"end": 6449,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 6464,
											"end": 6543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6579,
											"end": 6585,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6602,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6594,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6588,
											"end": 6603,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6671,
											"end": 6674,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 6733,
											"end": 6736,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6721,
											"end": 6731,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 6700,
											"end": 6737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6695,
											"end": 6698,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6688,
											"end": 6738,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6767,
											"end": 6771,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6762,
											"end": 6765,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6758,
											"end": 6772,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6751,
											"end": 6772,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6751,
											"end": 6772,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6638,
											"end": 6782,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6622,
											"end": 6626,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6617,
											"end": 6620,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6606,
											"end": 6627,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6606,
											"end": 6627,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6566,
											"end": 6587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6180,
											"end": 6788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6180,
											"end": 6788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6078,
											"end": 6788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6882,
											"end": 6887,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6931,
											"end": 6934,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6924,
											"end": 6928,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6916,
											"end": 6922,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6912,
											"end": 6929,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6908,
											"end": 6935,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 6939,
											"end": 7018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 7062,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7043,
											"end": 7063,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 7171,
											"end": 7174,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7163,
											"end": 7169,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7160,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7148,
											"end": 7154,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7144,
											"end": 7161,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 7081,
											"end": 7175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7072,
											"end": 7175,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7072,
											"end": 7175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6888,
											"end": 7181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 7181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7187,
											"end": 7304,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 7187,
											"end": 7304,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7296,
											"end": 7297,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7293,
											"end": 7294,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7286,
											"end": 7298,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7371,
											"end": 7375,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7453,
											"end": 7459,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 7483,
											"end": 7501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 7543,
											"end": 7549,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 7521,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7513,
											"end": 7550,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7513,
											"end": 7550,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7605,
											"end": 7609,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7599,
											"end": 7603,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7595,
											"end": 7610,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7587,
											"end": 7610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7587,
											"end": 7610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7310,
											"end": 7617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7715,
											"end": 7718,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7710,
											"end": 7713,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7697,
											"end": 7727,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 7761,
											"end": 7762,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7752,
											"end": 7758,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7747,
											"end": 7750,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7743,
											"end": 7759,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7736,
											"end": 7763,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7623,
											"end": 7769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7852,
											"end": 7857,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 7893,
											"end": 7941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 7877,
											"end": 7942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7868,
											"end": 7942,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7868,
											"end": 7942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7965,
											"end": 7971,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7958,
											"end": 7963,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7951,
											"end": 7972,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8003,
											"end": 8007,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7996,
											"end": 8001,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7992,
											"end": 8008,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8041,
											"end": 8044,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8032,
											"end": 8038,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8027,
											"end": 8030,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8023,
											"end": 8039,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8020,
											"end": 8045,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 8048,
											"end": 8127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 8185,
											"end": 8191,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8180,
											"end": 8183,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8175,
											"end": 8178,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 8138,
											"end": 8192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7858,
											"end": 8198,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7775,
											"end": 8198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8272,
											"end": 8277,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8321,
											"end": 8324,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8314,
											"end": 8318,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8306,
											"end": 8312,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8302,
											"end": 8319,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8298,
											"end": 8325,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 8329,
											"end": 8408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8433,
											"end": 8453,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 8545,
											"end": 8548,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8537,
											"end": 8543,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8530,
											"end": 8534,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8522,
											"end": 8528,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8518,
											"end": 8535,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 8471,
											"end": 8549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8462,
											"end": 8549,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8462,
											"end": 8549,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8278,
											"end": 8555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8217,
											"end": 8555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8715,
											"end": 8721,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8723,
											"end": 8729,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8731,
											"end": 8737,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8739,
											"end": 8745,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8747,
											"end": 8753,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8796,
											"end": 8799,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 8784,
											"end": 8793,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8775,
											"end": 8782,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8771,
											"end": 8794,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8767,
											"end": 8800,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8764,
											"end": 8884,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8764,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 8764,
											"end": 8884,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8803,
											"end": 8882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 8803,
											"end": 8882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 8803,
											"end": 8882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8803,
											"end": 8882,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 8803,
											"end": 8882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8764,
											"end": 8884,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 8764,
											"end": 8884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8923,
											"end": 8924,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8948,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 8993,
											"end": 9000,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8984,
											"end": 8990,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8973,
											"end": 8982,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 8969,
											"end": 8991,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8948,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 8948,
											"end": 9001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8948,
											"end": 9001,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 8948,
											"end": 9001,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 9001,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 9001,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8894,
											"end": 9011,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9050,
											"end": 9052,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9076,
											"end": 9129,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 9121,
											"end": 9128,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9112,
											"end": 9118,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9101,
											"end": 9110,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 9097,
											"end": 9119,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9129,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 9076,
											"end": 9129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9129,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 9076,
											"end": 9129,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9066,
											"end": 9129,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9066,
											"end": 9129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9021,
											"end": 9139,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9206,
											"end": 9208,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9195,
											"end": 9204,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9191,
											"end": 9209,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9178,
											"end": 9210,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9237,
											"end": 9255,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9229,
											"end": 9235,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9226,
											"end": 9256,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9223,
											"end": 9340,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9223,
											"end": 9340,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 9223,
											"end": 9340,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9259,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 9259,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 9259,
											"end": 9338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9259,
											"end": 9338,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 9259,
											"end": 9338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9223,
											"end": 9340,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 9223,
											"end": 9340,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9364,
											"end": 9442,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 9434,
											"end": 9441,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9425,
											"end": 9431,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9423,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9432,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9364,
											"end": 9442,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 9364,
											"end": 9442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9364,
											"end": 9442,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 9364,
											"end": 9442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9354,
											"end": 9442,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9354,
											"end": 9442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9149,
											"end": 9452,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9519,
											"end": 9521,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9508,
											"end": 9517,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9504,
											"end": 9522,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9491,
											"end": 9523,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9550,
											"end": 9568,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9542,
											"end": 9548,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9539,
											"end": 9569,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9536,
											"end": 9653,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9536,
											"end": 9653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 9536,
											"end": 9653,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9572,
											"end": 9651,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 9572,
											"end": 9651,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 9572,
											"end": 9651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9572,
											"end": 9651,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 9572,
											"end": 9651,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9536,
											"end": 9653,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 9536,
											"end": 9653,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9677,
											"end": 9755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 9747,
											"end": 9754,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9738,
											"end": 9744,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9727,
											"end": 9736,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 9723,
											"end": 9745,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9677,
											"end": 9755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 9677,
											"end": 9755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9677,
											"end": 9755,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 9677,
											"end": 9755,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9667,
											"end": 9755,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9667,
											"end": 9755,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9462,
											"end": 9765,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9832,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 9821,
											"end": 9830,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9817,
											"end": 9836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9804,
											"end": 9837,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9864,
											"end": 9882,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9856,
											"end": 9862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9853,
											"end": 9883,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9850,
											"end": 9967,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9850,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 9850,
											"end": 9967,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9886,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 9886,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 9886,
											"end": 9965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9886,
											"end": 9965,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 9886,
											"end": 9965,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9850,
											"end": 9967,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 9850,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 10045,
											"end": 10052,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10036,
											"end": 10042,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10025,
											"end": 10034,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 10021,
											"end": 10043,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 9991,
											"end": 10053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10053,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 9991,
											"end": 10053,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9981,
											"end": 10053,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9981,
											"end": 10053,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9775,
											"end": 10063,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 10070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10076,
											"end": 10387,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 10076,
											"end": 10387,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10153,
											"end": 10157,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10243,
											"end": 10261,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10235,
											"end": 10241,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10232,
											"end": 10262,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10229,
											"end": 10285,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10229,
											"end": 10285,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 10229,
											"end": 10285,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10265,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 10265,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 10265,
											"end": 10283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10265,
											"end": 10283,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 10265,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10229,
											"end": 10285,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 10229,
											"end": 10285,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10315,
											"end": 10319,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10307,
											"end": 10313,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10303,
											"end": 10320,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10375,
											"end": 10379,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10369,
											"end": 10373,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10365,
											"end": 10380,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10357,
											"end": 10380,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10357,
											"end": 10380,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10076,
											"end": 10387,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10076,
											"end": 10387,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10076,
											"end": 10387,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10076,
											"end": 10387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10410,
											"end": 11120,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 10410,
											"end": 11120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10506,
											"end": 10511,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10531,
											"end": 10612,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 10547,
											"end": 10611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 10604,
											"end": 10610,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10547,
											"end": 10611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 10547,
											"end": 10611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10547,
											"end": 10611,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 10547,
											"end": 10611,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10531,
											"end": 10612,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 10531,
											"end": 10612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10531,
											"end": 10612,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 10531,
											"end": 10612,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10522,
											"end": 10612,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10522,
											"end": 10612,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10632,
											"end": 10637,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10661,
											"end": 10667,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10654,
											"end": 10659,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10647,
											"end": 10668,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10695,
											"end": 10699,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10688,
											"end": 10693,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10684,
											"end": 10700,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10677,
											"end": 10700,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10677,
											"end": 10700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10748,
											"end": 10752,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10740,
											"end": 10746,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10736,
											"end": 10753,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 10728,
											"end": 10734,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10724,
											"end": 10754,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10777,
											"end": 10780,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10769,
											"end": 10775,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10766,
											"end": 10781,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10763,
											"end": 10885,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10763,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 10763,
											"end": 10885,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10796,
											"end": 10875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 10796,
											"end": 10875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 10796,
											"end": 10875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10796,
											"end": 10875,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 10796,
											"end": 10875,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10763,
											"end": 10885,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 10763,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10911,
											"end": 10917,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10928,
											"end": 10934,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10923,
											"end": 10926,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10920,
											"end": 10935,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11003,
											"end": 11006,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11032,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 11065,
											"end": 11068,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 11053,
											"end": 11063,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11032,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 11032,
											"end": 11069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11032,
											"end": 11069,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 11032,
											"end": 11069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11027,
											"end": 11030,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11020,
											"end": 11070,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11099,
											"end": 11103,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11094,
											"end": 11097,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11090,
											"end": 11104,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11083,
											"end": 11104,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11083,
											"end": 11104,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10970,
											"end": 11114,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10954,
											"end": 10958,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10949,
											"end": 10952,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10945,
											"end": 10959,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10898,
											"end": 10919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10512,
											"end": 11120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10512,
											"end": 11120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10410,
											"end": 11120,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10410,
											"end": 11120,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10410,
											"end": 11120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10410,
											"end": 11120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10410,
											"end": 11120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10410,
											"end": 11120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11143,
											"end": 11513,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 11143,
											"end": 11513,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11214,
											"end": 11219,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11263,
											"end": 11266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11256,
											"end": 11260,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 11248,
											"end": 11254,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11244,
											"end": 11261,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11267,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 11230,
											"end": 11352,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 11230,
											"end": 11352,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11271,
											"end": 11350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 11271,
											"end": 11350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 11271,
											"end": 11350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11271,
											"end": 11350,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 11271,
											"end": 11350,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11230,
											"end": 11352,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 11230,
											"end": 11352,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11388,
											"end": 11394,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11375,
											"end": 11395,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 11413,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 11503,
											"end": 11506,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11495,
											"end": 11501,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11488,
											"end": 11492,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11480,
											"end": 11486,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11476,
											"end": 11493,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11413,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 11413,
											"end": 11507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11413,
											"end": 11507,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 11413,
											"end": 11507,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11404,
											"end": 11507,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11404,
											"end": 11507,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11220,
											"end": 11513,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11143,
											"end": 11513,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11143,
											"end": 11513,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11143,
											"end": 11513,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11143,
											"end": 11513,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11143,
											"end": 11513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11519,
											"end": 12413,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 11519,
											"end": 12413,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11637,
											"end": 11643,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11645,
											"end": 11651,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11694,
											"end": 11696,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11682,
											"end": 11691,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11673,
											"end": 11680,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11669,
											"end": 11692,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11665,
											"end": 11697,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 11662,
											"end": 11781,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11662,
											"end": 11781,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 11662,
											"end": 11781,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11700,
											"end": 11779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 11700,
											"end": 11779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 11700,
											"end": 11779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11700,
											"end": 11779,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 11700,
											"end": 11779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11662,
											"end": 11781,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 11662,
											"end": 11781,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11848,
											"end": 11849,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11837,
											"end": 11846,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11833,
											"end": 11850,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11820,
											"end": 11851,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 11878,
											"end": 11896,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11870,
											"end": 11876,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11867,
											"end": 11897,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11864,
											"end": 11981,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11864,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 11864,
											"end": 11981,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11900,
											"end": 11979,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 11900,
											"end": 11979,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 11900,
											"end": 11979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11900,
											"end": 11979,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 11900,
											"end": 11979,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11864,
											"end": 11981,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 11864,
											"end": 11981,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12005,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 12075,
											"end": 12082,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12066,
											"end": 12072,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12055,
											"end": 12064,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12051,
											"end": 12073,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12005,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 12005,
											"end": 12083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12005,
											"end": 12083,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 12005,
											"end": 12083,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11995,
											"end": 12083,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11995,
											"end": 12083,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11791,
											"end": 12093,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12160,
											"end": 12162,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12149,
											"end": 12158,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12145,
											"end": 12163,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12132,
											"end": 12164,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 12191,
											"end": 12209,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12183,
											"end": 12189,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12180,
											"end": 12210,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12177,
											"end": 12294,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12177,
											"end": 12294,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 12177,
											"end": 12294,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12213,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 12213,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 12213,
											"end": 12292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12213,
											"end": 12292,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 12213,
											"end": 12292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12177,
											"end": 12294,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 12177,
											"end": 12294,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12318,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 12388,
											"end": 12395,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12385,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12368,
											"end": 12377,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12364,
											"end": 12386,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12318,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 12318,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12318,
											"end": 12396,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 12318,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12308,
											"end": 12396,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12308,
											"end": 12396,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12103,
											"end": 12406,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11519,
											"end": 12413,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11519,
											"end": 12413,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11519,
											"end": 12413,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11519,
											"end": 12413,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11519,
											"end": 12413,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11519,
											"end": 12413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12419,
											"end": 12533,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 12419,
											"end": 12533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12486,
											"end": 12492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12520,
											"end": 12525,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12514,
											"end": 12526,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12504,
											"end": 12526,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12504,
											"end": 12526,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12419,
											"end": 12533,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12419,
											"end": 12533,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12419,
											"end": 12533,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12419,
											"end": 12533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12539,
											"end": 12723,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 12539,
											"end": 12723,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12638,
											"end": 12649,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12672,
											"end": 12678,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12667,
											"end": 12670,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12660,
											"end": 12679,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12712,
											"end": 12716,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12707,
											"end": 12710,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12703,
											"end": 12717,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12688,
											"end": 12717,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12688,
											"end": 12717,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12539,
											"end": 12723,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12539,
											"end": 12723,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12539,
											"end": 12723,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12539,
											"end": 12723,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12539,
											"end": 12723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12729,
											"end": 12861,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 12729,
											"end": 12861,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12796,
											"end": 12800,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12819,
											"end": 12822,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12811,
											"end": 12822,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12811,
											"end": 12822,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12849,
											"end": 12853,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12844,
											"end": 12847,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12840,
											"end": 12854,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12832,
											"end": 12854,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12832,
											"end": 12854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12729,
											"end": 12861,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12729,
											"end": 12861,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12729,
											"end": 12861,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12729,
											"end": 12861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12867,
											"end": 12975,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 12867,
											"end": 12975,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12944,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 12962,
											"end": 12967,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12944,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 12944,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12944,
											"end": 12968,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 12944,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12939,
											"end": 12942,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12932,
											"end": 12969,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12867,
											"end": 12975,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12867,
											"end": 12975,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12867,
											"end": 12975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12981,
											"end": 13160,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 12981,
											"end": 13160,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13050,
											"end": 13060,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13071,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 13113,
											"end": 13116,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13105,
											"end": 13111,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13071,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 13071,
											"end": 13117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13071,
											"end": 13117,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 13071,
											"end": 13117,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13149,
											"end": 13153,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13144,
											"end": 13147,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13140,
											"end": 13154,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13126,
											"end": 13154,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13126,
											"end": 13154,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12981,
											"end": 13160,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12981,
											"end": 13160,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12981,
											"end": 13160,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12981,
											"end": 13160,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12981,
											"end": 13160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13166,
											"end": 13279,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 13166,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13236,
											"end": 13240,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13268,
											"end": 13272,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13263,
											"end": 13266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13259,
											"end": 13273,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13251,
											"end": 13273,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13251,
											"end": 13273,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13166,
											"end": 13279,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13166,
											"end": 13279,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13166,
											"end": 13279,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13166,
											"end": 13279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13315,
											"end": 14047,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 13315,
											"end": 14047,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13434,
											"end": 13437,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13463,
											"end": 13517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 13511,
											"end": 13516,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13463,
											"end": 13517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 13463,
											"end": 13517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13463,
											"end": 13517,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 13463,
											"end": 13517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13533,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 13612,
											"end": 13618,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13607,
											"end": 13610,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13533,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 13533,
											"end": 13619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13533,
											"end": 13619,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 13533,
											"end": 13619,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13526,
											"end": 13619,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 13526,
											"end": 13619,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13643,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 13693,
											"end": 13698,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13643,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 13643,
											"end": 13699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13643,
											"end": 13699,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 13643,
											"end": 13699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13722,
											"end": 13729,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13753,
											"end": 13754,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13763,
											"end": 13769,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13760,
											"end": 13761,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13757,
											"end": 13770,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13839,
											"end": 13845,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13833,
											"end": 13846,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13866,
											"end": 13929,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 13925,
											"end": 13928,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 13910,
											"end": 13923,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13866,
											"end": 13929,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 13866,
											"end": 13929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13866,
											"end": 13929,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 13866,
											"end": 13929,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13859,
											"end": 13929,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 13859,
											"end": 13929,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13952,
											"end": 14012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 14005,
											"end": 14011,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13952,
											"end": 14012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 13952,
											"end": 14012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13952,
											"end": 14012,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 13952,
											"end": 14012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13942,
											"end": 14012,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13942,
											"end": 14012,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13798,
											"end": 14022,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13785,
											"end": 13786,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13782,
											"end": 13783,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13778,
											"end": 13787,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13773,
											"end": 13787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13773,
											"end": 13787,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13742,
											"end": 13756,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14038,
											"end": 14041,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14031,
											"end": 14041,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 14031,
											"end": 14041,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13439,
											"end": 14047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13439,
											"end": 14047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13439,
											"end": 14047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13315,
											"end": 14047,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13315,
											"end": 14047,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13315,
											"end": 14047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13315,
											"end": 14047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13315,
											"end": 14047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14053,
											"end": 14426,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 14053,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14196,
											"end": 14200,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14234,
											"end": 14236,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14223,
											"end": 14232,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14219,
											"end": 14237,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14211,
											"end": 14237,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14211,
											"end": 14237,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14283,
											"end": 14292,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14277,
											"end": 14281,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14273,
											"end": 14293,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14269,
											"end": 14270,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14258,
											"end": 14267,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14254,
											"end": 14271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14247,
											"end": 14294,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14311,
											"end": 14419,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 14414,
											"end": 14418,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14405,
											"end": 14411,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14311,
											"end": 14419,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 14311,
											"end": 14419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14311,
											"end": 14419,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 14311,
											"end": 14419,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14303,
											"end": 14419,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14303,
											"end": 14419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14053,
											"end": 14426,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14053,
											"end": 14426,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14053,
											"end": 14426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14053,
											"end": 14426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14053,
											"end": 14426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14432,
											"end": 14548,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 14432,
											"end": 14548,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14502,
											"end": 14523,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 14517,
											"end": 14522,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14502,
											"end": 14523,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 14502,
											"end": 14523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14502,
											"end": 14523,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 14502,
											"end": 14523,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14495,
											"end": 14500,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14492,
											"end": 14524,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 14482,
											"end": 14542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 14482,
											"end": 14542,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14538,
											"end": 14539,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14535,
											"end": 14536,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14528,
											"end": 14540,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14482,
											"end": 14542,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 14482,
											"end": 14542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14432,
											"end": 14548,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14432,
											"end": 14548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14554,
											"end": 14687,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 14554,
											"end": 14687,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14597,
											"end": 14602,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14635,
											"end": 14641,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14622,
											"end": 14642,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 14613,
											"end": 14642,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14613,
											"end": 14642,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14651,
											"end": 14681,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 14675,
											"end": 14680,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14651,
											"end": 14681,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 14651,
											"end": 14681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14651,
											"end": 14681,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 14651,
											"end": 14681,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14554,
											"end": 14687,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14554,
											"end": 14687,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14554,
											"end": 14687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14554,
											"end": 14687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14554,
											"end": 14687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14693,
											"end": 15161,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 14693,
											"end": 15161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14758,
											"end": 14764,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14766,
											"end": 14772,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14815,
											"end": 14817,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14803,
											"end": 14812,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14794,
											"end": 14801,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14790,
											"end": 14813,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14786,
											"end": 14818,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 14783,
											"end": 14902,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14783,
											"end": 14902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 14783,
											"end": 14902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14821,
											"end": 14900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 14821,
											"end": 14900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 14821,
											"end": 14900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14821,
											"end": 14900,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 14821,
											"end": 14900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14783,
											"end": 14902,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 14783,
											"end": 14902,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14941,
											"end": 14942,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14966,
											"end": 15019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 15011,
											"end": 15018,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15002,
											"end": 15008,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14991,
											"end": 15000,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 14987,
											"end": 15009,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14966,
											"end": 15019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 14966,
											"end": 15019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14966,
											"end": 15019,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 14966,
											"end": 15019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14956,
											"end": 15019,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14956,
											"end": 15019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14912,
											"end": 15029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15068,
											"end": 15070,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15094,
											"end": 15144,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 15136,
											"end": 15143,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15127,
											"end": 15133,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15116,
											"end": 15125,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15112,
											"end": 15134,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15094,
											"end": 15144,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 15094,
											"end": 15144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15094,
											"end": 15144,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 15094,
											"end": 15144,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15084,
											"end": 15144,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15084,
											"end": 15144,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15039,
											"end": 15154,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14693,
											"end": 15161,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14693,
											"end": 15161,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14693,
											"end": 15161,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14693,
											"end": 15161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14693,
											"end": 15161,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14693,
											"end": 15161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15167,
											"end": 15641,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 15167,
											"end": 15641,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15235,
											"end": 15241,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15243,
											"end": 15249,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15292,
											"end": 15294,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15280,
											"end": 15289,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15271,
											"end": 15278,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15267,
											"end": 15290,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15263,
											"end": 15295,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 15260,
											"end": 15379,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15260,
											"end": 15379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 15260,
											"end": 15379,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15298,
											"end": 15377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 15298,
											"end": 15377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 15298,
											"end": 15377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15298,
											"end": 15377,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 15298,
											"end": 15377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15260,
											"end": 15379,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 15260,
											"end": 15379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15418,
											"end": 15419,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15443,
											"end": 15496,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 15488,
											"end": 15495,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15479,
											"end": 15485,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15468,
											"end": 15477,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15464,
											"end": 15486,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15443,
											"end": 15496,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 15443,
											"end": 15496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15443,
											"end": 15496,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 15443,
											"end": 15496,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15433,
											"end": 15496,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15433,
											"end": 15496,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15389,
											"end": 15506,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15545,
											"end": 15547,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15571,
											"end": 15624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 15616,
											"end": 15623,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15607,
											"end": 15613,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15596,
											"end": 15605,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15592,
											"end": 15614,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15571,
											"end": 15624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 15571,
											"end": 15624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15571,
											"end": 15624,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 15571,
											"end": 15624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15561,
											"end": 15624,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15561,
											"end": 15624,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15516,
											"end": 15634,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15167,
											"end": 15641,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15167,
											"end": 15641,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15167,
											"end": 15641,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15167,
											"end": 15641,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15167,
											"end": 15641,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15167,
											"end": 15641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15751,
											"end": 15757,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15759,
											"end": 15765,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15767,
											"end": 15773,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15775,
											"end": 15781,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15783,
											"end": 15789,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15832,
											"end": 15835,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 15820,
											"end": 15829,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15811,
											"end": 15818,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 15807,
											"end": 15830,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15803,
											"end": 15836,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 15800,
											"end": 15920,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15800,
											"end": 15920,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 15800,
											"end": 15920,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15839,
											"end": 15918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 15839,
											"end": 15918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 15839,
											"end": 15918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15839,
											"end": 15918,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 15839,
											"end": 15918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15800,
											"end": 15920,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 15800,
											"end": 15920,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15959,
											"end": 15960,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15984,
											"end": 16037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 16029,
											"end": 16036,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 16020,
											"end": 16026,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16009,
											"end": 16018,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 16005,
											"end": 16027,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15984,
											"end": 16037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 15984,
											"end": 16037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15984,
											"end": 16037,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 15984,
											"end": 16037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15974,
											"end": 16037,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 15974,
											"end": 16037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15930,
											"end": 16047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16086,
											"end": 16088,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16112,
											"end": 16165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 16157,
											"end": 16164,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 16148,
											"end": 16154,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16137,
											"end": 16146,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 16133,
											"end": 16155,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16112,
											"end": 16165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 16112,
											"end": 16165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16112,
											"end": 16165,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 16112,
											"end": 16165,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16102,
											"end": 16165,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 16102,
											"end": 16165,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16057,
											"end": 16175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16214,
											"end": 16216,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16240,
											"end": 16293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 16285,
											"end": 16292,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 16276,
											"end": 16282,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16265,
											"end": 16274,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 16261,
											"end": 16283,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16240,
											"end": 16293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 16240,
											"end": 16293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16240,
											"end": 16293,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 16240,
											"end": 16293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16230,
											"end": 16293,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16230,
											"end": 16293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16185,
											"end": 16303,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16342,
											"end": 16344,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 16368,
											"end": 16421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 16413,
											"end": 16420,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 16404,
											"end": 16410,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16393,
											"end": 16402,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 16389,
											"end": 16411,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16368,
											"end": 16421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 16368,
											"end": 16421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16368,
											"end": 16421,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 16368,
											"end": 16421,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16358,
											"end": 16421,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16358,
											"end": 16421,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16313,
											"end": 16431,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16498,
											"end": 16501,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 16487,
											"end": 16496,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16483,
											"end": 16502,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16470,
											"end": 16503,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 16530,
											"end": 16548,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16522,
											"end": 16528,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16519,
											"end": 16549,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 16516,
											"end": 16633,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16516,
											"end": 16633,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 16516,
											"end": 16633,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16552,
											"end": 16631,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 16552,
											"end": 16631,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 16552,
											"end": 16631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16552,
											"end": 16631,
											"name": "tag",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 16552,
											"end": 16631,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16516,
											"end": 16633,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 16516,
											"end": 16633,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16657,
											"end": 16719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 16711,
											"end": 16718,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 16702,
											"end": 16708,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16691,
											"end": 16700,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 16687,
											"end": 16709,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16657,
											"end": 16719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 16657,
											"end": 16719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16657,
											"end": 16719,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 16657,
											"end": 16719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16647,
											"end": 16719,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16647,
											"end": 16719,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16441,
											"end": 16729,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15647,
											"end": 16736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16742,
											"end": 16922,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 16742,
											"end": 16922,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16790,
											"end": 16867,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16787,
											"end": 16788,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16780,
											"end": 16868,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16887,
											"end": 16891,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 16884,
											"end": 16885,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 16877,
											"end": 16892,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16911,
											"end": 16915,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 16908,
											"end": 16909,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16901,
											"end": 16916,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 16928,
											"end": 17248,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 16928,
											"end": 17248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16972,
											"end": 16978,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17009,
											"end": 17010,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 17003,
											"end": 17007,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16999,
											"end": 17011,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 16989,
											"end": 17011,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16989,
											"end": 17011,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17056,
											"end": 17057,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 17050,
											"end": 17054,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17046,
											"end": 17058,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17077,
											"end": 17095,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17067,
											"end": 17148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 17067,
											"end": 17148,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17133,
											"end": 17137,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 17125,
											"end": 17131,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17121,
											"end": 17138,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17111,
											"end": 17138,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17111,
											"end": 17138,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17067,
											"end": 17148,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 17067,
											"end": 17148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17195,
											"end": 17197,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17187,
											"end": 17193,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17184,
											"end": 17198,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 17164,
											"end": 17182,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17161,
											"end": 17199,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17158,
											"end": 17242,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 17158,
											"end": 17242,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17214,
											"end": 17232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 17214,
											"end": 17232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 17214,
											"end": 17232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17214,
											"end": 17232,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 17214,
											"end": 17232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17158,
											"end": 17242,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 17158,
											"end": 17242,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16979,
											"end": 17248,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16928,
											"end": 17248,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16928,
											"end": 17248,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16928,
											"end": 17248,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16928,
											"end": 17248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17254,
											"end": 17372,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 17254,
											"end": 17372,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17341,
											"end": 17365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 17359,
											"end": 17364,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17341,
											"end": 17365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 17341,
											"end": 17365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17341,
											"end": 17365,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 17341,
											"end": 17365,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17336,
											"end": 17339,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17329,
											"end": 17366,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17254,
											"end": 17372,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17254,
											"end": 17372,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17254,
											"end": 17372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17378,
											"end": 17710,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 17378,
											"end": 17710,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17499,
											"end": 17503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17537,
											"end": 17539,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17526,
											"end": 17535,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17522,
											"end": 17540,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17514,
											"end": 17540,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17514,
											"end": 17540,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17550,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 17618,
											"end": 17619,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17607,
											"end": 17616,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17603,
											"end": 17620,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17594,
											"end": 17600,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17550,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 17550,
											"end": 17621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17550,
											"end": 17621,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 17550,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17631,
											"end": 17703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 17699,
											"end": 17701,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17688,
											"end": 17697,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17684,
											"end": 17702,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17675,
											"end": 17681,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17631,
											"end": 17703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 17631,
											"end": 17703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17631,
											"end": 17703,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 17631,
											"end": 17703,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17378,
											"end": 17710,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 17378,
											"end": 17710,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17378,
											"end": 17710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17378,
											"end": 17710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17378,
											"end": 17710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17378,
											"end": 17710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17716,
											"end": 18048,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 17716,
											"end": 18048,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17837,
											"end": 17841,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17875,
											"end": 17877,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17864,
											"end": 17873,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17860,
											"end": 17878,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17852,
											"end": 17878,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17852,
											"end": 17878,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17888,
											"end": 17959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 17956,
											"end": 17957,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17945,
											"end": 17954,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17941,
											"end": 17958,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17932,
											"end": 17938,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17888,
											"end": 17959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 17888,
											"end": 17959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17888,
											"end": 17959,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 17888,
											"end": 17959,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17969,
											"end": 18041,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 18037,
											"end": 18039,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18026,
											"end": 18035,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18022,
											"end": 18040,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18013,
											"end": 18019,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17969,
											"end": 18041,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 17969,
											"end": 18041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17969,
											"end": 18041,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 17969,
											"end": 18041,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17716,
											"end": 18048,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 17716,
											"end": 18048,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17716,
											"end": 18048,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17716,
											"end": 18048,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17716,
											"end": 18048,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17716,
											"end": 18048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18054,
											"end": 18234,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 18054,
											"end": 18234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18102,
											"end": 18179,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18099,
											"end": 18100,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18092,
											"end": 18180,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18199,
											"end": 18203,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 18196,
											"end": 18197,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 18189,
											"end": 18204,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18223,
											"end": 18227,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 18220,
											"end": 18221,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18213,
											"end": 18228,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 18240,
											"end": 18462,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 18240,
											"end": 18462,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18333,
											"end": 18337,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18371,
											"end": 18373,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18360,
											"end": 18369,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18356,
											"end": 18374,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18348,
											"end": 18374,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18348,
											"end": 18374,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18384,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 18452,
											"end": 18453,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18441,
											"end": 18450,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18437,
											"end": 18454,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18428,
											"end": 18434,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18384,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 18384,
											"end": 18455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18384,
											"end": 18455,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 18384,
											"end": 18455,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18240,
											"end": 18462,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18240,
											"end": 18462,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18240,
											"end": 18462,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18240,
											"end": 18462,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18240,
											"end": 18462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18468,
											"end": 19021,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 18468,
											"end": 19021,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18645,
											"end": 18649,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18683,
											"end": 18686,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 18672,
											"end": 18681,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18668,
											"end": 18687,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18660,
											"end": 18687,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18660,
											"end": 18687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18697,
											"end": 18768,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 18765,
											"end": 18766,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18754,
											"end": 18763,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18750,
											"end": 18767,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18741,
											"end": 18747,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 18697,
											"end": 18768,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 18697,
											"end": 18768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18697,
											"end": 18768,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 18697,
											"end": 18768,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18778,
											"end": 18850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 18846,
											"end": 18848,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18835,
											"end": 18844,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18831,
											"end": 18849,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18822,
											"end": 18828,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 18778,
											"end": 18850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 18778,
											"end": 18850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18778,
											"end": 18850,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 18778,
											"end": 18850,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18860,
											"end": 18932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 18928,
											"end": 18930,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18917,
											"end": 18926,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18913,
											"end": 18931,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18904,
											"end": 18910,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18860,
											"end": 18932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 18860,
											"end": 18932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18860,
											"end": 18932,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 18860,
											"end": 18932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18942,
											"end": 19014,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 19010,
											"end": 19012,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 18999,
											"end": 19008,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18995,
											"end": 19013,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18986,
											"end": 18992,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18942,
											"end": 19014,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 18942,
											"end": 19014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18942,
											"end": 19014,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 18942,
											"end": 19014,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18468,
											"end": 19021,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 18468,
											"end": 19021,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 18468,
											"end": 19021,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18468,
											"end": 19021,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18468,
											"end": 19021,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18468,
											"end": 19021,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18468,
											"end": 19021,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18468,
											"end": 19021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19027,
											"end": 19207,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 19027,
											"end": 19207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19075,
											"end": 19152,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19072,
											"end": 19073,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19065,
											"end": 19153,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19172,
											"end": 19176,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 19169,
											"end": 19170,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 19162,
											"end": 19177,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19196,
											"end": 19200,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 19193,
											"end": 19194,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19186,
											"end": 19201,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 19213,
											"end": 19404,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 19213,
											"end": 19404,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19253,
											"end": 19256,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19272,
											"end": 19292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 19290,
											"end": 19291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19272,
											"end": 19292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 19272,
											"end": 19292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19272,
											"end": 19292,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 19272,
											"end": 19292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19267,
											"end": 19292,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19267,
											"end": 19292,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19306,
											"end": 19326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 19324,
											"end": 19325,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19306,
											"end": 19326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 19306,
											"end": 19326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19306,
											"end": 19326,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 19306,
											"end": 19326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19301,
											"end": 19326,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19301,
											"end": 19326,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19349,
											"end": 19350,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19346,
											"end": 19347,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19342,
											"end": 19351,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19335,
											"end": 19351,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19335,
											"end": 19351,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19370,
											"end": 19373,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19367,
											"end": 19368,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19364,
											"end": 19374,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 19361,
											"end": 19397,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19361,
											"end": 19397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 19361,
											"end": 19397,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19377,
											"end": 19395,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 19377,
											"end": 19395,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 19377,
											"end": 19395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19377,
											"end": 19395,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 19377,
											"end": 19395,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19361,
											"end": 19397,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 19361,
											"end": 19397,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19213,
											"end": 19404,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19213,
											"end": 19404,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19213,
											"end": 19404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19213,
											"end": 19404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19213,
											"end": 19404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19410,
											"end": 20044,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 19410,
											"end": 20044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19631,
											"end": 19635,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19669,
											"end": 19671,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 19658,
											"end": 19667,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19654,
											"end": 19672,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19646,
											"end": 19672,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19646,
											"end": 19672,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19718,
											"end": 19727,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19712,
											"end": 19716,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19708,
											"end": 19728,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19704,
											"end": 19705,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19693,
											"end": 19702,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19689,
											"end": 19706,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19682,
											"end": 19729,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19746,
											"end": 19854,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 19849,
											"end": 19853,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19840,
											"end": 19846,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19746,
											"end": 19854,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 19746,
											"end": 19854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19746,
											"end": 19854,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 19746,
											"end": 19854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19738,
											"end": 19854,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19738,
											"end": 19854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19901,
											"end": 19910,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19895,
											"end": 19899,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19891,
											"end": 19911,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19886,
											"end": 19888,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19875,
											"end": 19884,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19871,
											"end": 19889,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19864,
											"end": 19912,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19929,
											"end": 20037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 20032,
											"end": 20036,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20023,
											"end": 20029,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19929,
											"end": 20037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 19929,
											"end": 20037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19929,
											"end": 20037,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 19929,
											"end": 20037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19921,
											"end": 20037,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19921,
											"end": 20037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19410,
											"end": 20044,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 19410,
											"end": 20044,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19410,
											"end": 20044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19410,
											"end": 20044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19410,
											"end": 20044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19410,
											"end": 20044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20050,
											"end": 20148,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 20050,
											"end": 20148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20101,
											"end": 20107,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20135,
											"end": 20140,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20129,
											"end": 20141,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 20119,
											"end": 20141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20119,
											"end": 20141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20050,
											"end": 20148,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20050,
											"end": 20148,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20050,
											"end": 20148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20050,
											"end": 20148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20154,
											"end": 20322,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 20154,
											"end": 20322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20237,
											"end": 20248,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20271,
											"end": 20277,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20266,
											"end": 20269,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20259,
											"end": 20278,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20311,
											"end": 20315,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20306,
											"end": 20309,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20302,
											"end": 20316,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20287,
											"end": 20316,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20287,
											"end": 20316,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20154,
											"end": 20322,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20154,
											"end": 20322,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20154,
											"end": 20322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20154,
											"end": 20322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20154,
											"end": 20322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20328,
											"end": 20701,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 20328,
											"end": 20701,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20414,
											"end": 20417,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20442,
											"end": 20480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 20474,
											"end": 20479,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20442,
											"end": 20480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 20442,
											"end": 20480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20442,
											"end": 20480,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 20442,
											"end": 20480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20496,
											"end": 20566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 20559,
											"end": 20565,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20554,
											"end": 20557,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20496,
											"end": 20566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 20496,
											"end": 20566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20496,
											"end": 20566,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 20496,
											"end": 20566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20489,
											"end": 20566,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 20489,
											"end": 20566,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20575,
											"end": 20640,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 20633,
											"end": 20639,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20628,
											"end": 20631,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20621,
											"end": 20625,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20614,
											"end": 20619,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 20610,
											"end": 20626,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20575,
											"end": 20640,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 20575,
											"end": 20640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20575,
											"end": 20640,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 20575,
											"end": 20640,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20665,
											"end": 20694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 20687,
											"end": 20693,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20665,
											"end": 20694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 20665,
											"end": 20694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20665,
											"end": 20694,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 20665,
											"end": 20694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20660,
											"end": 20663,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20656,
											"end": 20695,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20649,
											"end": 20695,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20649,
											"end": 20695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20418,
											"end": 20701,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20328,
											"end": 20701,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20328,
											"end": 20701,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20328,
											"end": 20701,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20328,
											"end": 20701,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20328,
											"end": 20701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20707,
											"end": 21458,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 20707,
											"end": 21458,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20930,
											"end": 20934,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20968,
											"end": 20971,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 20957,
											"end": 20966,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20953,
											"end": 20972,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20945,
											"end": 20972,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20945,
											"end": 20972,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20982,
											"end": 21053,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 21050,
											"end": 21051,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21039,
											"end": 21048,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21035,
											"end": 21052,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21026,
											"end": 21032,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 20982,
											"end": 21053,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 20982,
											"end": 21053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20982,
											"end": 21053,
											"name": "tag",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 20982,
											"end": 21053,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21063,
											"end": 21135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 21131,
											"end": 21133,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21120,
											"end": 21129,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21116,
											"end": 21134,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21107,
											"end": 21113,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 21063,
											"end": 21135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 21063,
											"end": 21135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21063,
											"end": 21135,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 21063,
											"end": 21135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21145,
											"end": 21217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 21213,
											"end": 21215,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 21202,
											"end": 21211,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21198,
											"end": 21216,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21189,
											"end": 21195,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 21145,
											"end": 21217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 21145,
											"end": 21217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21145,
											"end": 21217,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 21145,
											"end": 21217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21227,
											"end": 21299,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 21295,
											"end": 21297,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 21284,
											"end": 21293,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21280,
											"end": 21298,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21271,
											"end": 21277,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21227,
											"end": 21299,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 21227,
											"end": 21299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21227,
											"end": 21299,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 21227,
											"end": 21299,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21347,
											"end": 21356,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21341,
											"end": 21345,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21337,
											"end": 21357,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 21331,
											"end": 21334,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 21320,
											"end": 21329,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21316,
											"end": 21335,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21309,
											"end": 21358,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21375,
											"end": 21451,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 21446,
											"end": 21450,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21437,
											"end": 21443,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21375,
											"end": 21451,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 21375,
											"end": 21451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21375,
											"end": 21451,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 21375,
											"end": 21451,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21367,
											"end": 21451,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21367,
											"end": 21451,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20707,
											"end": 21458,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 20707,
											"end": 21458,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 20707,
											"end": 21458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20707,
											"end": 21458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20707,
											"end": 21458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20707,
											"end": 21458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20707,
											"end": 21458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20707,
											"end": 21458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20707,
											"end": 21458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21464,
											"end": 21605,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 21464,
											"end": 21605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21520,
											"end": 21525,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21551,
											"end": 21557,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21545,
											"end": 21558,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 21536,
											"end": 21558,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21536,
											"end": 21558,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21567,
											"end": 21599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 21593,
											"end": 21598,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21567,
											"end": 21599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 21567,
											"end": 21599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21567,
											"end": 21599,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 21567,
											"end": 21599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21464,
											"end": 21605,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21464,
											"end": 21605,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21464,
											"end": 21605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21464,
											"end": 21605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21464,
											"end": 21605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21611,
											"end": 21960,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 21611,
											"end": 21960,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21680,
											"end": 21686,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21729,
											"end": 21731,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21717,
											"end": 21726,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21708,
											"end": 21715,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21704,
											"end": 21727,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 21700,
											"end": 21732,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 21697,
											"end": 21816,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 21697,
											"end": 21816,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 21697,
											"end": 21816,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 21735,
											"end": 21814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 21735,
											"end": 21814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 21735,
											"end": 21814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21735,
											"end": 21814,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 21735,
											"end": 21814,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21697,
											"end": 21816,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 21697,
											"end": 21816,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21855,
											"end": 21856,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21880,
											"end": 21943,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 21935,
											"end": 21942,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21926,
											"end": 21932,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21915,
											"end": 21924,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21911,
											"end": 21933,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21880,
											"end": 21943,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 21880,
											"end": 21943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21880,
											"end": 21943,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 21880,
											"end": 21943,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21870,
											"end": 21943,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21870,
											"end": 21943,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21826,
											"end": 21953,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21611,
											"end": 21960,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21611,
											"end": 21960,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21611,
											"end": 21960,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21611,
											"end": 21960,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21611,
											"end": 21960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21966,
											"end": 23019,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 21966,
											"end": 23019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22289,
											"end": 22293,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22327,
											"end": 22330,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 22316,
											"end": 22325,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22312,
											"end": 22331,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22304,
											"end": 22331,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22304,
											"end": 22331,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22341,
											"end": 22412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 22409,
											"end": 22410,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22398,
											"end": 22407,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22394,
											"end": 22411,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22385,
											"end": 22391,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 22341,
											"end": 22412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 22341,
											"end": 22412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22341,
											"end": 22412,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 22341,
											"end": 22412,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22422,
											"end": 22494,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 22490,
											"end": 22492,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22479,
											"end": 22488,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22475,
											"end": 22493,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22466,
											"end": 22472,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 22422,
											"end": 22494,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 22422,
											"end": 22494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22422,
											"end": 22494,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 22422,
											"end": 22494,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22541,
											"end": 22550,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22535,
											"end": 22539,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22531,
											"end": 22551,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22526,
											"end": 22528,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 22515,
											"end": 22524,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22511,
											"end": 22529,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22504,
											"end": 22552,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22569,
											"end": 22677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 22672,
											"end": 22676,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22663,
											"end": 22669,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 22569,
											"end": 22677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 22569,
											"end": 22677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22569,
											"end": 22677,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 22569,
											"end": 22677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22561,
											"end": 22677,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22561,
											"end": 22677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22724,
											"end": 22733,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22718,
											"end": 22722,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22714,
											"end": 22734,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22709,
											"end": 22711,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 22698,
											"end": 22707,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22694,
											"end": 22712,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22687,
											"end": 22735,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22752,
											"end": 22860,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 22855,
											"end": 22859,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22846,
											"end": 22852,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 22752,
											"end": 22860,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 22752,
											"end": 22860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22752,
											"end": 22860,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 22752,
											"end": 22860,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22744,
											"end": 22860,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22744,
											"end": 22860,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22908,
											"end": 22917,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22902,
											"end": 22906,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22898,
											"end": 22918,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22892,
											"end": 22895,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 22881,
											"end": 22890,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22877,
											"end": 22896,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22870,
											"end": 22919,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22936,
											"end": 23012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 23007,
											"end": 23011,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22998,
											"end": 23004,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22936,
											"end": 23012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 22936,
											"end": 23012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22936,
											"end": 23012,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 22936,
											"end": 23012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22928,
											"end": 23012,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22928,
											"end": 23012,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21966,
											"end": 23019,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 21966,
											"end": 23019,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 21966,
											"end": 23019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21966,
											"end": 23019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21966,
											"end": 23019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21966,
											"end": 23019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21966,
											"end": 23019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21966,
											"end": 23019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21966,
											"end": 23019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								},
								"99C456CE8103A063EADDE2FEFD34E0C93694EE0875780C5D3728DB26CA2AAF27": "68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f576f726170616b6f726e4a6172757369726970686f742f4d795f4e46545f576f726b73686f702f6d61696e2f574f4a415f4865726f2e6a736f6e"
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts@5.0.0/utils/Arrays.sol",
								"@openzeppelin/contracts@5.0.0/utils/Context.sol",
								"@openzeppelin/contracts@5.0.0/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/math/Math.sol",
								"contracts/WOJAToken3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WOJAToken3.sol\":\"WOJA_Hero\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts@5.0.0/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts@5.0.0/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts@5.0.0/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/WOJAToken3.sol\":{\"keccak256\":\"0x4f81434a24ab599818ce2cd1be3110abde7512f03cfcbb12486fffc7c84b8951\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://464c8f085361a5b837e9a2f4fc54335aae1d5619acc58c93d266188a74db2636\",\"dweb:/ipfs/QmRK1vWo3uQfABaJgKaFgXU2bNrj6jCy9ieXp6NiDAZ6Gm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 178,
								"contract": "contracts/WOJAToken3.sol:WOJA_Hero",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 184,
								"contract": "contracts/WOJAToken3.sol:WOJA_Hero",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 186,
								"contract": "contracts/WOJAToken3.sol:WOJA_Hero",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Arrays": [
							1551
						],
						"Context": [
							1573
						],
						"ERC1155": [
							1187
						],
						"ERC165": [
							1707
						],
						"IERC1155": [
							1310
						],
						"IERC1155Errors": [
							136
						],
						"IERC1155MetadataURI": [
							1368
						],
						"IERC1155Receiver": [
							1352
						],
						"IERC165": [
							1719
						]
					},
					"id": 1188,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1311,
							"src": "135:40:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1310,
										"src": "143:8:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1353,
							"src": "176:56:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC1155Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1352,
										"src": "184:16:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1369,
							"src": "233:73:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "IERC1155MetadataURI",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1368,
										"src": "241:19:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1574,
							"src": "307:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1573,
										"src": "315:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1708,
							"src": "356:69:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 147,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1719,
										"src": "364:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 148,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1707,
										"src": "373:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Arrays.sol",
							"file": "../../utils/Arrays.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1552,
							"src": "426:46:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "Arrays",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1551,
										"src": "434:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 137,
							"src": "473:67:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC1155Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 136,
										"src": "481:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "Context",
										"nameLocations": [
											"756:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1573,
										"src": "756:7:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "756:7:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "ERC165",
										"nameLocations": [
											"765:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1707,
										"src": "765:6:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "765:6:1"
								},
								{
									"baseName": {
										"id": 159,
										"name": "IERC1155",
										"nameLocations": [
											"773:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1310,
										"src": "773:8:1"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "773:8:1"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"783:19:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1368,
										"src": "783:19:1"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "783:19:1"
								},
								{
									"baseName": {
										"id": 163,
										"name": "IERC1155Errors",
										"nameLocations": [
											"804:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 136,
										"src": "804:14:1"
									},
									"id": 164,
									"nodeType": "InheritanceSpecifier",
									"src": "804:14:1"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "542:184:1",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"
							},
							"fullyImplemented": true,
							"id": 1187,
							"linearizedBaseContracts": [
								1187,
								136,
								1368,
								1310,
								1707,
								1719,
								1573
							],
							"name": "ERC1155",
							"nameLocation": "745:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 168,
									"libraryName": {
										"id": 165,
										"name": "Arrays",
										"nameLocations": [
											"831:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1551,
										"src": "831:6:1"
									},
									"nodeType": "UsingForDirective",
									"src": "825:27:1",
									"typeName": {
										"baseType": {
											"id": 166,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "842:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 167,
										"nodeType": "ArrayTypeName",
										"src": "842:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 172,
									"libraryName": {
										"id": 169,
										"name": "Arrays",
										"nameLocations": [
											"863:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1551,
										"src": "863:6:1"
									},
									"nodeType": "UsingForDirective",
									"src": "857:27:1",
									"typeName": {
										"baseType": {
											"id": 170,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "874:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 171,
										"nodeType": "ArrayTypeName",
										"src": "874:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"constant": false,
									"id": 178,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "957:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "890:76:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 177,
										"keyName": "id",
										"keyNameLocation": "906:2:1",
										"keyType": {
											"id": 173,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "898:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "890:58:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 176,
											"keyName": "account",
											"keyNameLocation": "928:7:1",
											"keyType": {
												"id": 174,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "912:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "939:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 184,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1043:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "973:88:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 183,
										"keyName": "account",
										"keyNameLocation": "989:7:1",
										"keyType": {
											"id": 179,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "981:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "973:61:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 182,
											"keyName": "operator",
											"keyNameLocation": "1016:8:1",
											"keyType": {
												"id": 180,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1008:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1000:33:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 181,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1028:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 186,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1197:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "1182:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 185,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1182:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1283:30:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 193,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "1301:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 192,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "1293:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "1293:13:1"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "1208:38:1",
										"text": " @dev See {_setURI}."
									},
									"id": 197,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1277:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1263:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 188,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:0:1"
									},
									"scope": 1187,
									"src": "1251:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1706,
										1718
									],
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "1488:197:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 208,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1517:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 210,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1310,
																			"src": "1537:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1310_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1310_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 209,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1532:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1532:14:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1310",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1547:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1532:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1517:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 214,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1574:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 216,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1368,
																			"src": "1594:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1368_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1368_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 215,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1589:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1589:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1368",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1615:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1589:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1574:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1517:109:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 223,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1666:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 221,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1642:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1187_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1648:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1706,
															"src": "1642:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1642:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1517:161:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 207,
												"id": 226,
												"nodeType": "Return",
												"src": "1498:180:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1319:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1389:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 204,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 202,
												"name": "ERC165",
												"nameLocations": [
													"1456:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1707,
												"src": "1456:6:1"
											},
											{
												"id": 203,
												"name": "IERC165",
												"nameLocations": [
													"1464:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1719,
												"src": "1464:7:1"
											}
										],
										"src": "1447:25:1"
									},
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1414:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1407:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 199,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1407:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:20:1"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1482:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:6:1"
									},
									"scope": 1187,
									"src": "1380:305:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1367
									],
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "2159:28:1",
										"statements": [
											{
												"expression": {
													"id": 236,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 186,
													"src": "2176:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 235,
												"id": 237,
												"nodeType": "Return",
												"src": "2169:11:1"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "1691:388:1",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "2093:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2097:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:18:1"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2144:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2144:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:1"
									},
									"scope": 1187,
									"src": "2084:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1248
									],
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "2333:46:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 249,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "2350:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 251,
														"indexExpression": {
															"id": 250,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "2360:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2350:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 253,
													"indexExpression": {
														"id": 252,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "2364:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2350:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 248,
												"id": 254,
												"nodeType": "Return",
												"src": "2343:29:1"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "2193:49:1",
										"text": " @dev See {IERC1155-balanceOf}."
									},
									"functionSelector": "00fdd58e",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2256:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2274:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2266:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2291:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2283:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:29:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2324:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:9:1"
									},
									"scope": 1187,
									"src": "2247:132:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1261
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "2678:410:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 269,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2692:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2701:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2692:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 271,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "2711:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2715:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2692:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 282,
												"nodeType": "IfStatement",
												"src": "2688:121:1",
												"trueBody": {
													"id": 281,
													"nodeType": "Block",
													"src": "2723:86:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 275,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 263,
																			"src": "2770:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2774:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2770:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 277,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 260,
																			"src": "2782:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2791:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2782:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 274,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "2744:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2744:54:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 280,
															"nodeType": "RevertStatement",
															"src": "2737:61:1"
														}
													]
												}
											},
											{
												"assignments": [
													287
												],
												"declarations": [
													{
														"constant": false,
														"id": 287,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2836:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "2819:30:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 285,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2819:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 286,
															"nodeType": "ArrayTypeName",
															"src": "2819:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 294,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 291,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "2866:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2875:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2866:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2852:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 288,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2856:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 289,
															"nodeType": "ArrayTypeName",
															"src": "2856:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2852:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2819:63:1"
											},
											{
												"body": {
													"id": 321,
													"nodeType": "Block",
													"src": "2939:112:1",
													"statements": [
														{
															"expression": {
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 306,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "2953:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 308,
																	"indexExpression": {
																		"id": 307,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 296,
																		"src": "2967:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2953:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 312,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 296,
																					"src": "3010:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 310,
																					"name": "accounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 260,
																					"src": "2982:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 311,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2991:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1550,
																				"src": "2982:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address[] memory,uint256) pure returns (address)"
																				}
																			},
																			"id": 313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2982:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 316,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 296,
																					"src": "3037:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 314,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 263,
																					"src": "3014:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3018:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1537,
																				"src": "3014:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3014:25:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 309,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "2972:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2972:68:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2953:87:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 320,
															"nodeType": "ExpressionStatement",
															"src": "2953:87:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 299,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "2913:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 300,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2917:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2926:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2917:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2913:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 322,
												"initializationExpression": {
													"assignments": [
														296
													],
													"declarations": [
														{
															"constant": false,
															"id": 296,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2906:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 322,
															"src": "2898:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 295,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2898:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 298,
													"initialValue": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2910:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2898:13:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2934:3:1",
														"subExpression": {
															"id": 303,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "2936:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 305,
													"nodeType": "ExpressionStatement",
													"src": "2934:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2893:158:1"
											},
											{
												"expression": {
													"id": 323,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "3068:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 268,
												"id": 324,
												"nodeType": "Return",
												"src": "3061:20:1"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "2385:146:1",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2545:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2586:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2569:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 258,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2569:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 259,
													"nodeType": "ArrayTypeName",
													"src": "2569:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2621:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2604:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 261,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2604:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 262,
													"nodeType": "ArrayTypeName",
													"src": "2604:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2559:71:1"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2660:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 265,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2660:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 266,
													"nodeType": "ArrayTypeName",
													"src": "2660:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:18:1"
									},
									"scope": 1187,
									"src": "2536:552:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1269
									],
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "3231:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 335,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "3260:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3260:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "3274:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3284:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 334,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "3241:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "3241:52:1"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "3094:57:1",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3165:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3191:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "3183:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3206:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "3201:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3201:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:33:1"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:1"
									},
									"scope": 1187,
									"src": "3156:144:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1279
									],
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "3463:61:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 352,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "3480:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 354,
														"indexExpression": {
															"id": 353,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "3499:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3480:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 356,
													"indexExpression": {
														"id": 355,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "3508:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3480:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 351,
												"id": 357,
												"nodeType": "Return",
												"src": "3473:44:1"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "3306:56:1",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3376:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3401:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3393:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3418:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3410:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:35:1"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3457:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3457:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3456:6:1"
									},
									"scope": 1187,
									"src": "3367:157:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "3704:238:1",
										"statements": [
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3722:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 402,
														"src": "3714:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 373,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3714:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 375,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "3731:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3731:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3714:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 378,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3757:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 379,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "3765:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3757:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3775:31:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 382,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "3793:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 383,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "3799:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 381,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "3776:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3776:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3757:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 393,
												"nodeType": "IfStatement",
												"src": "3753:129:1",
												"trueBody": {
													"id": 392,
													"nodeType": "Block",
													"src": "3808:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 388,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 374,
																		"src": "3858:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 389,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "3866:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 387,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "3829:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3829:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 391,
															"nodeType": "RevertStatement",
															"src": "3822:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 395,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3909:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 396,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "3915:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "3919:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 398,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "3923:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 399,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "3930:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 394,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "3891:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3891:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "3891:44:1"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "3530:56:1",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3600:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3625:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3617:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3617:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3639:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3631:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3651:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3643:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3663:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3655:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3670:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3670:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3616:72:1"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3704:0:1"
									},
									"scope": 1187,
									"src": "3591:351:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1309
									],
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "4198:245:1",
										"statements": [
											{
												"assignments": [
													420
												],
												"declarations": [
													{
														"constant": false,
														"id": 420,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4216:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "4208:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 419,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4208:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 423,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 421,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "4225:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4225:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4208:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 424,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "4251:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 425,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "4259:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4251:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4269:31:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 428,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "4287:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 429,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "4293:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 427,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "4270:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4270:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4251:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "4247:129:1",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "4302:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 434,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "4352:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 435,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 406,
																		"src": "4360:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 433,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "4323:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4323:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "4316:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "4408:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "4414:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "4418:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 444,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "4423:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 445,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4431:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 440,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "4385:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4385:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "4385:51:1"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "3948:61:1",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4023:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4062:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4054:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4084:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4076:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4113:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4096:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 409,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4096:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 410,
													"nodeType": "ArrayTypeName",
													"src": "4096:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4143:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4126:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 412,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4126:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 413,
													"nodeType": "ArrayTypeName",
													"src": "4126:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4172:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4159:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4159:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:138:1"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4198:0:1"
									},
									"scope": 1187,
									"src": "4014:429:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "5251:1174:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 463,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5265:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5269:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5265:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 465,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "5279:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5286:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5279:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5265:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 476,
												"nodeType": "IfStatement",
												"src": "5261:117:1",
												"trueBody": {
													"id": 475,
													"nodeType": "Block",
													"src": "5294:84:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 469,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 457,
																			"src": "5341:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5345:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5341:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 471,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "5353:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5360:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5353:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 468,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "5315:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5315:52:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 474,
															"nodeType": "RevertStatement",
															"src": "5308:59:1"
														}
													]
												}
											},
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5396:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 601,
														"src": "5388:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 477,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5388:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 481,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 479,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "5407:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5407:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5388:31:1"
											},
											{
												"body": {
													"id": 562,
													"nodeType": "Block",
													"src": "5471:650:1",
													"statements": [
														{
															"assignments": [
																494
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 494,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "5493:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 562,
																	"src": "5485:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 493,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5485:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 499,
															"initialValue": {
																"arguments": [
																	{
																		"id": 497,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "5521:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 495,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "5498:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5502:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1537,
																	"src": "5498:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5485:38:1"
														},
														{
															"assignments": [
																501
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 501,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "5545:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 562,
																	"src": "5537:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 500,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5537:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 506,
															"initialValue": {
																"arguments": [
																	{
																		"id": 504,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "5579:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 502,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "5553:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5560:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1537,
																	"src": "5553:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5553:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5537:44:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 507,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "5600:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5616:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5608:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 508,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5608:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5608:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5600:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 545,
															"nodeType": "IfStatement",
															"src": "5596:420:1",
															"trueBody": {
																"id": 544,
																"nodeType": "Block",
																"src": "5620:396:1",
																"statements": [
																	{
																		"assignments": [
																			514
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 514,
																				"mutability": "mutable",
																				"name": "fromBalance",
																				"nameLocation": "5646:11:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 544,
																				"src": "5638:19:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 513,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5638:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 520,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 515,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 178,
																					"src": "5660:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 517,
																				"indexExpression": {
																					"id": 516,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 494,
																					"src": "5670:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5660:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 519,
																			"indexExpression": {
																				"id": 518,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 452,
																				"src": "5674:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5660:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5638:41:1"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 521,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 514,
																				"src": "5701:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 522,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 501,
																				"src": "5715:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5701:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 532,
																		"nodeType": "IfStatement",
																		"src": "5697:129:1",
																		"trueBody": {
																			"id": 531,
																			"nodeType": "Block",
																			"src": "5722:104:1",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 525,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 452,
																								"src": "5778:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 526,
																								"name": "fromBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 514,
																								"src": "5784:11:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 527,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 501,
																								"src": "5797:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 528,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 494,
																								"src": "5804:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 524,
																							"name": "ERC1155InsufficientBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 101,
																							"src": "5751:26:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256,uint256,uint256) pure"
																							}
																						},
																						"id": 529,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5751:56:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 530,
																					"nodeType": "RevertStatement",
																					"src": "5744:63:1"
																				}
																			]
																		}
																	},
																	{
																		"id": 543,
																		"nodeType": "UncheckedBlock",
																		"src": "5843:159:1",
																		"statements": [
																			{
																				"expression": {
																					"id": 541,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 533,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 178,
																								"src": "5942:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 536,
																							"indexExpression": {
																								"id": 534,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 494,
																								"src": "5952:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5942:13:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 537,
																						"indexExpression": {
																							"id": 535,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 452,
																							"src": "5956:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "5942:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 540,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 538,
																							"name": "fromBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 514,
																							"src": "5964:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 539,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 501,
																							"src": "5978:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5964:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5942:41:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 542,
																				"nodeType": "ExpressionStatement",
																				"src": "5942:41:1"
																			}
																		]
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 546,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "6034:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6048:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6040:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 547,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6040:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6040:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6034:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 561,
															"nodeType": "IfStatement",
															"src": "6030:81:1",
															"trueBody": {
																"id": 560,
																"nodeType": "Block",
																"src": "6052:59:1",
																"statements": [
																	{
																		"expression": {
																			"id": 558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 552,
																						"name": "_balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 178,
																						"src": "6070:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 555,
																					"indexExpression": {
																						"id": 553,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 494,
																						"src": "6080:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6070:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 556,
																				"indexExpression": {
																					"id": 554,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 454,
																					"src": "6084:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6070:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 557,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 501,
																				"src": "6091:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6070:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 559,
																		"nodeType": "ExpressionStatement",
																		"src": "6070:26:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 486,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "5450:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 487,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5454:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5458:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5454:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5450:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 563,
												"initializationExpression": {
													"assignments": [
														483
													],
													"declarations": [
														{
															"constant": false,
															"id": 483,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5443:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 563,
															"src": "5435:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 482,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5435:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 485,
													"initialValue": {
														"hexValue": "30",
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5447:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5435:13:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5466:3:1",
														"subExpression": {
															"id": 490,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "5468:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 492,
													"nodeType": "ExpressionStatement",
													"src": "5466:3:1"
												},
												"nodeType": "ForStatement",
												"src": "5430:691:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 564,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "6135:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6139:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6135:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6149:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6135:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "6343:76:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "6376:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 593,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "6386:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "6392:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "6396:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 596,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "6401:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 591,
																	"name": "TransferBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "6362:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6362:46:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "6357:51:1"
														}
													]
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "6131:288:1",
												"trueBody": {
													"id": 590,
													"nodeType": "Block",
													"src": "6152:185:1",
													"statements": [
														{
															"assignments": [
																569
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 569,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6174:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 590,
																	"src": "6166:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 568,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6166:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 574,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6202:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 570,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "6179:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6183:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1537,
																	"src": "6179:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6166:38:1"
														},
														{
															"assignments": [
																576
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 576,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "6226:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 590,
																	"src": "6218:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 575,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 581,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6260:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 577,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "6234:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6241:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1537,
																	"src": "6234:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6234:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6218:44:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 583,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "6296:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 584,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "6306:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 585,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "6312:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 586,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "6316:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 587,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "6320:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 582,
																	"name": "TransferSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1207,
																	"src": "6281:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256)"
																	}
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6281:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 589,
															"nodeType": "EmitStatement",
															"src": "6276:50:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "4449:690:1",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5153:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5169:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5161:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5183:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5175:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5204:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5187:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 455,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5187:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 456,
													"nodeType": "ArrayTypeName",
													"src": "5187:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "5226:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5209:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 458,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5209:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 459,
													"nodeType": "ArrayTypeName",
													"src": "5209:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5160:73:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5251:0:1"
									},
									"scope": 1187,
									"src": "5144:1281:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "7195:499:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "7213:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "7219:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "7223:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 622,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "7228:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 618,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "7205:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7205:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "7205:30:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 625,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "7249:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7263:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7255:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 626,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7255:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7255:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7249:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 676,
												"nodeType": "IfStatement",
												"src": "7245:443:1",
												"trueBody": {
													"id": 675,
													"nodeType": "Block",
													"src": "7267:421:1",
													"statements": [
														{
															"assignments": [
																632
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 632,
																	"mutability": "mutable",
																	"name": "operator",
																	"nameLocation": "7289:8:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 675,
																	"src": "7281:16:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 631,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7281:7:1",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 635,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 633,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1563,
																	"src": "7300:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7300:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7281:31:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 636,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "7330:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7334:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7330:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7344:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7330:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 673,
																"nodeType": "Block",
																"src": "7571:107:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 665,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "7625:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 666,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 605,
																					"src": "7635:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 667,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "7641:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 668,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "7645:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 669,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "7650:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 670,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "7658:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 664,
																				"name": "_doSafeBatchTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "7589:35:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																				}
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7589:74:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 672,
																		"nodeType": "ExpressionStatement",
																		"src": "7589:74:1"
																	}
																]
															},
															"id": 674,
															"nodeType": "IfStatement",
															"src": "7326:352:1",
															"trueBody": {
																"id": 663,
																"nodeType": "Block",
																"src": "7347:218:1",
																"statements": [
																	{
																		"assignments": [
																			641
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 641,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "7373:2:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 663,
																				"src": "7365:10:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 640,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7365:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 646,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 644,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7401:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 642,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "7378:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7382:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1537,
																				"src": "7378:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7378:25:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7365:38:1"
																	},
																	{
																		"assignments": [
																			648
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 648,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "7429:5:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 663,
																				"src": "7421:13:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 647,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7421:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 653,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7463:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 649,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "7437:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 650,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7444:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1537,
																				"src": "7437:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7437:28:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7421:44:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 655,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "7514:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 656,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 605,
																					"src": "7524:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 657,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "7530:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 658,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 641,
																					"src": "7534:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 659,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 648,
																					"src": "7538:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 660,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "7545:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 654,
																				"name": "_doSafeTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1100,
																				"src": "7483:30:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																				}
																			},
																			"id": 661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7483:67:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 662,
																		"nodeType": "ExpressionStatement",
																		"src": "7483:67:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "6431:568:1",
										"text": " @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateWithAcceptanceCheck",
									"nameLocation": "7013:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7057:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7049:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7079:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7071:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7071:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "7108:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7091:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 608,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7091:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 609,
													"nodeType": "ArrayTypeName",
													"src": "7091:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "7138:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7121:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 611,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7121:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 612,
													"nodeType": "ArrayTypeName",
													"src": "7121:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7167:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7154:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 614,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7154:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7039:138:1"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7195:0:1"
									},
									"scope": 1187,
									"src": "7004:690:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "8259:355:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 692,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "8273:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8287:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8279:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 693,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8279:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8279:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8273:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "8269:88:1",
												"trueBody": {
													"id": 705,
													"nodeType": "Block",
													"src": "8291:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8343:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8335:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 699,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8335:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8335:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 698,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "8312:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8312:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 704,
															"nodeType": "RevertStatement",
															"src": "8305:41:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 707,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "8370:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8386:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8378:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 708,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8378:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8378:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8370:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 721,
												"nodeType": "IfStatement",
												"src": "8366:88:1",
												"trueBody": {
													"id": 720,
													"nodeType": "Block",
													"src": "8390:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 716,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8440:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8432:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 714,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8432:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8432:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 713,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "8411:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8411:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 719,
															"nodeType": "RevertStatement",
															"src": "8404:39:1"
														}
													]
												}
											},
											{
												"assignments": [
													726,
													729
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8481:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "8464:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 724,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8464:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 725,
															"nodeType": "ArrayTypeName",
															"src": "8464:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 729,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "8503:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "8486:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 727,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8486:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 728,
															"nodeType": "ArrayTypeName",
															"src": "8486:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 734,
												"initialValue": {
													"arguments": [
														{
															"id": 731,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "8532:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 732,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "8536:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 730,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "8513:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8513:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8463:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 736,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "8579:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "8585:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "8589:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 739,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "8594:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 740,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "8602:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 735,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "8552:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8552:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "8552:55:1"
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "7700:446:1",
										"text": " @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "8160:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8186:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8178:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8178:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8200:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8192:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8192:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8212:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8204:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8204:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8224:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8216:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8216:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8244:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8231:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8231:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8177:72:1"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8259:0:1"
									},
									"scope": 1187,
									"src": "8151:463:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "9194:266:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 760,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "9208:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9222:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9214:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 761,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9214:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9214:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9208:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "IfStatement",
												"src": "9204:88:1",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "9226:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9278:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9270:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 767,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9270:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9270:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 766,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "9247:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9247:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 772,
															"nodeType": "RevertStatement",
															"src": "9240:41:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 775,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "9305:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9321:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9313:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 776,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9313:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9313:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9305:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 789,
												"nodeType": "IfStatement",
												"src": "9301:88:1",
												"trueBody": {
													"id": 788,
													"nodeType": "Block",
													"src": "9325:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9375:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9367:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 782,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9367:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9367:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 781,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "9346:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9346:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 787,
															"nodeType": "RevertStatement",
															"src": "9339:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 791,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "9425:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 792,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "9431:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "9435:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 794,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "9440:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 795,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "9448:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 790,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "9398:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9398:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "9398:55:1"
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "8620:390:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "9024:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9064:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9056:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9056:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9086:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9078:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9078:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9115:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9098:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 750,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 751,
													"nodeType": "ArrayTypeName",
													"src": "9098:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "9145:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9128:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 753,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9128:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 754,
													"nodeType": "ArrayTypeName",
													"src": "9128:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9174:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9161:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9161:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9046:138:1"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9194:0:1"
									},
									"scope": 1187,
									"src": "9015:445:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "10338:30:1",
										"statements": [
											{
												"expression": {
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 805,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "10348:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 806,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "10355:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10348:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "10348:13:1"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "9466:811:1",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "10291:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "10313:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "10299:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 801,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10299:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10298:22:1"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10338:0:1"
									},
									"scope": 1187,
									"src": "10282:86:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "10828:264:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 822,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "10842:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10856:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10848:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 823,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10848:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10848:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10842:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 836,
												"nodeType": "IfStatement",
												"src": "10838:88:1",
												"trueBody": {
													"id": 835,
													"nodeType": "Block",
													"src": "10860:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10912:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10904:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 829,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10904:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10904:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 828,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "10881:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10881:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 834,
															"nodeType": "RevertStatement",
															"src": "10874:41:1"
														}
													]
												}
											},
											{
												"assignments": [
													841,
													844
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10953:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "10936:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 839,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10936:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 840,
															"nodeType": "ArrayTypeName",
															"src": "10936:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 844,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "10975:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "10958:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 842,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10958:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 843,
															"nodeType": "ArrayTypeName",
															"src": "10958:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 849,
												"initialValue": {
													"arguments": [
														{
															"id": 846,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "11004:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 847,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "11008:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 845,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "10985:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10985:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10935:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11059:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11051:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 851,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11051:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11051:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "11063:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 856,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "11067:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 857,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "11072:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 858,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "11080:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 850,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "11024:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11024:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "11024:61:1"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "10374:367:1",
										"text": " @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10755:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10769:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10761:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10781:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10773:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10773:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10793:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10785:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10785:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10813:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10800:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 818,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10800:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10760:58:1"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10828:0:1"
									},
									"scope": 1187,
									"src": "10746:346:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "11630:175:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 876,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "11644:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11658:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11650:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 877,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11650:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11650:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11644:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 890,
												"nodeType": "IfStatement",
												"src": "11640:88:1",
												"trueBody": {
													"id": 889,
													"nodeType": "Block",
													"src": "11662:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11714:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11706:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 883,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11706:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11706:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 882,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "11683:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11683:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 888,
															"nodeType": "RevertStatement",
															"src": "11676:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11772:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11764:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 892,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11764:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11764:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 896,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "11776:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "11780:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 898,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "11785:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 899,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "11793:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 891,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "11737:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11737:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "11737:61:1"
											}
										]
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "11098:420:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "11532:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11551:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11543:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11543:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11572:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11555:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 866,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11555:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 867,
													"nodeType": "ArrayTypeName",
													"src": "11555:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "11594:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11577:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 869,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11577:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 870,
													"nodeType": "ArrayTypeName",
													"src": "11577:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11615:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11602:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 872,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11602:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11542:78:1"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11630:0:1"
									},
									"scope": 1187,
									"src": "11523:282:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "12164:264:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 913,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "12178:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12194:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12186:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 914,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12186:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12186:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12178:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 927,
												"nodeType": "IfStatement",
												"src": "12174:88:1",
												"trueBody": {
													"id": 926,
													"nodeType": "Block",
													"src": "12198:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12248:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12240:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 920,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12240:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12240:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 919,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "12219:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12219:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 925,
															"nodeType": "RevertStatement",
															"src": "12212:39:1"
														}
													]
												}
											},
											{
												"assignments": [
													932,
													935
												],
												"declarations": [
													{
														"constant": false,
														"id": 932,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "12289:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "12272:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 930,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12272:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 931,
															"nodeType": "ArrayTypeName",
															"src": "12272:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 935,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "12311:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "12294:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 933,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12294:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 934,
															"nodeType": "ArrayTypeName",
															"src": "12294:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 940,
												"initialValue": {
													"arguments": [
														{
															"id": 937,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "12340:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 938,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "12344:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 936,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "12321:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12321:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12271:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 942,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "12387:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12401:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12393:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 943,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12393:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12393:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 947,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "12405:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 948,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "12410:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12418:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 941,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "12360:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12360:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "12360:61:1"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "11811:283:1",
										"text": " @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "12108:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12122:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "12114:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12114:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "12136:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "12128:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12128:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12148:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "12140:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12113:41:1"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12164:0:1"
									},
									"scope": 1187,
									"src": "12099:329:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "12874:175:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 965,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "12888:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12904:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12896:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 966,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12896:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12896:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12888:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "12884:88:1",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "12908:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12958:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12950:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 972,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12950:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12950:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 971,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "12929:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12929:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 977,
															"nodeType": "RevertStatement",
															"src": "12922:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 981,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "13008:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13022:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13014:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 982,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13014:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13014:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "13026:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 987,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "13031:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13039:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 980,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "12981:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12981:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "12981:61:1"
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "12434:345:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."
									},
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12793:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12812:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "12804:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12804:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12835:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "12818:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 957,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12818:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 958,
													"nodeType": "ArrayTypeName",
													"src": "12818:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "12857:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "12840:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 960,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12840:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 961,
													"nodeType": "ArrayTypeName",
													"src": "12840:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12803:61:1"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12874:0:1"
									},
									"scope": 1187,
									"src": "12784:265:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "13361:222:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1002,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "13375:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13395:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13387:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1003,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13387:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13387:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13375:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1016,
												"nodeType": "IfStatement",
												"src": "13371:94:1",
												"trueBody": {
													"id": 1015,
													"nodeType": "Block",
													"src": "13399:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13451:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13443:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1009,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13443:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13443:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1008,
																	"name": "ERC1155InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "13420:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13420:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1014,
															"nodeType": "RevertStatement",
															"src": "13413:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1017,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "13474:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1020,
															"indexExpression": {
																"id": 1018,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "13493:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13474:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1021,
														"indexExpression": {
															"id": 1019,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "13500:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13474:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1022,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "13512:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13474:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "13474:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1026,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "13550:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1027,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "13557:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "13567:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1025,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "13535:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13535:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1030,
												"nodeType": "EmitStatement",
												"src": "13530:46:1"
											}
										]
									},
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "13055:208:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13277:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13304:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "13296:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13319:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "13311:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13334:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "13329:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 998,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13329:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13295:48:1"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13361:0:1"
									},
									"scope": 1187,
									"src": "13268:315:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "13953:782:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1048,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "13967:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13970:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "13967:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13975:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13967:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13984:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13967:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1098,
												"nodeType": "IfStatement",
												"src": "13963:766:1",
												"trueBody": {
													"id": 1097,
													"nodeType": "Block",
													"src": "13987:742:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1077,
																		"nodeType": "Block",
																		"src": "14103:206:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1070,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1066,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1064,
																						"src": "14125:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1067,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1352,
																								"src": "14137:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1068,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14154:17:1",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1333,
																							"src": "14137:34:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1069,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14172:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14137:43:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14125:55:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1076,
																				"nodeType": "IfStatement",
																				"src": "14121:174:1",
																				"trueBody": {
																					"id": 1075,
																					"nodeType": "Block",
																					"src": "14182:113:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1072,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1039,
																										"src": "14273:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1071,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "14250:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1073,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14250:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1074,
																							"nodeType": "RevertStatement",
																							"src": "14243:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1078,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1065,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1064,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14093:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1078,
																				"src": "14086:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1063,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14086:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14085:17:1"
																	},
																	"src": "14077:232:1"
																},
																{
																	"block": {
																		"id": 1094,
																		"nodeType": "Block",
																		"src": "14338:381:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1085,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1082,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1080,
																							"src": "14360:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1083,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14367:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14360:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1084,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14377:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14360:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1092,
																					"nodeType": "Block",
																					"src": "14515:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "14601:86:1",
																								"nodeType": "YulBlock",
																								"src": "14601:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "14638:2:1",
																															"nodeType": "YulLiteral",
																															"src": "14638:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "14642:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "14642:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "14634:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "14634:3:1"
																													},
																													"nativeSrc": "14634:15:1",
																													"nodeType": "YulFunctionCall",
																													"src": "14634:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "14657:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "14657:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "14651:5:1",
																														"nodeType": "YulIdentifier",
																														"src": "14651:5:1"
																													},
																													"nativeSrc": "14651:13:1",
																													"nodeType": "YulFunctionCall",
																													"src": "14651:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "14627:6:1",
																												"nodeType": "YulIdentifier",
																												"src": "14627:6:1"
																											},
																											"nativeSrc": "14627:38:1",
																											"nodeType": "YulFunctionCall",
																											"src": "14627:38:1"
																										},
																										"nativeSrc": "14627:38:1",
																										"nodeType": "YulExpressionStatement",
																										"src": "14627:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1080,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14642:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1080,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14657:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1091,
																							"nodeType": "InlineAssembly",
																							"src": "14592:95:1"
																						}
																					]
																				},
																				"id": 1093,
																				"nodeType": "IfStatement",
																				"src": "14356:349:1",
																				"trueBody": {
																					"id": 1090,
																					"nodeType": "Block",
																					"src": "14380:129:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1087,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1039,
																										"src": "14487:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1086,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "14464:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1088,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14464:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1089,
																							"nodeType": "RevertStatement",
																							"src": "14457:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1095,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1081,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1080,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14330:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1095,
																				"src": "14317:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1079,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14317:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14316:21:1"
																	},
																	"src": "14310:409:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1057,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "14044:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1058,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "14054:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1059,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1041,
																		"src": "14060:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1060,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1043,
																		"src": "14064:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1061,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1045,
																		"src": "14071:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1054,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1039,
																				"src": "14022:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1053,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "14005:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14005:20:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1352",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14026:17:1",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1333,
																	"src": "14005:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14005:71:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1096,
															"nodeType": "TryStatement",
															"src": "14001:718:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "13589:167:1",
										"text": " @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13770:30:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13818:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13810:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13810:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13844:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13836:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13836:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13866:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13858:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13886:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13878:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13906:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13898:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13898:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13934:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13921:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1044,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13921:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13800:144:1"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13953:0:1"
									},
									"scope": 1187,
									"src": "13761:974:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "15140:824:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1118,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "15154:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15157:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "15154:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15162:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15154:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15171:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15154:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1168,
												"nodeType": "IfStatement",
												"src": "15150:808:1",
												"trueBody": {
													"id": 1167,
													"nodeType": "Block",
													"src": "15174:784:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1147,
																		"nodeType": "Block",
																		"src": "15327:211:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1140,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1136,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1134,
																						"src": "15349:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1137,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1352,
																								"src": "15361:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1138,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "15378:22:1",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1351,
																							"src": "15361:39:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1139,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15401:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15361:48:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15349:60:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1146,
																				"nodeType": "IfStatement",
																				"src": "15345:179:1",
																				"trueBody": {
																					"id": 1145,
																					"nodeType": "Block",
																					"src": "15411:113:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1142,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1107,
																										"src": "15502:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1141,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "15479:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1143,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15479:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1144,
																							"nodeType": "RevertStatement",
																							"src": "15472:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1148,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1135,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1134,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15304:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1148,
																				"src": "15297:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1133,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15297:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15279:47:1"
																	},
																	"src": "15271:267:1"
																},
																{
																	"block": {
																		"id": 1164,
																		"nodeType": "Block",
																		"src": "15567:381:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1155,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1152,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1150,
																							"src": "15589:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1153,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15596:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15589:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1154,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15606:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15589:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1162,
																					"nodeType": "Block",
																					"src": "15744:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "15830:86:1",
																								"nodeType": "YulBlock",
																								"src": "15830:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "15867:2:1",
																															"nodeType": "YulLiteral",
																															"src": "15867:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "15871:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "15871:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "15863:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "15863:3:1"
																													},
																													"nativeSrc": "15863:15:1",
																													"nodeType": "YulFunctionCall",
																													"src": "15863:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "15886:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "15886:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "15880:5:1",
																														"nodeType": "YulIdentifier",
																														"src": "15880:5:1"
																													},
																													"nativeSrc": "15880:13:1",
																													"nodeType": "YulFunctionCall",
																													"src": "15880:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "15856:6:1",
																												"nodeType": "YulIdentifier",
																												"src": "15856:6:1"
																											},
																											"nativeSrc": "15856:38:1",
																											"nodeType": "YulFunctionCall",
																											"src": "15856:38:1"
																										},
																										"nativeSrc": "15856:38:1",
																										"nodeType": "YulExpressionStatement",
																										"src": "15856:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1150,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15871:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1150,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15886:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1161,
																							"nodeType": "InlineAssembly",
																							"src": "15821:95:1"
																						}
																					]
																				},
																				"id": 1163,
																				"nodeType": "IfStatement",
																				"src": "15585:349:1",
																				"trueBody": {
																					"id": 1160,
																					"nodeType": "Block",
																					"src": "15609:129:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1157,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1107,
																										"src": "15716:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1156,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "15693:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1158,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15693:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1159,
																							"nodeType": "RevertStatement",
																							"src": "15686:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1165,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1151,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1150,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15559:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1165,
																				"src": "15546:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1149,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "15546:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15545:21:1"
																	},
																	"src": "15539:409:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1127,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "15236:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1128,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "15246:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1129,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "15252:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1130,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "15257:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1131,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "15265:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1124,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1107,
																				"src": "15209:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1123,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "15192:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15192:20:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1352",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15213:22:1",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1351,
																	"src": "15192:43:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15192:78:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1166,
															"nodeType": "TryStatement",
															"src": "15188:760:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "14741:177:1",
										"text": " @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14932:35:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14985:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "14977:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14977:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15011:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15003:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15003:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15033:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15025:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15062:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15045:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1108,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15045:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1109,
													"nodeType": "ArrayTypeName",
													"src": "15045:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "15092:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15075:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1111,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15075:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1112,
													"nodeType": "ArrayTypeName",
													"src": "15075:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15121:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15108:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15108:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14967:164:1"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15140:0:1"
									},
									"scope": 1187,
									"src": "14923:1041:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "16238:691:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "16300:623:1",
													"nodeType": "YulBlock",
													"src": "16300:623:1",
													"statements": [
														{
															"nativeSrc": "16358:21:1",
															"nodeType": "YulAssignment",
															"src": "16358:21:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16374:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16374:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16368:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "16368:5:1"
																},
																"nativeSrc": "16368:11:1",
																"nodeType": "YulFunctionCall",
																"src": "16368:11:1"
															},
															"variableNames": [
																{
																	"name": "array1",
																	"nativeSrc": "16358:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16358:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16436:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16436:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16444:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16444:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16429:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16429:6:1"
																},
																"nativeSrc": "16429:17:1",
																"nodeType": "YulFunctionCall",
																"src": "16429:17:1"
															},
															"nativeSrc": "16429:17:1",
															"nodeType": "YulExpressionStatement",
															"src": "16429:17:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array1",
																				"nativeSrc": "16567:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16567:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16575:4:1",
																				"nodeType": "YulLiteral",
																				"src": "16575:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16563:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16563:3:1"
																		},
																		"nativeSrc": "16563:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16563:17:1"
																	},
																	{
																		"name": "element1",
																		"nativeSrc": "16582:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "16582:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16556:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16556:6:1"
																},
																"nativeSrc": "16556:35:1",
																"nodeType": "YulFunctionCall",
																"src": "16556:35:1"
															},
															"nativeSrc": "16556:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "16556:35:1"
														},
														{
															"nativeSrc": "16682:27:1",
															"nodeType": "YulAssignment",
															"src": "16682:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16696:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16696:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16704:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16704:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16692:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16692:3:1"
																},
																"nativeSrc": "16692:17:1",
																"nodeType": "YulFunctionCall",
																"src": "16692:17:1"
															},
															"variableNames": [
																{
																	"name": "array2",
																	"nativeSrc": "16682:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16682:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array2",
																		"nativeSrc": "16729:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16729:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16737:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16737:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16722:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16722:6:1"
																},
																"nativeSrc": "16722:17:1",
																"nodeType": "YulFunctionCall",
																"src": "16722:17:1"
															},
															"nativeSrc": "16722:17:1",
															"nodeType": "YulExpressionStatement",
															"src": "16722:17:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16763:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16763:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16771:4:1",
																				"nodeType": "YulLiteral",
																				"src": "16771:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16759:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16759:3:1"
																		},
																		"nativeSrc": "16759:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16759:17:1"
																	},
																	{
																		"name": "element2",
																		"nativeSrc": "16778:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "16778:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16752:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16752:6:1"
																},
																"nativeSrc": "16752:35:1",
																"nodeType": "YulFunctionCall",
																"src": "16752:35:1"
															},
															"nativeSrc": "16752:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "16752:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16889:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16889:4:1",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16899:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16899:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16907:4:1",
																				"nodeType": "YulLiteral",
																				"src": "16907:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16895:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16895:3:1"
																		},
																		"nativeSrc": "16895:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16895:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16882:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16882:6:1"
																},
																"nativeSrc": "16882:31:1",
																"nodeType": "YulFunctionCall",
																"src": "16882:31:1"
															},
															"nativeSrc": "16882:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "16882:31:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16358:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16436:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16567:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16696:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16682:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16729:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16763:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16899:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1173,
														"isOffset": false,
														"isSlot": false,
														"src": "16582:8:1",
														"valueSize": 1
													},
													{
														"declaration": 1175,
														"isOffset": false,
														"isSlot": false,
														"src": "16778:8:1",
														"valueSize": 1
													}
												],
												"id": 1184,
												"nodeType": "InlineAssembly",
												"src": "16291:632:1"
											}
										]
									},
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "15970:105:1",
										"text": " @dev Creates an array in memory with only one value for each of the elements provided."
									},
									"id": 1186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArrays",
									"nameLocation": "16089:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "element1",
												"nameLocation": "16125:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16117:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16117:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "element2",
												"nameLocation": "16151:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16143:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16143:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16107:58:1"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "array1",
												"nameLocation": "16205:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16188:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1177,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16188:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1178,
													"nodeType": "ArrayTypeName",
													"src": "16188:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "array2",
												"nameLocation": "16230:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16213:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1180,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16213:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1181,
													"nodeType": "ArrayTypeName",
													"src": "16213:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16187:50:1"
									},
									"scope": 1187,
									"src": "16080:849:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1188,
							"src": "727:16204:1",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "109:16823:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1310
						],
						"IERC165": [
							1719
						]
					},
					"id": 1311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1189,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1191,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1311,
							"sourceUnit": 1720,
							"src": "136:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1190,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1719,
										"src": "144:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1193,
										"name": "IERC165",
										"nameLocations": [
											"358:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1719,
										"src": "358:7:2"
									},
									"id": 1194,
									"nodeType": "InheritanceSpecifier",
									"src": "358:7:2"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1192,
								"nodeType": "StructuredDocumentation",
								"src": "200:135:2",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."
							},
							"fullyImplemented": false,
							"id": 1310,
							"linearizedBaseContracts": [
								1310,
								1719
							],
							"name": "IERC1155",
							"nameLocation": "346:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "372:125:2",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1207,
									"name": "TransferSingle",
									"nameLocation": "508:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "539:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "523:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "565:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "549:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "587:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "571:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "599:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "591:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "611:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "603:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:95:2"
									},
									"src": "502:116:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "624:144:2",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1222,
									"name": "TransferBatch",
									"nameLocation": "779:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "818:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "802:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "836:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "882:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "866:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "904:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "894:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1215,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "894:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1216,
													"nodeType": "ArrayTypeName",
													"src": "894:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "927:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "917:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1218,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "917:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1219,
													"nodeType": "ArrayTypeName",
													"src": "917:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:147:2"
									},
									"src": "773:167:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "946:147:2",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1231,
									"name": "ApprovalForAll",
									"nameLocation": "1104:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1135:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1119:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1160:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1144:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1175:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1170:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:66:2"
									},
									"src": "1098:87:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "1191:343:2",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1238,
									"name": "URI",
									"nameLocation": "1545:3:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1556:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1549:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1549:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1579:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1563:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1563:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:34:2"
									},
									"src": "1539:44:2"
								},
								{
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "1589:172:2",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1775:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1793:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1785:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1810:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1802:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:29:2"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1837:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1836:9:2"
									},
									"scope": 1310,
									"src": "1766:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "1852:188:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2054:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2097:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2078:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1250,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2078:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1251,
													"nodeType": "ArrayTypeName",
													"src": "2078:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2134:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2115:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1253,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2115:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1254,
													"nodeType": "ArrayTypeName",
													"src": "2115:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:75:2"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2167:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1257,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2167:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1258,
													"nodeType": "ArrayTypeName",
													"src": "2167:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:18:2"
									},
									"scope": 1310,
									"src": "2045:140:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "2191:248:2",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2453:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2479:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2471:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2494:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2489:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2489:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2470:33:2"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:2"
									},
									"scope": 1310,
									"src": "2444:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "2519:135:2",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2668:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2693:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2685:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2710:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2702:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:35:2"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2743:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2743:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2742:6:2"
									},
									"scope": 1310,
									"src": "2659:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "2755:910:2",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3679:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3704:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3696:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3718:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3710:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3730:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3722:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3742:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3734:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3764:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3749:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3749:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3695:74:2"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3778:0:2"
									},
									"scope": 1310,
									"src": "3670:109:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "3785:744:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4543:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4582:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4574:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4574:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4604:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4596:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4596:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4635:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4616:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1299,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4616:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1300,
													"nodeType": "ArrayTypeName",
													"src": "4616:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4667:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4648:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1302,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4648:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1303,
													"nodeType": "ArrayTypeName",
													"src": "4648:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4698:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4683:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4683:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:144:2"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4717:0:2"
									},
									"scope": 1310,
									"src": "4534:184:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1311,
							"src": "336:4384:2",
							"usedErrors": [],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "110:4611:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1352
						],
						"IERC165": [
							1719
						]
					},
					"id": 1353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1353,
							"sourceUnit": 1720,
							"src": "144:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1313,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1719,
										"src": "152:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1316,
										"name": "IERC165",
										"nameLocations": [
											"357:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1719,
										"src": "357:7:3"
									},
									"id": 1317,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:3"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1315,
								"nodeType": "StructuredDocumentation",
								"src": "208:118:3",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 1352,
							"linearizedBaseContracts": [
								1352,
								1719
							],
							"name": "IERC1155Receiver",
							"nameLocation": "337:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "371:826:3",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1211:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1246:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1238:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1272:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1264:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1294:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1286:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1314:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1306:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1344:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1329:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1329:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:126:3"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1373:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1330,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1373:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:8:3"
									},
									"scope": 1352,
									"src": "1202:179:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "1387:994:3",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2395:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2435:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2427:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2461:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2453:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2494:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2475:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1339,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2475:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1340,
													"nodeType": "ArrayTypeName",
													"src": "2475:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2526:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2507:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1342,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2507:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1343,
													"nodeType": "ArrayTypeName",
													"src": "2507:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2557:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2542:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2542:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2417:150:3"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2586:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1348,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2586:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2585:8:3"
									},
									"scope": 1352,
									"src": "2386:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1353,
							"src": "327:2269:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:2479:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@5.0.0/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1310
						],
						"IERC1155MetadataURI": [
							1368
						]
					},
					"id": 1369,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "132:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1356,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1369,
							"sourceUnit": 1311,
							"src": "158:41:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1355,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1310,
										"src": "166:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1358,
										"name": "IERC1155",
										"nameLocations": [
											"399:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1310,
										"src": "399:8:4"
									},
									"id": 1359,
									"nodeType": "InheritanceSpecifier",
									"src": "399:8:4"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1357,
								"nodeType": "StructuredDocumentation",
								"src": "201:164:4",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."
							},
							"fullyImplemented": false,
							"id": 1368,
							"linearizedBaseContracts": [
								1368,
								1310,
								1719
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "376:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "414:192:4",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "620:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "632:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "624:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:12:4"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "659:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1364,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "659:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:15:4"
									},
									"scope": 1368,
									"src": "611:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1369,
							"src": "366:310:4",
							"usedErrors": [],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "132:545:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@5.0.0/utils/Arrays.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Arrays.sol",
					"exportedSymbols": {
						"Arrays": [
							1551
						],
						"Math": [
							2773
						],
						"StorageSlot": [
							1683
						]
					},
					"id": 1552,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1370,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1372,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1552,
							"sourceUnit": 1684,
							"src": "126:46:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1371,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1683,
										"src": "134:11:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1374,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1552,
							"sourceUnit": 2774,
							"src": "173:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1373,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2773,
										"src": "181:4:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1375,
								"nodeType": "StructuredDocumentation",
								"src": "212:63:5",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 1551,
							"linearizedBaseContracts": [
								1551
							],
							"name": "Arrays",
							"nameLocation": "284:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1378,
									"libraryName": {
										"id": 1376,
										"name": "StorageSlot",
										"nameLocations": [
											"303:11:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1683,
										"src": "303:11:5"
									},
									"nodeType": "UsingForDirective",
									"src": "297:30:5",
									"typeName": {
										"id": 1377,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "319:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1460,
										"nodeType": "Block",
										"src": "843:834:5",
										"statements": [
											{
												"assignments": [
													1390
												],
												"declarations": [
													{
														"constant": false,
														"id": 1390,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "861:3:5",
														"nodeType": "VariableDeclaration",
														"scope": 1460,
														"src": "853:11:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1389,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "853:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1392,
												"initialValue": {
													"hexValue": "30",
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "867:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "853:15:5"
											},
											{
												"assignments": [
													1394
												],
												"declarations": [
													{
														"constant": false,
														"id": 1394,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "886:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1460,
														"src": "878:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1393,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "878:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1397,
												"initialValue": {
													"expression": {
														"id": 1395,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "893:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "899:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "893:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "878:27:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1398,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1394,
														"src": "920:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "928:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "920:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1404,
												"nodeType": "IfStatement",
												"src": "916:48:5",
												"trueBody": {
													"id": 1403,
													"nodeType": "Block",
													"src": "931:33:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "952:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1388,
															"id": 1402,
															"nodeType": "Return",
															"src": "945:8:5"
														}
													]
												}
											},
											{
												"body": {
													"id": 1436,
													"nodeType": "Block",
													"src": "993:423:5",
													"statements": [
														{
															"assignments": [
																1409
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1409,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "1015:3:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1436,
																	"src": "1007:11:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1408,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1007:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1415,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1412,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1390,
																		"src": "1034:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1413,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1394,
																		"src": "1039:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1410,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2773,
																		"src": "1021:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2773_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1026:7:5",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1947,
																	"src": "1021:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1021:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1007:37:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1417,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1382,
																				"src": "1282:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1418,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1409,
																				"src": "1289:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1416,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1482,
																				1503,
																				1524
																			],
																			"referencedDeclaration": 1524,
																			"src": "1269:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1588_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1269:24:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$1588_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1294:5:5",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1587,
																	"src": "1269:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1421,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1384,
																	"src": "1302:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1269:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1434,
																"nodeType": "Block",
																"src": "1360:46:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1428,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1390,
																				"src": "1378:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1431,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1429,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1409,
																					"src": "1384:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1430,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1390:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1384:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1378:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1433,
																		"nodeType": "ExpressionStatement",
																		"src": "1378:13:5"
																	}
																]
															},
															"id": 1435,
															"nodeType": "IfStatement",
															"src": "1265:141:5",
															"trueBody": {
																"id": 1427,
																"nodeType": "Block",
																"src": "1311:43:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1423,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1394,
																				"src": "1329:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1424,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1409,
																				"src": "1336:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1329:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1426,
																		"nodeType": "ExpressionStatement",
																		"src": "1329:10:5"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1405,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "981:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1406,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1394,
														"src": "987:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "981:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1437,
												"nodeType": "WhileStatement",
												"src": "974:442:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1438,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "1533:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1533:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1442,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1382,
																		"src": "1557:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1443,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1390,
																			"src": "1564:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1570:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1564:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1441,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1482,
																		1503,
																		1524
																	],
																	"referencedDeclaration": 1524,
																	"src": "1544:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1588_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1544:28:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$1588_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1447,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1573:5:5",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1587,
															"src": "1544:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1448,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "1582:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1544:45:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1533:56:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1458,
													"nodeType": "Block",
													"src": "1636:35:5",
													"statements": [
														{
															"expression": {
																"id": 1456,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "1657:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1388,
															"id": 1457,
															"nodeType": "Return",
															"src": "1650:10:5"
														}
													]
												},
												"id": 1459,
												"nodeType": "IfStatement",
												"src": "1529:142:5",
												"trueBody": {
													"id": 1455,
													"nodeType": "Block",
													"src": "1591:39:5",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1451,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "1612:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1618:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1612:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1388,
															"id": 1454,
															"nodeType": "Return",
															"src": "1605:14:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "333:407:5",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."
									},
									"id": 1461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "754:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "787:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "769:23:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1380,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "769:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1381,
													"nodeType": "ArrayTypeName",
													"src": "769:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "802:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "794:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:42:5"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "834:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:9:5"
									},
									"scope": 1551,
									"src": "745:932:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "1993:459:5",
										"statements": [
											{
												"assignments": [
													1474
												],
												"declarations": [
													{
														"constant": false,
														"id": 1474,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2011:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1481,
														"src": "2003:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1473,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2003:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1475,
												"nodeType": "VariableDeclarationStatement",
												"src": "2003:12:5"
											},
											{
												"AST": {
													"nativeSrc": "2316:92:5",
													"nodeType": "YulBlock",
													"src": "2316:92:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2337:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2337:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "2340:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "2340:8:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2330:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2330:6:5"
																},
																"nativeSrc": "2330:19:5",
																"nodeType": "YulFunctionCall",
																"src": "2330:19:5"
															},
															"nativeSrc": "2330:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "2330:19:5"
														},
														{
															"nativeSrc": "2362:36:5",
															"nodeType": "YulAssignment",
															"src": "2362:36:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2384:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2384:1:5",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:4:5",
																				"nodeType": "YulLiteral",
																				"src": "2387:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "2374:9:5",
																			"nodeType": "YulIdentifier",
																			"src": "2374:9:5"
																		},
																		"nativeSrc": "2374:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2374:18:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2394:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2394:3:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2370:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2370:3:5"
																},
																"nativeSrc": "2370:28:5",
																"nodeType": "YulFunctionCall",
																"src": "2370:28:5"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "2362:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1465,
														"isOffset": false,
														"isSlot": true,
														"src": "2340:8:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "2394:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1474,
														"isOffset": false,
														"isSlot": false,
														"src": "2362:4:5",
														"valueSize": 1
													}
												],
												"id": 1476,
												"nodeType": "InlineAssembly",
												"src": "2307:101:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1477,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "2424:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2429:14:5",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1605,
														"src": "2424:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1579_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2424:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1579_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 1472,
												"id": 1480,
												"nodeType": "Return",
												"src": "2417:28:5"
											}
										]
									},
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "1683:191:5",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "1888:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "1919:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "1901:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1463,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1901:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1464,
													"nodeType": "ArrayTypeName",
													"src": "1901:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "1932:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "1924:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:36:5"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "1960:31:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1579_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1470,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1469,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"1960:11:5",
															"1972:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1579,
														"src": "1960:23:5"
													},
													"referencedDeclaration": 1579,
													"src": "1960:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1579_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:33:5"
									},
									"scope": 1551,
									"src": "1879:573:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "2768:459:5",
										"statements": [
											{
												"assignments": [
													1495
												],
												"declarations": [
													{
														"constant": false,
														"id": 1495,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2786:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1502,
														"src": "2778:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1494,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2778:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1496,
												"nodeType": "VariableDeclarationStatement",
												"src": "2778:12:5"
											},
											{
												"AST": {
													"nativeSrc": "3091:92:5",
													"nodeType": "YulBlock",
													"src": "3091:92:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3112:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3112:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3115:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "3115:8:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3105:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3105:6:5"
																},
																"nativeSrc": "3105:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3105:19:5"
															},
															"nativeSrc": "3105:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "3105:19:5"
														},
														{
															"nativeSrc": "3137:36:5",
															"nodeType": "YulAssignment",
															"src": "3137:36:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3159:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3159:1:5",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3162:4:5",
																				"nodeType": "YulLiteral",
																				"src": "3162:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3149:9:5",
																			"nodeType": "YulIdentifier",
																			"src": "3149:9:5"
																		},
																		"nativeSrc": "3149:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3149:18:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3169:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3169:3:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3145:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3145:3:5"
																},
																"nativeSrc": "3145:28:5",
																"nodeType": "YulFunctionCall",
																"src": "3145:28:5"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3137:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3137:4:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1486,
														"isOffset": false,
														"isSlot": true,
														"src": "3115:8:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1488,
														"isOffset": false,
														"isSlot": false,
														"src": "3169:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1495,
														"isOffset": false,
														"isSlot": false,
														"src": "3137:4:5",
														"valueSize": 1
													}
												],
												"id": 1497,
												"nodeType": "InlineAssembly",
												"src": "3082:101:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1498,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "3199:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3204:14:5",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1627,
														"src": "3199:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1585_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3199:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1585_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 1493,
												"id": 1501,
												"nodeType": "Return",
												"src": "3192:28:5"
											}
										]
									},
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "2458:191:5",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "2663:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "2694:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "2676:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1484,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2676:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1485,
													"nodeType": "ArrayTypeName",
													"src": "2676:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "2707:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "2699:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:36:5"
									},
									"returnParameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "2735:31:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1585_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1491,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1490,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"2735:11:5",
															"2747:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1585,
														"src": "2735:23:5"
													},
													"referencedDeclaration": 1585,
													"src": "2735:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1585_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2734:33:5"
									},
									"scope": 1551,
									"src": "2654:573:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "3543:459:5",
										"statements": [
											{
												"assignments": [
													1516
												],
												"declarations": [
													{
														"constant": false,
														"id": 1516,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "3561:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1523,
														"src": "3553:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1515,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3553:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1517,
												"nodeType": "VariableDeclarationStatement",
												"src": "3553:12:5"
											},
											{
												"AST": {
													"nativeSrc": "3866:92:5",
													"nodeType": "YulBlock",
													"src": "3866:92:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3887:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3887:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3890:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "3890:8:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3880:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:5"
																},
																"nativeSrc": "3880:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3880:19:5"
															},
															"nativeSrc": "3880:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "3880:19:5"
														},
														{
															"nativeSrc": "3912:36:5",
															"nodeType": "YulAssignment",
															"src": "3912:36:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3934:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3934:1:5",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3937:4:5",
																				"nodeType": "YulLiteral",
																				"src": "3937:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3924:9:5",
																			"nodeType": "YulIdentifier",
																			"src": "3924:9:5"
																		},
																		"nativeSrc": "3924:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3924:18:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3944:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3944:3:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3920:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:5"
																},
																"nativeSrc": "3920:28:5",
																"nodeType": "YulFunctionCall",
																"src": "3920:28:5"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3912:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3912:4:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1507,
														"isOffset": false,
														"isSlot": true,
														"src": "3890:8:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1509,
														"isOffset": false,
														"isSlot": false,
														"src": "3944:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1516,
														"isOffset": false,
														"isSlot": false,
														"src": "3912:4:5",
														"valueSize": 1
													}
												],
												"id": 1518,
												"nodeType": "InlineAssembly",
												"src": "3857:101:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1519,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "3974:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3979:14:5",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1638,
														"src": "3974:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1588_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3974:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1588_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 1514,
												"id": 1522,
												"nodeType": "Return",
												"src": "3967:28:5"
											}
										]
									},
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "3233:191:5",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "3438:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "3469:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3451:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1505,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3451:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1506,
													"nodeType": "ArrayTypeName",
													"src": "3451:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "3482:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3474:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:36:5"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3510:31:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1588_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1512,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1511,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"3510:11:5",
															"3522:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1588,
														"src": "3510:23:5"
													},
													"referencedDeclaration": 1588,
													"src": "3510:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1588_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3509:33:5"
									},
									"scope": 1551,
									"src": "3429:573:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1536,
										"nodeType": "Block",
										"src": "4303:98:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4322:73:5",
													"nodeType": "YulBlock",
													"src": "4322:73:5",
													"statements": [
														{
															"nativeSrc": "4336:49:5",
															"nodeType": "YulAssignment",
															"src": "4336:49:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4357:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4357:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4362:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4362:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4353:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4353:3:5"
																				},
																				"nativeSrc": "4353:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4353:14:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4373:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4373:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4378:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4378:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4369:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4369:3:5"
																				},
																				"nativeSrc": "4369:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4369:14:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4349:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:5"
																		},
																		"nativeSrc": "4349:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:35:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4343:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4343:5:5"
																},
																"nativeSrc": "4343:42:5",
																"nodeType": "YulFunctionCall",
																"src": "4343:42:5"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4336:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:5"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1528,
														"isOffset": false,
														"isSlot": false,
														"src": "4357:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1530,
														"isOffset": false,
														"isSlot": false,
														"src": "4373:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1533,
														"isOffset": false,
														"isSlot": false,
														"src": "4336:3:5",
														"valueSize": 1
													}
												],
												"id": 1535,
												"nodeType": "InlineAssembly",
												"src": "4313:82:5"
											}
										]
									},
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "4008:191:5",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4213:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4249:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "4232:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1526,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4232:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1527,
													"nodeType": "ArrayTypeName",
													"src": "4232:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4262:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "4254:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4231:35:5"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4298:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "4290:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4290:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:13:5"
									},
									"scope": 1551,
									"src": "4204:197:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1549,
										"nodeType": "Block",
										"src": "4702:98:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4721:73:5",
													"nodeType": "YulBlock",
													"src": "4721:73:5",
													"statements": [
														{
															"nativeSrc": "4735:49:5",
															"nodeType": "YulAssignment",
															"src": "4735:49:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4756:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4756:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4761:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4761:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4752:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4752:3:5"
																				},
																				"nativeSrc": "4752:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4752:14:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4772:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4772:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4777:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4777:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4768:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4768:3:5"
																				},
																				"nativeSrc": "4768:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4768:14:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4748:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:5"
																		},
																		"nativeSrc": "4748:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4748:35:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4742:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4742:5:5"
																},
																"nativeSrc": "4742:42:5",
																"nodeType": "YulFunctionCall",
																"src": "4742:42:5"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4735:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:5"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1541,
														"isOffset": false,
														"isSlot": false,
														"src": "4756:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1543,
														"isOffset": false,
														"isSlot": false,
														"src": "4772:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1546,
														"isOffset": false,
														"isSlot": false,
														"src": "4735:3:5",
														"valueSize": 1
													}
												],
												"id": 1548,
												"nodeType": "InlineAssembly",
												"src": "4712:82:5"
											}
										]
									},
									"documentation": {
										"id": 1538,
										"nodeType": "StructuredDocumentation",
										"src": "4407:191:5",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4612:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4648:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "4631:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1539,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4631:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1540,
													"nodeType": "ArrayTypeName",
													"src": "4631:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4661:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "4653:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:35:5"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4697:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "4689:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4689:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4688:13:5"
									},
									"scope": 1551,
									"src": "4603:197:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1552,
							"src": "276:4526:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:4703:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts@5.0.0/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1573
						]
					},
					"id": 1574,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1553,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1554,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1573,
							"linearizedBaseContracts": [
								1573
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1559,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1558,
												"id": 1561,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1573,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1568,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1567,
												"id": 1570,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1565,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1573,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1574,
							"src": "624:235:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts@5.0.0/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1683
						]
					},
					"id": 1684,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1575,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1576,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:7",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1683,
							"linearizedBaseContracts": [
								1683
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1579,
									"members": [
										{
											"constant": false,
											"id": 1578,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1579,
											"src": "1300:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1577,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:7",
									"nodeType": "StructDefinition",
									"scope": 1683,
									"src": "1271:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1582,
									"members": [
										{
											"constant": false,
											"id": 1581,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1582,
											"src": "1355:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1580,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:7",
									"nodeType": "StructDefinition",
									"scope": 1683,
									"src": "1326:46:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1585,
									"members": [
										{
											"constant": false,
											"id": 1584,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1585,
											"src": "1407:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1583,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:7",
									"nodeType": "StructDefinition",
									"scope": 1683,
									"src": "1378:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1588,
									"members": [
										{
											"constant": false,
											"id": 1587,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1588,
											"src": "1462:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1586,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:7",
									"nodeType": "StructDefinition",
									"scope": 1683,
									"src": "1433:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1591,
									"members": [
										{
											"constant": false,
											"id": 1590,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1591,
											"src": "1516:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1589,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:7",
									"nodeType": "StructDefinition",
									"scope": 1683,
									"src": "1488:47:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1594,
									"members": [
										{
											"constant": false,
											"id": 1593,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1594,
											"src": "1568:11:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1592,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:7",
									"nodeType": "StructDefinition",
									"scope": 1683,
									"src": "1541:45:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1604,
										"nodeType": "Block",
										"src": "1768:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:7",
													"nodeType": "YulBlock",
													"src": "1830:38:7",
													"statements": [
														{
															"nativeSrc": "1844:14:7",
															"nodeType": "YulAssignment",
															"src": "1844:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:7",
																"nodeType": "YulIdentifier",
																"src": "1854:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1601,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1597,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:7",
														"valueSize": 1
													}
												],
												"id": 1603,
												"nodeType": "InlineAssembly",
												"src": "1821:47:7"
											}
										]
									},
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:7",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "1708:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1596,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:7"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "1745:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1579_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1600,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1599,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1579,
														"src": "1745:11:7"
													},
													"referencedDeclaration": 1579,
													"src": "1745:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1579_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:7"
									},
									"scope": 1683,
									"src": "1684:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "2056:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:7",
													"nodeType": "YulBlock",
													"src": "2118:38:7",
													"statements": [
														{
															"nativeSrc": "2132:14:7",
															"nodeType": "YulAssignment",
															"src": "2132:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:7",
																"nodeType": "YulIdentifier",
																"src": "2142:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1612,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1608,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:7",
														"valueSize": 1
													}
												],
												"id": 1614,
												"nodeType": "InlineAssembly",
												"src": "2109:47:7"
											}
										]
									},
									"documentation": {
										"id": 1606,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:7",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "1996:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1607,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:7"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "2033:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1582_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1611,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1610,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1582,
														"src": "2033:11:7"
													},
													"referencedDeclaration": 1582,
													"src": "2033:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1582_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:7"
									},
									"scope": 1683,
									"src": "1972:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1626,
										"nodeType": "Block",
										"src": "2344:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:7",
													"nodeType": "YulBlock",
													"src": "2406:38:7",
													"statements": [
														{
															"nativeSrc": "2420:14:7",
															"nodeType": "YulAssignment",
															"src": "2420:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:7",
																"nodeType": "YulIdentifier",
																"src": "2430:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1623,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1619,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:7",
														"valueSize": 1
													}
												],
												"id": 1625,
												"nodeType": "InlineAssembly",
												"src": "2397:47:7"
											}
										]
									},
									"documentation": {
										"id": 1617,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:7",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "2284:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1618,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:7"
									},
									"returnParameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "2321:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1585_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1622,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1621,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1585,
														"src": "2321:11:7"
													},
													"referencedDeclaration": 1585,
													"src": "2321:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1585_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:7"
									},
									"scope": 1683,
									"src": "2260:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "2632:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:7",
													"nodeType": "YulBlock",
													"src": "2694:38:7",
													"statements": [
														{
															"nativeSrc": "2708:14:7",
															"nodeType": "YulAssignment",
															"src": "2708:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:7",
																"nodeType": "YulIdentifier",
																"src": "2718:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1634,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1630,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:7",
														"valueSize": 1
													}
												],
												"id": 1636,
												"nodeType": "InlineAssembly",
												"src": "2685:47:7"
											}
										]
									},
									"documentation": {
										"id": 1628,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:7",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "2572:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1629,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:7"
									},
									"returnParameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "2609:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1588_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1633,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1632,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1588,
														"src": "2609:11:7"
													},
													"referencedDeclaration": 1588,
													"src": "2609:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1588_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:7"
									},
									"scope": 1683,
									"src": "2548:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1648,
										"nodeType": "Block",
										"src": "2917:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:7",
													"nodeType": "YulBlock",
													"src": "2979:38:7",
													"statements": [
														{
															"nativeSrc": "2993:14:7",
															"nodeType": "YulAssignment",
															"src": "2993:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:7",
																"nodeType": "YulIdentifier",
																"src": "3003:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1645,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1641,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:7",
														"valueSize": 1
													}
												],
												"id": 1647,
												"nodeType": "InlineAssembly",
												"src": "2970:47:7"
											}
										]
									},
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:7",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "2858:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1640,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:7"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "2895:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1591_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1644,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1643,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1591,
														"src": "2895:10:7"
													},
													"referencedDeclaration": 1591,
													"src": "2895:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1591_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:7"
									},
									"scope": 1683,
									"src": "2835:188:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "3225:112:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:7",
													"nodeType": "YulBlock",
													"src": "3287:44:7",
													"statements": [
														{
															"nativeSrc": "3301:20:7",
															"nodeType": "YulAssignment",
															"src": "3301:20:7",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:7",
																"nodeType": "YulIdentifier",
																"src": "3311:10:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1656,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1652,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:7",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1658,
												"nodeType": "InlineAssembly",
												"src": "3278:53:7"
											}
										]
									},
									"documentation": {
										"id": 1650,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:7",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "3158:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1651,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:7"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "3203:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1591_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1655,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1654,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1591,
														"src": "3203:10:7"
													},
													"referencedDeclaration": 1591,
													"src": "3203:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1591_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:7"
									},
									"scope": 1683,
									"src": "3135:202:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1670,
										"nodeType": "Block",
										"src": "3513:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:7",
													"nodeType": "YulBlock",
													"src": "3575:38:7",
													"statements": [
														{
															"nativeSrc": "3589:14:7",
															"nodeType": "YulAssignment",
															"src": "3589:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:7",
																"nodeType": "YulIdentifier",
																"src": "3599:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1667,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1663,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:7",
														"valueSize": 1
													}
												],
												"id": 1669,
												"nodeType": "InlineAssembly",
												"src": "3566:47:7"
											}
										]
									},
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:7",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "3455:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1662,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:7"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "3492:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1594_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1666,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1665,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1594,
														"src": "3492:9:7"
													},
													"referencedDeclaration": 1594,
													"src": "3492:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1594_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:7"
									},
									"scope": 1683,
									"src": "3433:186:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1681,
										"nodeType": "Block",
										"src": "3816:112:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:7",
													"nodeType": "YulBlock",
													"src": "3878:44:7",
													"statements": [
														{
															"nativeSrc": "3892:20:7",
															"nodeType": "YulAssignment",
															"src": "3892:20:7",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:7",
																"nodeType": "YulIdentifier",
																"src": "3902:10:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1678,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1674,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:7",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1680,
												"nodeType": "InlineAssembly",
												"src": "3869:53:7"
											}
										]
									},
									"documentation": {
										"id": 1672,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:7",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "3751:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1673,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:7"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "3795:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1594_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1677,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1676,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1594,
														"src": "3795:9:7"
													},
													"referencedDeclaration": 1594,
													"src": "3795:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1594_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:7"
									},
									"scope": 1683,
									"src": "3729:199:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1684,
							"src": "1245:2685:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1707
						],
						"IERC165": [
							1719
						]
					},
					"id": 1708,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1685,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1687,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1708,
							"sourceUnit": 1720,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1686,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1719,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1689,
										"name": "IERC165",
										"nameLocations": [
											"687:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1719,
										"src": "687:7:8"
									},
									"id": 1690,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1688,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1707,
							"linearizedBaseContracts": [
								1707,
								1719
							],
							"name": "ERC165",
							"nameLocation": "677:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1718
									],
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "844:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1698,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "861:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1700,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1719,
																	"src": "881:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1719_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1719_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1699,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1719",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1702,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1697,
												"id": 1704,
												"nodeType": "Return",
												"src": "854:47:8"
											}
										]
									},
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "789:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1692,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:8"
									},
									"returnParameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "838:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1695,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:8"
									},
									"scope": 1707,
									"src": "762:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1708,
							"src": "659:251:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1719
						]
					},
					"id": 1720,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1709,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1710,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1719,
							"linearizedBaseContracts": [
								1719
							],
							"name": "IERC165",
							"nameLocation": "431:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1711,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "817:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1712,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:9"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "860:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:9"
									},
									"scope": 1719,
									"src": "790:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1720,
							"src": "421:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts@5.0.0/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2773
						]
					},
					"id": 2774,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1721,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1722,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2773,
							"linearizedBaseContracts": [
								2773
							],
							"name": "Math",
							"nameLocation": "211:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1723,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:10",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1725,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:10"
									},
									"src": "277:29:10"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1730,
									"members": [
										{
											"id": 1726,
											"name": "Floor",
											"nameLocation": "336:5:10",
											"nodeType": "EnumValue",
											"src": "336:5:10"
										},
										{
											"id": 1727,
											"name": "Ceil",
											"nameLocation": "379:4:10",
											"nodeType": "EnumValue",
											"src": "379:4:10"
										},
										{
											"id": 1728,
											"name": "Trunc",
											"nameLocation": "421:5:10",
											"nodeType": "EnumValue",
											"src": "421:5:10"
										},
										{
											"id": 1729,
											"name": "Expand",
											"nameLocation": "451:6:10",
											"nodeType": "EnumValue",
											"src": "451:6:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:10",
									"nodeType": "EnumDefinition",
									"src": "312:169:10"
								},
								{
									"body": {
										"id": 1761,
										"nodeType": "Block",
										"src": "661:140:10",
										"statements": [
											{
												"id": 1760,
												"nodeType": "UncheckedBlock",
												"src": "671:124:10",
												"statements": [
													{
														"assignments": [
															1743
														],
														"declarations": [
															{
																"constant": false,
																"id": 1743,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1760,
																"src": "695:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1742,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1747,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1744,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1733,
																"src": "707:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1745,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1735,
																"src": "711:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1748,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1743,
																"src": "730:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1749,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1733,
																"src": "734:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1755,
														"nodeType": "IfStatement",
														"src": "726:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1753,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1741,
															"id": 1754,
															"nodeType": "Return",
															"src": "737:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1757,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1743,
																	"src": "782:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1758,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1741,
														"id": 1759,
														"nodeType": "Return",
														"src": "768:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1731,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:10",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "612:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:10"
									},
									"returnParameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "646:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1737,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "652:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:10"
									},
									"scope": 2773,
									"src": "585:216:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1789,
										"nodeType": "Block",
										"src": "984:113:10",
										"statements": [
											{
												"id": 1788,
												"nodeType": "UncheckedBlock",
												"src": "994:97:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1774,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1767,
																"src": "1022:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1775,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1765,
																"src": "1026:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1781,
														"nodeType": "IfStatement",
														"src": "1018:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1779,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1773,
															"id": 1780,
															"nodeType": "Return",
															"src": "1029:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1783,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1765,
																		"src": "1074:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1784,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1767,
																		"src": "1078:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1786,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1773,
														"id": 1787,
														"nodeType": "Return",
														"src": "1060:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "924:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "935:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:10"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "969:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1769,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "975:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:10"
									},
									"scope": 2773,
									"src": "908:189:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1831,
										"nodeType": "Block",
										"src": "1283:417:10",
										"statements": [
											{
												"id": 1830,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1802,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1793,
																"src": "1551:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1809,
														"nodeType": "IfStatement",
														"src": "1547:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1807,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1801,
															"id": 1808,
															"nodeType": "Return",
															"src": "1559:16:10"
														}
													},
													{
														"assignments": [
															1811
														],
														"declarations": [
															{
																"constant": false,
																"id": 1811,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1830,
																"src": "1589:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1810,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1815,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1812,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1793,
																"src": "1601:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1813,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1795,
																"src": "1605:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1816,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1811,
																	"src": "1624:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1817,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1793,
																	"src": "1628:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1819,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1795,
																"src": "1633:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1825,
														"nodeType": "IfStatement",
														"src": "1620:33:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1823,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1801,
															"id": 1824,
															"nodeType": "Return",
															"src": "1636:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1827,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1811,
																	"src": "1681:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1828,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1801,
														"id": 1829,
														"nodeType": "Return",
														"src": "1667:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1791,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "1223:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "1234:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:10"
									},
									"returnParameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "1268:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1797,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "1274:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:10"
									},
									"scope": 2773,
									"src": "1207:493:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1859,
										"nodeType": "Block",
										"src": "1887:114:10",
										"statements": [
											{
												"id": 1858,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1844,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1837,
																"src": "1925:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1851,
														"nodeType": "IfStatement",
														"src": "1921:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1849,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1843,
															"id": 1850,
															"nodeType": "Return",
															"src": "1933:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1853,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1835,
																		"src": "1978:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1854,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1837,
																		"src": "1982:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1856,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1843,
														"id": 1857,
														"nodeType": "Return",
														"src": "1964:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1833,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:10",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "1827:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "1838:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:10"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "1872:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1839,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "1878:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:10"
									},
									"scope": 2773,
									"src": "1811:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1887,
										"nodeType": "Block",
										"src": "2198:114:10",
										"statements": [
											{
												"id": 1886,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1872,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1865,
																"src": "2236:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1879,
														"nodeType": "IfStatement",
														"src": "2232:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1877,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1871,
															"id": 1878,
															"nodeType": "Return",
															"src": "2244:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1881,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1863,
																		"src": "2289:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1882,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1865,
																		"src": "2293:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1884,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1871,
														"id": 1885,
														"nodeType": "Return",
														"src": "2275:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1861,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "2138:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "2149:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:10"
									},
									"returnParameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "2183:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1867,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "2189:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:10"
									},
									"scope": 2773,
									"src": "2122:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1905,
										"nodeType": "Block",
										"src": "2449:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1898,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1891,
															"src": "2466:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1899,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1893,
															"src": "2470:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1902,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1893,
														"src": "2478:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:10",
													"trueExpression": {
														"id": 1901,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1891,
														"src": "2474:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1897,
												"id": 1904,
												"nodeType": "Return",
												"src": "2459:20:10"
											}
										]
									},
									"documentation": {
										"id": 1889,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "2395:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "2406:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:10"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "2440:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:10"
									},
									"scope": 2773,
									"src": "2382:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1923,
										"nodeType": "Block",
										"src": "2624:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1916,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "2641:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1917,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "2645:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1920,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1911,
														"src": "2653:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:10",
													"trueExpression": {
														"id": 1919,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "2649:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1915,
												"id": 1922,
												"nodeType": "Return",
												"src": "2634:20:10"
											}
										]
									},
									"documentation": {
										"id": 1907,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "2570:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "2581:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:10"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "2615:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:10"
									},
									"scope": 2773,
									"src": "2557:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1946,
										"nodeType": "Block",
										"src": "2845:82:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1934,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1927,
																	"src": "2900:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1935,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1929,
																	"src": "2904:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1937,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1938,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1927,
																		"src": "2910:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1939,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1929,
																		"src": "2914:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1941,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1933,
												"id": 1945,
												"nodeType": "Return",
												"src": "2892:28:10"
											}
										]
									},
									"documentation": {
										"id": 1925,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "2791:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "2802:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:10"
									},
									"returnParameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "2836:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:10"
									},
									"scope": 2773,
									"src": "2774:153:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1980,
										"nodeType": "Block",
										"src": "3219:260:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1957,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1952,
														"src": "3233:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1958,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1965,
												"nodeType": "IfStatement",
												"src": "3229:127:10",
												"trueBody": {
													"id": 1964,
													"nodeType": "Block",
													"src": "3241:115:10",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1960,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1950,
																	"src": "3340:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1961,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "3344:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1956,
															"id": 1963,
															"nodeType": "Return",
															"src": "3333:12:10"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1966,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "3444:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1970,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1950,
																			"src": "3458:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1973,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1974,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1952,
																"src": "3467:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:10",
													"trueExpression": {
														"hexValue": "30",
														"id": 1969,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1956,
												"id": 1979,
												"nodeType": "Return",
												"src": "3437:35:10"
											}
										]
									},
									"documentation": {
										"id": 1948,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "3165:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "3176:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:10"
									},
									"returnParameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "3210:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:10"
									},
									"scope": 2773,
									"src": "3148:331:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2106,
										"nodeType": "Block",
										"src": "3901:4018:10",
										"statements": [
											{
												"id": 2105,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:10",
												"statements": [
													{
														"assignments": [
															1994
														],
														"declarations": [
															{
																"constant": false,
																"id": 1994,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2105,
																"src": "4232:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1993,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1998,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1995,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1984,
																"src": "4248:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1996,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1986,
																"src": "4252:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:10"
													},
													{
														"assignments": [
															2000
														],
														"declarations": [
															{
																"constant": false,
																"id": 2000,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2105,
																"src": "4312:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1999,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2001,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:10"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:10",
															"nodeType": "YulBlock",
															"src": "4392:122:10",
															"statements": [
																{
																	"nativeSrc": "4410:30:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:10"
																				},
																				"nativeSrc": "4433:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:10"
																		},
																		"nativeSrc": "4420:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:10"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:10",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:10",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:10"
																				},
																				"nativeSrc": "4470:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:10"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:10"
																				},
																				"nativeSrc": "4486:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:10"
																		},
																		"nativeSrc": "4466:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1994,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1994,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2000,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1984,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1986,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:10",
																"valueSize": 1
															}
														],
														"id": 2002,
														"nodeType": "InlineAssembly",
														"src": "4383:131:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2003,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2000,
																"src": "4595:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2011,
														"nodeType": "IfStatement",
														"src": "4591:368:10",
														"trueBody": {
															"id": 2010,
															"nodeType": "Block",
															"src": "4607:352:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2006,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1994,
																			"src": "4925:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2007,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1988,
																			"src": "4933:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1992,
																	"id": 2009,
																	"nodeType": "Return",
																	"src": "4918:26:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2012,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1988,
																"src": "5065:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2013,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2000,
																"src": "5080:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2019,
														"nodeType": "IfStatement",
														"src": "5061:88:10",
														"trueBody": {
															"id": 2018,
															"nodeType": "Block",
															"src": "5087:62:10",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2015,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1725,
																			"src": "5112:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2017,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:10"
																}
															]
														}
													},
													{
														"assignments": [
															2021
														],
														"declarations": [
															{
																"constant": false,
																"id": 2021,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 2105,
																"src": "5404:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2020,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2022,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:10"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:10",
															"nodeType": "YulBlock",
															"src": "5444:291:10",
															"statements": [
																{
																	"nativeSrc": "5513:38:10",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:10"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:10"
																		},
																		"nativeSrc": "5526:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:10",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:10"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:10",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:10"
																				},
																				"nativeSrc": "5653:20:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:10"
																		},
																		"nativeSrc": "5642:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:10",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:10"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:10"
																		},
																		"nativeSrc": "5700:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1988,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1994,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1994,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1994,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2000,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2000,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2021,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2021,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2021,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1984,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1986,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:10",
																"valueSize": 1
															}
														],
														"id": 2023,
														"nodeType": "InlineAssembly",
														"src": "5435:300:10"
													},
													{
														"assignments": [
															2025
														],
														"declarations": [
															{
																"constant": false,
																"id": 2025,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 2105,
																"src": "5939:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2024,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2032,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2026,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1988,
																"src": "5954:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2028,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1988,
																			"src": "5973:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2030,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:10"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:10",
															"nodeType": "YulBlock",
															"src": "6008:362:10",
															"statements": [
																{
																	"nativeSrc": "6073:37:10",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:10"
																		},
																		"nativeSrc": "6088:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:10",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:10",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:10"
																		},
																		"nativeSrc": "6186:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:10",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:10",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:10"
																						},
																						"nativeSrc": "6333:12:10",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:10"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:10"
																				},
																				"nativeSrc": "6329:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:10"
																		},
																		"nativeSrc": "6325:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:10",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1988,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1988,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1994,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1994,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2025,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2025,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2025,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2025,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2025,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:10",
																"valueSize": 1
															}
														],
														"id": 2033,
														"nodeType": "InlineAssembly",
														"src": "5999:371:10"
													},
													{
														"expression": {
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2034,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1994,
																"src": "6436:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2035,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2000,
																	"src": "6445:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2036,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2025,
																	"src": "6453:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2039,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:10"
													},
													{
														"assignments": [
															2041
														],
														"declarations": [
															{
																"constant": false,
																"id": 2041,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 2105,
																"src": "6775:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2040,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2048,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2043,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1988,
																			"src": "6798:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2045,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2046,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:10"
													},
													{
														"expression": {
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2049,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2041,
																"src": "7031:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2051,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1988,
																		"src": "7046:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2052,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2041,
																		"src": "7060:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2056,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:10"
													},
													{
														"expression": {
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2057,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2041,
																"src": "7100:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2059,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1988,
																		"src": "7115:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2060,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2041,
																		"src": "7129:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2064,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:10"
													},
													{
														"expression": {
															"id": 2071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2065,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2041,
																"src": "7170:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2067,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1988,
																		"src": "7185:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2068,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2041,
																		"src": "7199:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2072,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:10"
													},
													{
														"expression": {
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2073,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2041,
																"src": "7240:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2075,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1988,
																		"src": "7255:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2076,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2041,
																		"src": "7269:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2080,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:10"
													},
													{
														"expression": {
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2081,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2041,
																"src": "7310:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2083,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1988,
																		"src": "7325:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2084,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2041,
																		"src": "7339:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2088,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:10"
													},
													{
														"expression": {
															"id": 2095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2089,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2041,
																"src": "7381:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2091,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1988,
																		"src": "7396:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2092,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2041,
																		"src": "7410:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2096,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:10"
													},
													{
														"expression": {
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2097,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1991,
																"src": "7851:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2098,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1994,
																	"src": "7860:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2099,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2041,
																	"src": "7868:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2102,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:10"
													},
													{
														"expression": {
															"id": 2103,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1991,
															"src": "7896:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1992,
														"id": 2104,
														"nodeType": "Return",
														"src": "7889:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1982,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:10",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "3819:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "3830:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "3841:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:10"
									},
									"returnParameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "3885:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:10"
									},
									"scope": 2773,
									"src": "3803:4116:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2149,
										"nodeType": "Block",
										"src": "8161:192:10",
										"statements": [
											{
												"assignments": [
													2123
												],
												"declarations": [
													{
														"constant": false,
														"id": 2123,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2149,
														"src": "8171:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2129,
												"initialValue": {
													"arguments": [
														{
															"id": 2125,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2110,
															"src": "8195:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2126,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2112,
															"src": "8198:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2127,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2114,
															"src": "8201:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2124,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2107,
															2150
														],
														"referencedDeclaration": 2107,
														"src": "8188:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2131,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2117,
																"src": "8244:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1730",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1730",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2130,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2772,
															"src": "8227:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1730_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2134,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "8264:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2135,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2112,
																	"src": "8267:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2136,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2114,
																	"src": "8270:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2133,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2146,
												"nodeType": "IfStatement",
												"src": "8223:101:10",
												"trueBody": {
													"id": 2145,
													"nodeType": "Block",
													"src": "8288:36:10",
													"statements": [
														{
															"expression": {
																"id": 2143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2141,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2123,
																	"src": "8302:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2144,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2147,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2123,
													"src": "8340:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2121,
												"id": 2148,
												"nodeType": "Return",
												"src": "8333:13:10"
											}
										]
									},
									"documentation": {
										"id": 2108,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:10",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "8067:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "8078:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "8089:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "8110:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1730",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2116,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2115,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1730,
														"src": "8110:8:10"
													},
													"referencedDeclaration": 1730,
													"src": "8110:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1730",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:10"
									},
									"returnParameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "8152:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:10"
									},
									"scope": 2773,
									"src": "8051:302:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2261,
										"nodeType": "Block",
										"src": "8644:1585:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2158,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2153,
														"src": "8658:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2164,
												"nodeType": "IfStatement",
												"src": "8654:45:10",
												"trueBody": {
													"id": 2163,
													"nodeType": "Block",
													"src": "8666:33:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2157,
															"id": 2162,
															"nodeType": "Return",
															"src": "8680:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													2166
												],
												"declarations": [
													{
														"constant": false,
														"id": 2166,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2261,
														"src": "9378:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2165,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2175,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2169,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2153,
																			"src": "9406:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2168,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2429,
																			2464
																		],
																		"referencedDeclaration": 2429,
																		"src": "9401:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2173,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:10"
											},
											{
												"id": 2260,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:10",
												"statements": [
													{
														"expression": {
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2176,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "9839:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2177,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2166,
																				"src": "9849:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2180,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2178,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2153,
																					"src": "9858:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2179,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2166,
																					"src": "9862:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2182,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2186,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:10"
													},
													{
														"expression": {
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2187,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "9888:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2188,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2166,
																				"src": "9898:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2191,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2189,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2153,
																					"src": "9907:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2190,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2166,
																					"src": "9911:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2193,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2197,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:10"
													},
													{
														"expression": {
															"id": 2207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2198,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "9937:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2199,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2166,
																				"src": "9947:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2202,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2200,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2153,
																					"src": "9956:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2201,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2166,
																					"src": "9960:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2204,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2208,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:10"
													},
													{
														"expression": {
															"id": 2218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2209,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "9986:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2210,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2166,
																				"src": "9996:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2213,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2211,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2153,
																					"src": "10005:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2212,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2166,
																					"src": "10009:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2215,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2219,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:10"
													},
													{
														"expression": {
															"id": 2229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2220,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "10035:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2221,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2166,
																				"src": "10045:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2224,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2222,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2153,
																					"src": "10054:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2223,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2166,
																					"src": "10058:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2226,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2230,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:10"
													},
													{
														"expression": {
															"id": 2240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2231,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "10084:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2232,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2166,
																				"src": "10094:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2235,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2233,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2153,
																					"src": "10103:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2234,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2166,
																					"src": "10107:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2237,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2241,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:10"
													},
													{
														"expression": {
															"id": 2251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2242,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "10133:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2243,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2166,
																				"src": "10143:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2246,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2244,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2153,
																					"src": "10152:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2245,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2166,
																					"src": "10156:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2248,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2252,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2254,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2166,
																	"src": "10193:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2255,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2153,
																		"src": "10201:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2256,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2166,
																		"src": "10205:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2253,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1924,
																"src": "10189:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2157,
														"id": 2259,
														"nodeType": "Return",
														"src": "10182:30:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2151,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "8601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:10"
									},
									"returnParameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "8635:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:10"
									},
									"scope": 2773,
									"src": "8587:1642:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2296,
										"nodeType": "Block",
										"src": "10405:164:10",
										"statements": [
											{
												"id": 2295,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:10",
												"statements": [
													{
														"assignments": [
															2274
														],
														"declarations": [
															{
																"constant": false,
																"id": 2274,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2295,
																"src": "10439:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2273,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2278,
														"initialValue": {
															"arguments": [
																{
																	"id": 2276,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2265,
																	"src": "10461:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2275,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2262,
																	2297
																],
																"referencedDeclaration": 2262,
																"src": "10456:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2279,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2274,
																"src": "10484:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2281,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2268,
																						"src": "10511:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1730",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1730",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2280,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2772,
																					"src": "10494:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1730_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2282,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2285,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2283,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2274,
																						"src": "10524:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2284,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2274,
																						"src": "10533:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2286,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2265,
																					"src": "10542:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2292,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2272,
														"id": 2294,
														"nodeType": "Return",
														"src": "10477:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2263,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:10",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "10343:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "10354:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1730",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2266,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1730,
														"src": "10354:8:10"
													},
													"referencedDeclaration": 1730,
													"src": "10354:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1730",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:10"
									},
									"returnParameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "10396:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:10"
									},
									"scope": 2773,
									"src": "10329:240:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2428,
										"nodeType": "Block",
										"src": "10760:922:10",
										"statements": [
											{
												"assignments": [
													2306
												],
												"declarations": [
													{
														"constant": false,
														"id": 2306,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2428,
														"src": "10770:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2308,
												"initialValue": {
													"hexValue": "30",
													"id": 2307,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:10"
											},
											{
												"id": 2425,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2309,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "10826:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2323,
														"nodeType": "IfStatement",
														"src": "10822:99:10",
														"trueBody": {
															"id": 2322,
															"nodeType": "Block",
															"src": "10844:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2314,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2300,
																			"src": "10862:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2317,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:10"
																},
																{
																	"expression": {
																		"id": 2320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2318,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2306,
																			"src": "10893:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2321,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2324,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "10938:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2338,
														"nodeType": "IfStatement",
														"src": "10934:96:10",
														"trueBody": {
															"id": 2337,
															"nodeType": "Block",
															"src": "10955:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2329,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2300,
																			"src": "10973:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2332,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:10"
																},
																{
																	"expression": {
																		"id": 2335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2333,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2306,
																			"src": "11003:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2336,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2339,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "11047:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2353,
														"nodeType": "IfStatement",
														"src": "11043:96:10",
														"trueBody": {
															"id": 2352,
															"nodeType": "Block",
															"src": "11064:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2344,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2300,
																			"src": "11082:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2347,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:10"
																},
																{
																	"expression": {
																		"id": 2350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2348,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2306,
																			"src": "11112:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2351,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2354,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "11156:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2368,
														"nodeType": "IfStatement",
														"src": "11152:96:10",
														"trueBody": {
															"id": 2367,
															"nodeType": "Block",
															"src": "11173:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2359,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2300,
																			"src": "11191:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2362,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:10"
																},
																{
																	"expression": {
																		"id": 2365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2363,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2306,
																			"src": "11221:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2366,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2369,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "11265:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2383,
														"nodeType": "IfStatement",
														"src": "11261:93:10",
														"trueBody": {
															"id": 2382,
															"nodeType": "Block",
															"src": "11281:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2374,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2300,
																			"src": "11299:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2377,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:10"
																},
																{
																	"expression": {
																		"id": 2380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2378,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2306,
																			"src": "11328:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2381,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2384,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "11371:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2398,
														"nodeType": "IfStatement",
														"src": "11367:93:10",
														"trueBody": {
															"id": 2397,
															"nodeType": "Block",
															"src": "11387:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2389,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2300,
																			"src": "11405:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2392,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:10"
																},
																{
																	"expression": {
																		"id": 2395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2393,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2306,
																			"src": "11434:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2396,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2399,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "11477:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2413,
														"nodeType": "IfStatement",
														"src": "11473:93:10",
														"trueBody": {
															"id": 2412,
															"nodeType": "Block",
															"src": "11493:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2404,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2300,
																			"src": "11511:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2407,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:10"
																},
																{
																	"expression": {
																		"id": 2410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2408,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2306,
																			"src": "11540:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2411,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2414,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "11583:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2424,
														"nodeType": "IfStatement",
														"src": "11579:64:10",
														"trueBody": {
															"id": 2423,
															"nodeType": "Block",
															"src": "11599:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2419,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2306,
																			"src": "11617:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2422,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2426,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2306,
													"src": "11669:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2304,
												"id": 2427,
												"nodeType": "Return",
												"src": "11662:13:10"
											}
										]
									},
									"documentation": {
										"id": 2298,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:10",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "10713:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:10"
									},
									"returnParameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "10751:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:10"
									},
									"scope": 2773,
									"src": "10699:983:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2463,
										"nodeType": "Block",
										"src": "11915:168:10",
										"statements": [
											{
												"id": 2462,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:10",
												"statements": [
													{
														"assignments": [
															2441
														],
														"declarations": [
															{
																"constant": false,
																"id": 2441,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2462,
																"src": "11949:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2440,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2445,
														"initialValue": {
															"arguments": [
																{
																	"id": 2443,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "11971:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2442,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2429,
																	2464
																],
																"referencedDeclaration": 2429,
																"src": "11966:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2446,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2441,
																"src": "11998:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2448,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2435,
																						"src": "12025:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1730",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1730",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2447,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2772,
																					"src": "12008:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1730_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2454,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2452,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2450,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2451,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2441,
																						"src": "12043:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2453,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2432,
																					"src": "12052:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2459,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2439,
														"id": 2461,
														"nodeType": "Return",
														"src": "11991:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2430,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "11849:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "11864:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1730",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2434,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2433,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1730,
														"src": "11864:8:10"
													},
													"referencedDeclaration": 1730,
													"src": "11864:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1730",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:10"
									},
									"returnParameters": {
										"id": 2439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "11906:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:10"
									},
									"scope": 2773,
									"src": "11835:248:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2592,
										"nodeType": "Block",
										"src": "12276:854:10",
										"statements": [
											{
												"assignments": [
													2473
												],
												"declarations": [
													{
														"constant": false,
														"id": 2473,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2592,
														"src": "12286:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2472,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2475,
												"initialValue": {
													"hexValue": "30",
													"id": 2474,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:10"
											},
											{
												"id": 2589,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2476,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2467,
																"src": "12342:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2492,
														"nodeType": "IfStatement",
														"src": "12338:103:10",
														"trueBody": {
															"id": 2491,
															"nodeType": "Block",
															"src": "12361:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2481,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2467,
																			"src": "12379:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2482,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2486,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:10"
																},
																{
																	"expression": {
																		"id": 2489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2487,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "12414:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2490,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2493,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2467,
																"src": "12458:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2509,
														"nodeType": "IfStatement",
														"src": "12454:103:10",
														"trueBody": {
															"id": 2508,
															"nodeType": "Block",
															"src": "12477:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2498,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2467,
																			"src": "12495:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2499,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2500,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2503,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:10"
																},
																{
																	"expression": {
																		"id": 2506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2504,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "12530:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2507,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2510,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2467,
																"src": "12574:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2526,
														"nodeType": "IfStatement",
														"src": "12570:103:10",
														"trueBody": {
															"id": 2525,
															"nodeType": "Block",
															"src": "12593:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2515,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2467,
																			"src": "12611:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2517,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2520,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:10"
																},
																{
																	"expression": {
																		"id": 2523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2521,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "12646:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2524,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2527,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2467,
																"src": "12690:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2543,
														"nodeType": "IfStatement",
														"src": "12686:100:10",
														"trueBody": {
															"id": 2542,
															"nodeType": "Block",
															"src": "12708:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2532,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2467,
																			"src": "12726:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2537,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:10"
																},
																{
																	"expression": {
																		"id": 2540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2538,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "12760:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2541,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2544,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2467,
																"src": "12803:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2560,
														"nodeType": "IfStatement",
														"src": "12799:100:10",
														"trueBody": {
															"id": 2559,
															"nodeType": "Block",
															"src": "12821:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2549,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2467,
																			"src": "12839:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2550,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2551,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2554,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:10"
																},
																{
																	"expression": {
																		"id": 2557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2555,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "12873:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2558,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2561,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2467,
																"src": "12916:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2577,
														"nodeType": "IfStatement",
														"src": "12912:100:10",
														"trueBody": {
															"id": 2576,
															"nodeType": "Block",
															"src": "12934:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2566,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2467,
																			"src": "12952:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2571,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:10"
																},
																{
																	"expression": {
																		"id": 2574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2572,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "12986:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2575,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2578,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2467,
																"src": "13029:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2588,
														"nodeType": "IfStatement",
														"src": "13025:66:10",
														"trueBody": {
															"id": 2587,
															"nodeType": "Block",
															"src": "13047:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2583,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "13065:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2586,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2590,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2473,
													"src": "13117:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2471,
												"id": 2591,
												"nodeType": "Return",
												"src": "13110:13:10"
											}
										]
									},
									"documentation": {
										"id": 2465,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:10",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "12229:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:10"
									},
									"returnParameters": {
										"id": 2471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "12267:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:10"
									},
									"scope": 2773,
									"src": "12214:916:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2627,
										"nodeType": "Block",
										"src": "13365:170:10",
										"statements": [
											{
												"id": 2626,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:10",
												"statements": [
													{
														"assignments": [
															2605
														],
														"declarations": [
															{
																"constant": false,
																"id": 2605,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2626,
																"src": "13399:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2604,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2609,
														"initialValue": {
															"arguments": [
																{
																	"id": 2607,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2596,
																	"src": "13422:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2606,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2593,
																	2628
																],
																"referencedDeclaration": 2593,
																"src": "13416:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2610,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2605,
																"src": "13449:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2619,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2612,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2599,
																						"src": "13476:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1730",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1730",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2611,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2772,
																					"src": "13459:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1730_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2618,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2616,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2614,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2615,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2605,
																						"src": "13495:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2617,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2596,
																					"src": "13504:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2623,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2603,
														"id": 2625,
														"nodeType": "Return",
														"src": "13442:76:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2594,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "13299:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2599,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "13314:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1730",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2598,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2597,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1730,
														"src": "13314:8:10"
													},
													"referencedDeclaration": 1730,
													"src": "13314:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1730",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:10"
									},
									"returnParameters": {
										"id": 2603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "13356:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:10"
									},
									"scope": 2773,
									"src": "13284:251:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2714,
										"nodeType": "Block",
										"src": "13855:600:10",
										"statements": [
											{
												"assignments": [
													2637
												],
												"declarations": [
													{
														"constant": false,
														"id": 2637,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2714,
														"src": "13865:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2636,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2639,
												"initialValue": {
													"hexValue": "30",
													"id": 2638,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:10"
											},
											{
												"id": 2711,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2640,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2631,
																	"src": "13921:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2654,
														"nodeType": "IfStatement",
														"src": "13917:98:10",
														"trueBody": {
															"id": 2653,
															"nodeType": "Block",
															"src": "13939:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2645,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2631,
																			"src": "13957:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2648,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:10"
																},
																{
																	"expression": {
																		"id": 2651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2649,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2637,
																			"src": "13988:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2652,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2655,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2631,
																	"src": "14032:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2658,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2669,
														"nodeType": "IfStatement",
														"src": "14028:95:10",
														"trueBody": {
															"id": 2668,
															"nodeType": "Block",
															"src": "14049:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2660,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2631,
																			"src": "14067:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2663,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:10"
																},
																{
																	"expression": {
																		"id": 2666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2664,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2637,
																			"src": "14097:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2667,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2670,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2631,
																	"src": "14140:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2684,
														"nodeType": "IfStatement",
														"src": "14136:95:10",
														"trueBody": {
															"id": 2683,
															"nodeType": "Block",
															"src": "14157:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2675,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2631,
																			"src": "14175:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2678,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:10"
																},
																{
																	"expression": {
																		"id": 2681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2679,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2637,
																			"src": "14205:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2682,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2685,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2631,
																	"src": "14248:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2699,
														"nodeType": "IfStatement",
														"src": "14244:95:10",
														"trueBody": {
															"id": 2698,
															"nodeType": "Block",
															"src": "14265:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2690,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2631,
																			"src": "14283:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2693,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:10"
																},
																{
																	"expression": {
																		"id": 2696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2694,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2637,
																			"src": "14313:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2697,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2700,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2631,
																	"src": "14356:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2710,
														"nodeType": "IfStatement",
														"src": "14352:64:10",
														"trueBody": {
															"id": 2709,
															"nodeType": "Block",
															"src": "14372:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2705,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2637,
																			"src": "14390:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2708,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2712,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2637,
													"src": "14442:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2635,
												"id": 2713,
												"nodeType": "Return",
												"src": "14435:13:10"
											}
										]
									},
									"documentation": {
										"id": 2629,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:10",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2631,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2715,
												"src": "13808:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:10"
									},
									"returnParameters": {
										"id": 2635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2715,
												"src": "13846:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:10"
									},
									"scope": 2773,
									"src": "13792:663:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2752,
										"nodeType": "Block",
										"src": "14692:177:10",
										"statements": [
											{
												"id": 2751,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:10",
												"statements": [
													{
														"assignments": [
															2727
														],
														"declarations": [
															{
																"constant": false,
																"id": 2727,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2751,
																"src": "14726:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2726,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2731,
														"initialValue": {
															"arguments": [
																{
																	"id": 2729,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2718,
																	"src": "14750:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2728,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2715,
																	2753
																],
																"referencedDeclaration": 2715,
																"src": "14743:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2732,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2727,
																"src": "14777:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2734,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2721,
																						"src": "14804:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1730",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1730",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2733,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2772,
																					"src": "14787:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1730_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2735,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2743,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2741,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2736,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2739,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2737,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2727,
																									"src": "14823:6:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2738,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2740,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2742,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2718,
																					"src": "14838:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2748,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2725,
														"id": 2750,
														"nodeType": "Return",
														"src": "14770:82:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2716,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:10",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2718,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "14626:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2721,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "14641:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1730",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2720,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2719,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1730,
														"src": "14641:8:10"
													},
													"referencedDeclaration": 1730,
													"src": "14641:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1730",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:10"
									},
									"returnParameters": {
										"id": 2725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "14683:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:10"
									},
									"scope": 2773,
									"src": "14610:259:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2771,
										"nodeType": "Block",
										"src": "15067:48:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2764,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2757,
																	"src": "15090:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1730",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1730",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2762,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2768,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2761,
												"id": 2770,
												"nodeType": "Return",
												"src": "15077:31:10"
											}
										]
									},
									"documentation": {
										"id": 2754,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:10",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "15019:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1730",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2756,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2755,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1730,
														"src": "15019:8:10"
													},
													"referencedDeclaration": 1730,
													"src": "15019:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1730",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:10"
									},
									"returnParameters": {
										"id": 2761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "15061:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2759,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:10"
									},
									"scope": 2773,
									"src": "14993:122:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2774,
							"src": "203:14914:10",
							"usedErrors": [
								1725
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:10"
				},
				"id": 10
			},
			"contracts/WOJAToken3.sol": {
				"ast": {
					"absolutePath": "contracts/WOJAToken3.sol",
					"exportedSymbols": {
						"Arrays": [
							1551
						],
						"Context": [
							1573
						],
						"ERC1155": [
							1187
						],
						"ERC165": [
							1707
						],
						"IERC1155": [
							1310
						],
						"IERC1155Errors": [
							136
						],
						"IERC1155MetadataURI": [
							1368
						],
						"IERC1155Receiver": [
							1352
						],
						"IERC165": [
							1719
						],
						"WOJA_Hero": [
							2794
						]
					},
					"id": 2795,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2775,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts@5.0.0/token/ERC1155/ERC1155.sol",
							"id": 2776,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2795,
							"sourceUnit": 1188,
							"src": "61:65:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2777,
										"name": "ERC1155",
										"nameLocations": [
											"152:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1187,
										"src": "152:7:11"
									},
									"id": 2778,
									"nodeType": "InheritanceSpecifier",
									"src": "152:7:11"
								}
							],
							"canonicalName": "WOJA_Hero",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2794,
							"linearizedBaseContracts": [
								2794,
								1187,
								136,
								1368,
								1310,
								1707,
								1719,
								1573
							],
							"name": "WOJA_Hero",
							"nameLocation": "139:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2792,
										"nodeType": "Block",
										"src": "295:47:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2785,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "312:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "316:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "312:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31",
															"id": 2787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "324:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "3130",
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "327:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														{
															"hexValue": "",
															"id": 2789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "331:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2784,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "306:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 2790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "306:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2791,
												"nodeType": "ExpressionStatement",
												"src": "306:28:11"
											}
										]
									},
									"id": 2793,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f576f726170616b6f726e4a6172757369726970686f742f4d795f4e46545f576f726b73686f702f6d61696e2f574f4a415f4865726f2e6a736f6e",
													"id": 2781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "189:94:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_99c456ce8103a063eadde2fefd34e0c93694ee0875780c5d3728db26ca2aaf27",
														"typeString": "literal_string \"https://raw.githubusercontent.com/WorapakornJarusiriphot/My_NFT_Workshop/main/WOJA_Hero.json\""
													},
													"value": "https://raw.githubusercontent.com/WorapakornJarusiriphot/My_NFT_Workshop/main/WOJA_Hero.json"
												}
											],
											"id": 2782,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2780,
												"name": "ERC1155",
												"nameLocations": [
													"181:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1187,
												"src": "181:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "181:103:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "178:2:11"
									},
									"returnParameters": {
										"id": 2783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "295:0:11"
									},
									"scope": 2794,
									"src": "167:175:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2795,
							"src": "130:215:11",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "33:312:11"
				},
				"id": 11
			}
		}
	}
}